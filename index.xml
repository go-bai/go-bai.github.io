<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Home on gobai's blog</title><link>/</link><description>Recent content in Home on gobai's blog</description><generator>Hugo</generator><language>en-us</language><atom:link href="/index.xml" rel="self" type="application/rss+xml"/><item><title>内存逃逸</title><link>/posts/golang-memory-escape/</link><pubDate>Wed, 05 Mar 2025 13:23:47 +0800</pubDate><guid>/posts/golang-memory-escape/</guid><description>&lt;h2 id="内存逃逸">
 内存逃逸
 &lt;a class="anchor" href="#%e5%86%85%e5%ad%98%e9%80%83%e9%80%b8">#&lt;/a>
&lt;/h2>
&lt;p>可以通过 &lt;code>go build -gcflags=-m main.go&lt;/code> 分析内存逃逸&lt;/p>
&lt;p>编译阶段不能确定大小的变量以及生命周期超出函数的局部变量数据都会逃逸到堆中。&lt;/p>
&lt;h3 id="1-指针逃逸">
 1. 指针逃逸
 &lt;a class="anchor" href="#1-%e6%8c%87%e9%92%88%e9%80%83%e9%80%b8">#&lt;/a>
&lt;/h3>
&lt;p>算是最常见的了，函数中初始化一个局部变量，返回了这个变量的指针，因为指针的存在，变量的内存不能随着函数结束而回收，因此只能分配在堆上。&lt;/p>
&lt;h3 id="2-interface-动态类型逃逸">
 2. &lt;code>interface{}&lt;/code> 动态类型逃逸
 &lt;a class="anchor" href="#2-interface-%e5%8a%a8%e6%80%81%e7%b1%bb%e5%9e%8b%e9%80%83%e9%80%b8">#&lt;/a>
&lt;/h3>
&lt;p>如果函数参数为 &lt;code>interface{}&lt;/code>，编译期间很难确定其参数的类型以及大小，也会发生逃逸。&lt;/p>
&lt;p>如传递给 &lt;code>fmt.Println()&lt;/code> 的参数&lt;/p>
&lt;h3 id="3-栈空间不足">
 3. 栈空间不足
 &lt;a class="anchor" href="#3-%e6%a0%88%e7%a9%ba%e9%97%b4%e4%b8%8d%e8%b6%b3">#&lt;/a>
&lt;/h3>
&lt;p>分配大变量，如大 slice，会有可能栈空间不足，然后编译器将其分配在堆上&lt;/p>
&lt;p>tcmalloc&lt;/p>
&lt;h3 id="4-闭包">
 4. 闭包
 &lt;a class="anchor" href="#4-%e9%97%ad%e5%8c%85">#&lt;/a>
&lt;/h3>
&lt;p>当一个闭包函数引用了外部变量并且会执行后续读写操作，则变量会被逃逸到堆上。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-golang" data-lang="golang">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">package&lt;/span> &lt;span style="color:#a6e22e">main&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">func&lt;/span> &lt;span style="color:#a6e22e">Increase&lt;/span>() &lt;span style="color:#66d9ef">func&lt;/span>() &lt;span style="color:#66d9ef">int&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#a6e22e">n&lt;/span> &lt;span style="color:#f92672">:=&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span> &lt;span style="color:#75715e">// move to heap&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#66d9ef">return&lt;/span> &lt;span style="color:#66d9ef">func&lt;/span>() &lt;span style="color:#66d9ef">int&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#a6e22e">n&lt;/span>&lt;span style="color:#f92672">++&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#66d9ef">return&lt;/span> &lt;span style="color:#a6e22e">n&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">func&lt;/span> &lt;span style="color:#a6e22e">main&lt;/span>() {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#a6e22e">in&lt;/span> &lt;span style="color:#f92672">:=&lt;/span> &lt;span style="color:#a6e22e">Increase&lt;/span>()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	println(&lt;span style="color:#a6e22e">in&lt;/span>()) &lt;span style="color:#75715e">// 1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>GC 垃圾回收</title><link>/posts/golang-gc/</link><pubDate>Wed, 05 Mar 2025 13:10:46 +0800</pubDate><guid>/posts/golang-gc/</guid><description>&lt;h2 id="gc-垃圾回收">
 GC 垃圾回收
 &lt;a class="anchor" href="#gc-%e5%9e%83%e5%9c%be%e5%9b%9e%e6%94%b6">#&lt;/a>
&lt;/h2>
&lt;p>分配在栈上的数据，随着函数调用栈的销毁便释放了自身占用的内存，可以被程序重复利用。&lt;/p>
&lt;p>协程栈也是从堆上分配的，也在 mheap 管理的 span 中，mspan.spanState 会记录该 span 是用作堆内存还是栈内存。&lt;/p>
&lt;p>而分配在堆上的数据，他们占用的内存需要程序主动释放才可以重新使用，否则称为垃圾。&lt;/p>
&lt;h3 id="三色标记原理">
 三色标记原理
 &lt;a class="anchor" href="#%e4%b8%89%e8%89%b2%e6%a0%87%e8%ae%b0%e5%8e%9f%e7%90%86">#&lt;/a>
&lt;/h3>
&lt;p>三色标记法，白色，灰色和黑色&lt;/p>
&lt;ol>
&lt;li>垃圾回收开始会把所有数据（栈、堆、数据段）都标记为白色&lt;/li>
&lt;li>然后把直接追踪(扫描全局数据区和栈区)到的 root 节点标记为灰色，灰色代表基于当前节点展开的追踪还未完成。&lt;/li>
&lt;li>基于某个节点的追踪任务完成后标记为黑色，标识有用并且无需基于它再追踪。&lt;/li>
&lt;li>没有灰色节点后意味着标记工作结束。此时有用的数据为黑色，垃圾都是白色，在清除阶段回收这些白色的垃圾即可。&lt;/li>
&lt;/ol>
&lt;h3 id="混合写屏障">
 混合写屏障
 &lt;a class="anchor" href="#%e6%b7%b7%e5%90%88%e5%86%99%e5%b1%8f%e9%9a%9c">#&lt;/a>
&lt;/h3>
&lt;p>通过 &lt;code>混合写屏障&lt;/code> 防止GC过程中并发修改对象的问题。&lt;/p>
&lt;ul>
&lt;li>&lt;code>混合写屏障&lt;/code> 继承了插入写屏障的优点，起始时无需 STW 打快照，直接并发扫描垃圾即可&lt;/li>
&lt;li>&lt;code>混合写屏障&lt;/code> 继承了删除写屏障的优点，赋值器是黑色赋值器，GC期间，任何在栈上创建的新对象，均为黑色。扫描过后就不需要扫描了，这样就消除了插入写屏障最后 STW 的重新扫描栈了。&lt;/li>
&lt;li>&lt;code>混合写屏障&lt;/code> 扫描栈虽然不用 STW，但是扫描某一个具体的栈的时候，还是要停止这个 goroutine 赋值器的工作（针对一个 goroutine 来说，是暂停扫的，要么全灰，要么全黑，是原子状态切换的）&lt;/li>
&lt;/ul>
&lt;h3 id="gc-触发时机">
 GC 触发时机
 &lt;a class="anchor" href="#gc-%e8%a7%a6%e5%8f%91%e6%97%b6%e6%9c%ba">#&lt;/a>
&lt;/h3>
&lt;ol>
&lt;li>主动触发：调用 &lt;code>runtime.GC&lt;/code>&lt;/li>
&lt;li>被动触发：使用系统监控 &lt;code>sysmon&lt;/code>，该触发条件由 &lt;code>runtime.forcegcperiod&lt;/code> 控制，默认为 2 分钟。当超过时间没有产生任何 GC 时，强制触发 GC。使用步调算法。。。&lt;/li>
&lt;/ol>
&lt;h3 id="gc-流程">
 GC 流程
 &lt;a class="anchor" href="#gc-%e6%b5%81%e7%a8%8b">#&lt;/a>
&lt;/h3>
&lt;p>GC 划分为五个阶段&lt;/p></description></item><item><title>make 与 new 区别</title><link>/posts/golang-make-and-new/</link><pubDate>Wed, 05 Mar 2025 13:08:26 +0800</pubDate><guid>/posts/golang-make-and-new/</guid><description>&lt;h2 id="make-和-new-的区别">
 make 和 new 的区别
 &lt;a class="anchor" href="#make-%e5%92%8c-new-%e7%9a%84%e5%8c%ba%e5%88%ab">#&lt;/a>
&lt;/h2>
&lt;blockquote>
&lt;p>都是内存分配函数&lt;/p>&lt;/blockquote>
&lt;h3 id="1-基本用途">
 1. 基本用途
 &lt;a class="anchor" href="#1-%e5%9f%ba%e6%9c%ac%e7%94%a8%e9%80%94">#&lt;/a>
&lt;/h3>
&lt;p>make 仅用于创建 &lt;code>slice&lt;/code>、&lt;code>map&lt;/code> 和 &lt;code>channel&lt;/code>，并且会初始化这些类型的内部数据结构，返回初始化后的值类型
new 可用于任何类型，返回指向该类型零值的指针&lt;/p>
&lt;h3 id="2-返回值">
 2. 返回值
 &lt;a class="anchor" href="#2-%e8%bf%94%e5%9b%9e%e5%80%bc">#&lt;/a>
&lt;/h3>
&lt;p>make返回初始化后的值类型
new返回指向该类型零值的指针&lt;/p>
&lt;h3 id="3-内存分配">
 3. 内存分配
 &lt;a class="anchor" href="#3-%e5%86%85%e5%ad%98%e5%88%86%e9%85%8d">#&lt;/a>
&lt;/h3>
&lt;p>make会分配内存并初始化数据结构
new只分配内存，并把内存置零，不做初始化&lt;/p></description></item><item><title>GMP 模型</title><link>/posts/golang-gmp/</link><pubDate>Wed, 05 Mar 2025 13:07:55 +0800</pubDate><guid>/posts/golang-gmp/</guid><description>&lt;h2 id="csp">
 CSP
 &lt;a class="anchor" href="#csp">#&lt;/a>
&lt;/h2>
&lt;p>CSP(Communicating Sequential Processes) 被认为是 Go 在并发编程中成功的关键，论文指出应该重视 input 和 output 原语，尤其是并发编程的代码。&lt;/p>
&lt;h2 id="gmp介绍">
 GMP介绍
 &lt;a class="anchor" href="#gmp%e4%bb%8b%e7%bb%8d">#&lt;/a>
&lt;/h2>
&lt;p>G M P 是 Go 调度器的三个核心组件&lt;/p>
&lt;h3 id="g-对应-goroutine-属于用户线程或绿色线程">
 G 对应 goroutine, 属于用户线程或绿色线程
 &lt;a class="anchor" href="#g-%e5%af%b9%e5%ba%94-goroutine-%e5%b1%9e%e4%ba%8e%e7%94%a8%e6%88%b7%e7%ba%bf%e7%a8%8b%e6%88%96%e7%bb%bf%e8%89%b2%e7%ba%bf%e7%a8%8b">#&lt;/a>
&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-golang" data-lang="golang">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">type&lt;/span> &lt;span style="color:#a6e22e">g&lt;/span> &lt;span style="color:#66d9ef">struct&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#a6e22e">stack&lt;/span> &lt;span style="color:#a6e22e">stack&lt;/span> &lt;span style="color:#75715e">// goroutine 使用的栈，存储了栈的范围 [lo, hi)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#a6e22e">m&lt;/span> &lt;span style="color:#f92672">*&lt;/span>&lt;span style="color:#a6e22e">m&lt;/span> &lt;span style="color:#75715e">// 当前与 g 绑定的 m&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#a6e22e">sched&lt;/span> &lt;span style="color:#a6e22e">gobuf&lt;/span> &lt;span style="color:#75715e">// goroutine 的运行现场, 存储各种寄存器的值，如 PC、SP等寄存器，M恢复现场时需要用到&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="m-对应内核线程">
 M 对应内核线程
 &lt;a class="anchor" href="#m-%e5%af%b9%e5%ba%94%e5%86%85%e6%a0%b8%e7%ba%bf%e7%a8%8b">#&lt;/a>
&lt;/h3>
&lt;p>M 代表一个工作线程或者说系统线程，G需要调度到M上才能执行，和 P 绑定去获取 G 来执行。&lt;/p>
&lt;p>它保存了 M 自身使用的栈信息，当前正在M上执行的G信息，与之绑定的 P 信息。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-golang" data-lang="golang">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// m 代表工作线程，保存了自身使用的栈信息&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">type&lt;/span> &lt;span style="color:#a6e22e">m&lt;/span> &lt;span style="color:#66d9ef">struct&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#75715e">// 记录工作线程（也就是内核线程）使用的栈信息。在执行调度代码时需要使用&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#75715e">// 执行用户 goroutine 代码时，使用用户 goroutine 自己的栈，因此调度时会发生栈的切换&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#a6e22e">g0&lt;/span> &lt;span style="color:#f92672">*&lt;/span>&lt;span style="color:#a6e22e">g&lt;/span> &lt;span style="color:#75715e">// goroutine with scheduling stack/&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#75715e">// 通过 tls 结构体实现 m 与工作线程的绑定&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#75715e">// 这里是线程本地存储&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#a6e22e">tls&lt;/span> [&lt;span style="color:#ae81ff">6&lt;/span>]&lt;span style="color:#66d9ef">uintptr&lt;/span> &lt;span style="color:#75715e">// thread-local storage (for x86 extern register)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#75715e">// 当前工作线程绑定的 p&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#a6e22e">p&lt;/span> &lt;span style="color:#a6e22e">puintptr&lt;/span> &lt;span style="color:#75715e">// attached p for executing go code (nil if not executing go code)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#75715e">// 工作线程 id&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#a6e22e">thread&lt;/span> &lt;span style="color:#66d9ef">uintptr&lt;/span> &lt;span style="color:#75715e">// thread handle&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#75715e">// 记录所有工作线程的链表&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#a6e22e">alllink&lt;/span> &lt;span style="color:#f92672">*&lt;/span>&lt;span style="color:#a6e22e">m&lt;/span> &lt;span style="color:#75715e">// on allm&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="p-是调度队列包含缓存信息">
 P 是调度队列，包含缓存信息
 &lt;a class="anchor" href="#p-%e6%98%af%e8%b0%83%e5%ba%a6%e9%98%9f%e5%88%97%e5%8c%85%e5%90%ab%e7%bc%93%e5%ad%98%e4%bf%a1%e6%81%af">#&lt;/a>
&lt;/h3>
&lt;p>P 取 processor 首字母，为 M 的执行提供上下文，保存 M 执行 G 时的一些资源，例如本地可执行 G 队列、memory cache等。一个M只有绑定P才可以执行goroutine，当M阻塞时，整个P会被传递给其他M，或者说整个P被接管。&lt;/p></description></item><item><title>Golang Map</title><link>/posts/golang-map/</link><pubDate>Wed, 05 Mar 2025 12:49:36 +0800</pubDate><guid>/posts/golang-map/</guid><description/></item><item><title>Golang Slice</title><link>/posts/golang-slice/</link><pubDate>Wed, 05 Mar 2025 12:49:22 +0800</pubDate><guid>/posts/golang-slice/</guid><description/></item><item><title>Channel</title><link>/posts/golang-chan/</link><pubDate>Wed, 05 Mar 2025 12:46:50 +0800</pubDate><guid>/posts/golang-chan/</guid><description>&lt;h3 id="channel-数据结构">
 channel 数据结构
 &lt;a class="anchor" href="#channel-%e6%95%b0%e6%8d%ae%e7%bb%93%e6%9e%84">#&lt;/a>
&lt;/h3>
&lt;p>channel 被用来实现 goroutine 间的通信，以通信的方式共享内存。&lt;/p>
&lt;p>如下代码使用 make 函数会在 &lt;code>堆上&lt;/code> 分配一个 &lt;code>runtime.hchan&lt;/code> 类型的数据结构并初始化，ch 是存在于 f 函数栈帧上的一个指针，指向堆上的 hchan 数据结构。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-golang" data-lang="golang">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">func&lt;/span> &lt;span style="color:#a6e22e">f&lt;/span>() {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">ch&lt;/span> &lt;span style="color:#f92672">:=&lt;/span> make(&lt;span style="color:#66d9ef">chan&lt;/span> &lt;span style="color:#66d9ef">int&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">...&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>channel 分为 无缓冲 和 有缓冲 两种。对于有缓冲的 channel 来说，使用循环数组 &lt;code>buf&lt;/code> 来存储数据。&lt;/p>
&lt;p>&lt;a href="https://mp.weixin.qq.com/s/6ZEGtXRGKm2qP5b-rGLyVg">Golang 图解channel之数据结构&lt;/a>&lt;/p>
&lt;h3 id="select-和-channel-机制">
 select 和 channel 机制
 &lt;a class="anchor" href="#select-%e5%92%8c-channel-%e6%9c%ba%e5%88%b6">#&lt;/a>
&lt;/h3>
&lt;blockquote>
&lt;p>通过 &lt;code>gouroutine&lt;/code> 和 &lt;code>channel&lt;/code> 实现并发中基于通信的内存同步, &lt;code>channel&lt;/code> 还可以和 &lt;code>select&lt;/code>、&lt;code>cancel&lt;/code>、&lt;code>timeout&lt;/code> 结合使用&lt;/p>&lt;/blockquote>
&lt;p>channel 分为不带缓冲和带缓冲的，不带缓冲的可以认为是“同步模式”，带缓冲的可以认为是“异步模式”。&lt;/p>
&lt;p>channel 的数据结构如下，包含一个 循环数组 buf 存储缓存中的数据 和当前读写在数组中的索引，以及缓存大小，还有一个阻塞&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-golang" data-lang="golang">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">type&lt;/span> &lt;span style="color:#a6e22e">hchan&lt;/span> &lt;span style="color:#66d9ef">struct&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#a6e22e">qcount&lt;/span> &lt;span style="color:#66d9ef">uint&lt;/span> &lt;span style="color:#75715e">// chan 中元素数量, 对于无缓冲的为 0, 数据直接从发送方传递给接收方&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#a6e22e">dataqsiz&lt;/span> &lt;span style="color:#66d9ef">uint&lt;/span> &lt;span style="color:#75715e">// chan 底层循环数组的大小, 对于无缓冲的为 0&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#a6e22e">buf&lt;/span> &lt;span style="color:#a6e22e">unsafe&lt;/span>.&lt;span style="color:#a6e22e">Pointer&lt;/span> &lt;span style="color:#75715e">// 指向底层循环数组的指针, 只针对有缓冲的 channel&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#a6e22e">elemsize&lt;/span> &lt;span style="color:#66d9ef">uint16&lt;/span> &lt;span style="color:#75715e">// chan 中元素大小&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#a6e22e">closed&lt;/span> &lt;span style="color:#66d9ef">uint32&lt;/span> &lt;span style="color:#75715e">// chan 是否关闭的标志&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#a6e22e">timer&lt;/span> &lt;span style="color:#f92672">*&lt;/span>&lt;span style="color:#a6e22e">timer&lt;/span> &lt;span style="color:#75715e">// timer feeding this chan&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#a6e22e">elemtype&lt;/span> &lt;span style="color:#f92672">*&lt;/span>&lt;span style="color:#a6e22e">_type&lt;/span> &lt;span style="color:#75715e">// chan 中元素类型&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#a6e22e">sendx&lt;/span> &lt;span style="color:#66d9ef">uint&lt;/span> &lt;span style="color:#75715e">// 下一个要发送元素在循环数组中的索引&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#a6e22e">recvx&lt;/span> &lt;span style="color:#66d9ef">uint&lt;/span> &lt;span style="color:#75715e">// 下一个要接收元素在循环数组中的索引&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#a6e22e">recvq&lt;/span> &lt;span style="color:#a6e22e">waitq&lt;/span> &lt;span style="color:#75715e">// 阻塞的尝试从此 channel 接收数据的 goroutine, sudog 双向链表&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#a6e22e">sendq&lt;/span> &lt;span style="color:#a6e22e">waitq&lt;/span> &lt;span style="color:#75715e">// 阻塞的尝试向此 channel 发送数据的 goroutine, sudog 双向链表&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#a6e22e">lock&lt;/span> &lt;span style="color:#a6e22e">mutex&lt;/span> &lt;span style="color:#75715e">// 保护 hchan 所有字段的锁&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">type&lt;/span> &lt;span style="color:#a6e22e">waitq&lt;/span> &lt;span style="color:#66d9ef">struct&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#a6e22e">first&lt;/span> &lt;span style="color:#f92672">*&lt;/span>&lt;span style="color:#a6e22e">sudog&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#a6e22e">last&lt;/span> &lt;span style="color:#f92672">*&lt;/span>&lt;span style="color:#a6e22e">sudog&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>阻塞模式和非阻塞模式：由 select 是否包含 default 确定&lt;/p></description></item><item><title>关于我</title><link>/posts/about/</link><pubDate>Sun, 02 Mar 2025 23:10:09 +0800</pubDate><guid>/posts/about/</guid><description>&lt;blockquote>
&lt;p>golang 服务端开发工程师，喜欢一些基础设施相关的东西&lt;/p>&lt;/blockquote>
&lt;h3 id="目前在学的内容">
 目前在学的内容
 &lt;a class="anchor" href="#%e7%9b%ae%e5%89%8d%e5%9c%a8%e5%ad%a6%e7%9a%84%e5%86%85%e5%ae%b9">#&lt;/a>
&lt;/h3>
&lt;ul>
&lt;li>&lt;strong>golang&lt;/strong>&lt;/li>
&lt;li>&lt;strong>linux&lt;/strong>&lt;/li>
&lt;li>&lt;strong>kubernetes&lt;/strong>&lt;/li>
&lt;li>&lt;strong>kubevirt&lt;/strong>&lt;/li>
&lt;li>ceph&lt;/li>
&lt;li>openstack&lt;/li>
&lt;li>terraform&lt;/li>
&lt;li>postgresql&lt;/li>
&lt;li>mysql&lt;/li>
&lt;li>redis&lt;/li>
&lt;li>sqlite&lt;/li>
&lt;/ul>
&lt;h3 id="我的设备">
 我的设备
 &lt;a class="anchor" href="#%e6%88%91%e7%9a%84%e8%ae%be%e5%a4%87">#&lt;/a>
&lt;/h3>
&lt;ul>
&lt;li>Macbook Pro 2018 15 inch 16+256&lt;/li>
&lt;li>零刻 SER5 Pro AMD Ryzen7-5700U 64G内存+1TB固态
&lt;ul>
&lt;li>Ubuntu 22.04 + QEMU/KVM&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>5G CPE VN009&lt;/li>
&lt;li>iPad mini6&lt;/li>
&lt;li>OnePlus 9R&lt;/li>
&lt;/ul>
&lt;h3 id="联系方式">
 联系方式
 &lt;a class="anchor" href="#%e8%81%94%e7%b3%bb%e6%96%b9%e5%bc%8f">#&lt;/a>
&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>echo YWRtaW5AZ29jbi50b3AK | base64 -d
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>Linux iptables</title><link>/posts/linux-iptables/</link><pubDate>Sun, 02 Mar 2025 10:09:37 +0800</pubDate><guid>/posts/linux-iptables/</guid><description>&lt;blockquote>
&lt;p>持续更新&amp;hellip;&lt;/p>&lt;/blockquote>
&lt;h2 id="iptables-介绍">
 iptables 介绍
 &lt;a class="anchor" href="#iptables-%e4%bb%8b%e7%bb%8d">#&lt;/a>
&lt;/h2>
&lt;p>四表五链&lt;/p>
&lt;h3 id="五链">
 五链
 &lt;a class="anchor" href="#%e4%ba%94%e9%93%be">#&lt;/a>
&lt;/h3>
&lt;p>为什么称为 &lt;code>链&lt;/code>，因为每个 &lt;code>链&lt;/code> 会有很多规则串在一起，每个经过的报文都要将这条链上的规则匹配一遍，如果有符合条件的规则，则执行规则对应的动作。&lt;/p>
&lt;p>每个链会包含多个表的规则，如果包含对应的表，则表之间的执行顺序为：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 具体每个表的作用看后面的 &amp;#34;四表&amp;#34; 介绍, 不是每个 &amp;#34;链&amp;#34; 都能包含全部的四个表&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>raw -&amp;gt; mangle -&amp;gt; nat -&amp;gt; filter
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h4 id="prerouting-链">
 PREROUTING 链
 &lt;a class="anchor" href="#prerouting-%e9%93%be">#&lt;/a>
&lt;/h4>
&lt;p>数据包抵达系统内核空间时，由 PREROUTING 链负责&lt;/p>
&lt;h4 id="input-链">
 INPUT 链
 &lt;a class="anchor" href="#input-%e9%93%be">#&lt;/a>
&lt;/h4>
&lt;p>进入内核空间后，如果检测到目的地址是本机，则由 INPUT 链负责&lt;/p>
&lt;h4 id="forward-链">
 FORWARD 链
 &lt;a class="anchor" href="#forward-%e9%93%be">#&lt;/a>
&lt;/h4>
&lt;p>数据包如果不是要到本机，只是经过本机路由，就由 FORWARD 链负责&lt;/p>
&lt;h4 id="output-链">
 OUTPUT 链
 &lt;a class="anchor" href="#output-%e9%93%be">#&lt;/a>
&lt;/h4>
&lt;p>数据包如果从本机出去，就由 OUTPUT 链负责&lt;/p>
&lt;h4 id="postrouting-链">
 POSTROUTING 链
 &lt;a class="anchor" href="#postrouting-%e9%93%be">#&lt;/a>
&lt;/h4>
&lt;p>从内核空间出到网卡硬件设备之前做处理&lt;/p>
&lt;p>数据包如果要离开本机，或者路由后，还有个 POSTROUTING 链负责&lt;/p>
&lt;h3 id="四表">
 四表
 &lt;a class="anchor" href="#%e5%9b%9b%e8%a1%a8">#&lt;/a>
&lt;/h3>
&lt;p>具有相同功能的规则的集合叫做 &lt;code>表&lt;/code>，iptables 定义了 四种表。&lt;/p></description></item><item><title>k8s informer 介绍</title><link>/posts/k8s-informer/</link><pubDate>Sun, 23 Feb 2025 19:15:23 +0800</pubDate><guid>/posts/k8s-informer/</guid><description>&lt;p>&lt;code>informer&lt;/code> 提供一个保持更新的 k8s 资源的本地缓存。&lt;/p>
&lt;h2 id="informer">
 &lt;code>informer&lt;/code>
 &lt;a class="anchor" href="#informer">#&lt;/a>
&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-golang" data-lang="golang">&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>深入了解 Kubernetes CNI 网络插件 Flannel</title><link>/posts/flannel/</link><pubDate>Wed, 01 Jan 2025 13:11:35 +0800</pubDate><guid>/posts/flannel/</guid><description>&lt;h2 id="关于">
 关于
 &lt;a class="anchor" href="#%e5%85%b3%e4%ba%8e">#&lt;/a>
&lt;/h2>
&lt;p>&lt;a href="https://github.com/flannel-io/flannel">flannel&lt;/a> 是由 CoreOS 开发的一个简单易用的容器网络插件&lt;/p>
&lt;p>网络是 k8s 中至关重要的一部分, 这里以简单的 flannel 为例做深入分析&lt;/p>
&lt;h3 id="工作原理">
 工作原理
 &lt;a class="anchor" href="#%e5%b7%a5%e4%bd%9c%e5%8e%9f%e7%90%86">#&lt;/a>
&lt;/h3>
&lt;blockquote>
&lt;p>以下介绍在 chart 方式部署的 flannel&lt;/p>&lt;/blockquote>
&lt;p>flanneld 进程以 daemonset/kube-flannel-ds 方式运行在所有 node 上, 负责从提前配置好的网络池中分配子网租约 (subnet lease) 给 node.&lt;/p>
&lt;p>flanneld 使用 k8s api 或者 etcd 存储网络配置、分配的子网和任何补充数据(如 node 的 public ip), 在 k8s 中使用一般不会单独提供 etcd 去存储这些数据.&lt;/p>
&lt;ul>
&lt;li>网络配置存储在 configmap 中, kube-flannel ns 下的 cm/kube-flannel-cfg 中&lt;/li>
&lt;li>分配的子网存储在 PodCIDR 中&lt;/li>
&lt;/ul>
&lt;p>几个名词解释:&lt;/p>
&lt;ol>
&lt;li>&lt;code>subnet&lt;/code>: 对应 &lt;code>node.spec.podCIDR&lt;/code>。&lt;/li>
&lt;li>&lt;code>backend&lt;/code>: 负责 &lt;code>node&lt;/code> 之间 &lt;code>pod&lt;/code> 通讯的后端。&lt;/li>
&lt;/ol>
&lt;p>flanneld 进程通过监听 &lt;code>node&lt;/code> 资源来生成 &lt;code>subnet event&lt;/code>, 然后在对应 &lt;code>backend&lt;/code> 的 &lt;code>handleSubnetEvents&lt;/code> 方法中处理逻辑，对于 &lt;code>vxlan backend&lt;/code> 主要是按顺序设置 &lt;code>arp&lt;/code>, &lt;code>fdb&lt;/code> 和 &lt;code>route&lt;/code> 来实现pod跨节点通讯。&lt;/p></description></item><item><title>Linux Bridge</title><link>/posts/linux-bridge/</link><pubDate>Sun, 29 Dec 2024 15:40:46 +0800</pubDate><guid>/posts/linux-bridge/</guid><description>&lt;p>关于 Linux Bridge FDB&lt;/p></description></item><item><title>Kube Scheduler</title><link>/posts/kube-scheduler/</link><pubDate>Tue, 17 Dec 2024 22:07:49 +0800</pubDate><guid>/posts/kube-scheduler/</guid><description>&lt;p>RKE2 自定义&lt;a href="https://kubernetes.io/zh-cn/docs/reference/scheduling/config/">调度器配置&lt;/a>&lt;/p>
&lt;ol>
&lt;li>创建调度器配置文件&lt;/li>
&lt;/ol>
&lt;p>&lt;code>NodeResourcesFit&lt;/code> 是一个调度插件, 检查节点是否拥有 Pod 请求的所有资源, 得分可以使用以下三种策略之一:
&lt;code>LeastAllocated&lt;/code> (默认)、&lt;code>MostAllocated&lt;/code> 和 &lt;code>RequestedToCapacityRatio&lt;/code>&lt;/p>
&lt;p>实现了多个扩展点: &lt;code>preFilter&lt;/code>、&lt;code>filter&lt;/code>、&lt;code>preScore&lt;/code>、&lt;code>score&lt;/code>&lt;/p>
&lt;p>我这里自定义使用 &lt;code>MostAllocated&lt;/code> 策略, 优选分配比率较高的节点&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># /etc/rancher/rke2/kube-scheduler-config.yaml&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">apiVersion&lt;/span>: &lt;span style="color:#ae81ff">kubescheduler.config.k8s.io/v1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">kind&lt;/span>: &lt;span style="color:#ae81ff">KubeSchedulerConfiguration&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">clientConnection&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">kubeconfig&lt;/span>: &lt;span style="color:#ae81ff">/var/lib/rancher/rke2/server/cred/scheduler.kubeconfig&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">profiles&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#f92672">schedulerName&lt;/span>: &lt;span style="color:#ae81ff">default-scheduler&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">pluginConfig&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#f92672">name&lt;/span>: &lt;span style="color:#ae81ff">NodeResourcesFit&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">args&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">scoringStrategy&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">type&lt;/span>: &lt;span style="color:#ae81ff">MostAllocated&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">resources&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#f92672">name&lt;/span>: &lt;span style="color:#ae81ff">cpu&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">weight&lt;/span>: &lt;span style="color:#ae81ff">1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#f92672">name&lt;/span>: &lt;span style="color:#ae81ff">memory&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">weight&lt;/span>: &lt;span style="color:#ae81ff">1&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ol start="2">
&lt;li>修改 rke2 配置文件&lt;/li>
&lt;/ol>
&lt;p>修改 &lt;code>/etc/rancher/rke2/config.yaml&lt;/code>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-diff" data-lang="diff">&lt;span style="display:flex;">&lt;span>kube-scheduler-arg:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">+ - config=/etc/rancher/rke2/kube-scheduler-config.yaml
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ol start="3">
&lt;li>重启 rke2-server&lt;/li>
&lt;/ol>
&lt;p>会重新生成 kube-scheduler 的 static pod manifest 文件 &lt;code>/var/lib/rancher/rke2/agent/pod-manifests/kube-scheduler.yaml&lt;/code>&lt;/p>
&lt;p>会挂载 &lt;code>/etc/rancher/rke2/kube-scheduler-config.yaml&lt;/code> 文件到 pod 中&lt;/p></description></item><item><title>CRI 工作原理</title><link>/posts/cri/</link><pubDate>Sun, 17 Nov 2024 20:30:12 +0800</pubDate><guid>/posts/cri/</guid><description>&lt;h2 id="关于-cri">
 关于 CRI
 &lt;a class="anchor" href="#%e5%85%b3%e4%ba%8e-cri">#&lt;/a>
&lt;/h2>
&lt;p>CRI 全称为 &lt;code>Container Runtime Interface&lt;/code>, 容器运行时接口&lt;/p>
&lt;p>&lt;a href="https://github.com/kubernetes/cri-api">https://github.com/kubernetes/cri-api&lt;/a>&lt;/p>
&lt;p>containerd 的 &lt;code>criService&lt;/code> 有实现下面这个 &lt;code>RuntimeServiceServer&lt;/code>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-golang" data-lang="golang">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// RuntimeServiceServer is the server API for RuntimeService service.&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">type&lt;/span> &lt;span style="color:#a6e22e">RuntimeServiceServer&lt;/span> &lt;span style="color:#66d9ef">interface&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#75715e">// Version returns the runtime name, runtime version, and runtime API version.&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#a6e22e">Version&lt;/span>(&lt;span style="color:#a6e22e">context&lt;/span>.&lt;span style="color:#a6e22e">Context&lt;/span>, &lt;span style="color:#f92672">*&lt;/span>&lt;span style="color:#a6e22e">VersionRequest&lt;/span>) (&lt;span style="color:#f92672">*&lt;/span>&lt;span style="color:#a6e22e">VersionResponse&lt;/span>, &lt;span style="color:#66d9ef">error&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#75715e">// RunPodSandbox creates and starts a pod-level sandbox. Runtimes must ensure&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#75715e">// the sandbox is in the ready state on success.&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#a6e22e">RunPodSandbox&lt;/span>(&lt;span style="color:#a6e22e">context&lt;/span>.&lt;span style="color:#a6e22e">Context&lt;/span>, &lt;span style="color:#f92672">*&lt;/span>&lt;span style="color:#a6e22e">RunPodSandboxRequest&lt;/span>) (&lt;span style="color:#f92672">*&lt;/span>&lt;span style="color:#a6e22e">RunPodSandboxResponse&lt;/span>, &lt;span style="color:#66d9ef">error&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#75715e">// StopPodSandbox stops any running process that is part of the sandbox and&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#75715e">// reclaims network resources (e.g., IP addresses) allocated to the sandbox.&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#75715e">// If there are any running containers in the sandbox, they must be forcibly&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#75715e">// terminated.&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#75715e">// This call is idempotent, and must not return an error if all relevant&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#75715e">// resources have already been reclaimed. kubelet will call StopPodSandbox&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#75715e">// at least once before calling RemovePodSandbox. It will also attempt to&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#75715e">// reclaim resources eagerly, as soon as a sandbox is not needed. Hence,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#75715e">// multiple StopPodSandbox calls are expected.&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#a6e22e">StopPodSandbox&lt;/span>(&lt;span style="color:#a6e22e">context&lt;/span>.&lt;span style="color:#a6e22e">Context&lt;/span>, &lt;span style="color:#f92672">*&lt;/span>&lt;span style="color:#a6e22e">StopPodSandboxRequest&lt;/span>) (&lt;span style="color:#f92672">*&lt;/span>&lt;span style="color:#a6e22e">StopPodSandboxResponse&lt;/span>, &lt;span style="color:#66d9ef">error&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#75715e">// RemovePodSandbox removes the sandbox. If there are any running containers&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#75715e">// in the sandbox, they must be forcibly terminated and removed.&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#75715e">// This call is idempotent, and must not return an error if the sandbox has&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#75715e">// already been removed.&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#a6e22e">RemovePodSandbox&lt;/span>(&lt;span style="color:#a6e22e">context&lt;/span>.&lt;span style="color:#a6e22e">Context&lt;/span>, &lt;span style="color:#f92672">*&lt;/span>&lt;span style="color:#a6e22e">RemovePodSandboxRequest&lt;/span>) (&lt;span style="color:#f92672">*&lt;/span>&lt;span style="color:#a6e22e">RemovePodSandboxResponse&lt;/span>, &lt;span style="color:#66d9ef">error&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#75715e">// PodSandboxStatus returns the status of the PodSandbox. If the PodSandbox is not&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#75715e">// present, returns an error.&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#a6e22e">PodSandboxStatus&lt;/span>(&lt;span style="color:#a6e22e">context&lt;/span>.&lt;span style="color:#a6e22e">Context&lt;/span>, &lt;span style="color:#f92672">*&lt;/span>&lt;span style="color:#a6e22e">PodSandboxStatusRequest&lt;/span>) (&lt;span style="color:#f92672">*&lt;/span>&lt;span style="color:#a6e22e">PodSandboxStatusResponse&lt;/span>, &lt;span style="color:#66d9ef">error&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#75715e">// ListPodSandbox returns a list of PodSandboxes.&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#a6e22e">ListPodSandbox&lt;/span>(&lt;span style="color:#a6e22e">context&lt;/span>.&lt;span style="color:#a6e22e">Context&lt;/span>, &lt;span style="color:#f92672">*&lt;/span>&lt;span style="color:#a6e22e">ListPodSandboxRequest&lt;/span>) (&lt;span style="color:#f92672">*&lt;/span>&lt;span style="color:#a6e22e">ListPodSandboxResponse&lt;/span>, &lt;span style="color:#66d9ef">error&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#75715e">// CreateContainer creates a new container in specified PodSandbox&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#a6e22e">CreateContainer&lt;/span>(&lt;span style="color:#a6e22e">context&lt;/span>.&lt;span style="color:#a6e22e">Context&lt;/span>, &lt;span style="color:#f92672">*&lt;/span>&lt;span style="color:#a6e22e">CreateContainerRequest&lt;/span>) (&lt;span style="color:#f92672">*&lt;/span>&lt;span style="color:#a6e22e">CreateContainerResponse&lt;/span>, &lt;span style="color:#66d9ef">error&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#75715e">// StartContainer starts the container.&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#a6e22e">StartContainer&lt;/span>(&lt;span style="color:#a6e22e">context&lt;/span>.&lt;span style="color:#a6e22e">Context&lt;/span>, &lt;span style="color:#f92672">*&lt;/span>&lt;span style="color:#a6e22e">StartContainerRequest&lt;/span>) (&lt;span style="color:#f92672">*&lt;/span>&lt;span style="color:#a6e22e">StartContainerResponse&lt;/span>, &lt;span style="color:#66d9ef">error&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#75715e">// StopContainer stops a running container with a grace period (i.e., timeout).&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#75715e">// This call is idempotent, and must not return an error if the container has&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#75715e">// already been stopped.&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#75715e">// The runtime must forcibly kill the container after the grace period is&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#75715e">// reached.&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#a6e22e">StopContainer&lt;/span>(&lt;span style="color:#a6e22e">context&lt;/span>.&lt;span style="color:#a6e22e">Context&lt;/span>, &lt;span style="color:#f92672">*&lt;/span>&lt;span style="color:#a6e22e">StopContainerRequest&lt;/span>) (&lt;span style="color:#f92672">*&lt;/span>&lt;span style="color:#a6e22e">StopContainerResponse&lt;/span>, &lt;span style="color:#66d9ef">error&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#75715e">// RemoveContainer removes the container. If the container is running, the&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#75715e">// container must be forcibly removed.&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#75715e">// This call is idempotent, and must not return an error if the container has&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#75715e">// already been removed.&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#a6e22e">RemoveContainer&lt;/span>(&lt;span style="color:#a6e22e">context&lt;/span>.&lt;span style="color:#a6e22e">Context&lt;/span>, &lt;span style="color:#f92672">*&lt;/span>&lt;span style="color:#a6e22e">RemoveContainerRequest&lt;/span>) (&lt;span style="color:#f92672">*&lt;/span>&lt;span style="color:#a6e22e">RemoveContainerResponse&lt;/span>, &lt;span style="color:#66d9ef">error&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#75715e">// ListContainers lists all containers by filters.&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#a6e22e">ListContainers&lt;/span>(&lt;span style="color:#a6e22e">context&lt;/span>.&lt;span style="color:#a6e22e">Context&lt;/span>, &lt;span style="color:#f92672">*&lt;/span>&lt;span style="color:#a6e22e">ListContainersRequest&lt;/span>) (&lt;span style="color:#f92672">*&lt;/span>&lt;span style="color:#a6e22e">ListContainersResponse&lt;/span>, &lt;span style="color:#66d9ef">error&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#75715e">// ContainerStatus returns status of the container. If the container is not&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#75715e">// present, returns an error.&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#a6e22e">ContainerStatus&lt;/span>(&lt;span style="color:#a6e22e">context&lt;/span>.&lt;span style="color:#a6e22e">Context&lt;/span>, &lt;span style="color:#f92672">*&lt;/span>&lt;span style="color:#a6e22e">ContainerStatusRequest&lt;/span>) (&lt;span style="color:#f92672">*&lt;/span>&lt;span style="color:#a6e22e">ContainerStatusResponse&lt;/span>, &lt;span style="color:#66d9ef">error&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#75715e">// UpdateContainerResources updates ContainerConfig of the container synchronously.&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#75715e">// If runtime fails to transactionally update the requested resources, an error is returned.&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#a6e22e">UpdateContainerResources&lt;/span>(&lt;span style="color:#a6e22e">context&lt;/span>.&lt;span style="color:#a6e22e">Context&lt;/span>, &lt;span style="color:#f92672">*&lt;/span>&lt;span style="color:#a6e22e">UpdateContainerResourcesRequest&lt;/span>) (&lt;span style="color:#f92672">*&lt;/span>&lt;span style="color:#a6e22e">UpdateContainerResourcesResponse&lt;/span>, &lt;span style="color:#66d9ef">error&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#75715e">// ReopenContainerLog asks runtime to reopen the stdout/stderr log file&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#75715e">// for the container. This is often called after the log file has been&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#75715e">// rotated. If the container is not running, container runtime can choose&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#75715e">// to either create a new log file and return nil, or return an error.&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#75715e">// Once it returns error, new container log file MUST NOT be created.&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#a6e22e">ReopenContainerLog&lt;/span>(&lt;span style="color:#a6e22e">context&lt;/span>.&lt;span style="color:#a6e22e">Context&lt;/span>, &lt;span style="color:#f92672">*&lt;/span>&lt;span style="color:#a6e22e">ReopenContainerLogRequest&lt;/span>) (&lt;span style="color:#f92672">*&lt;/span>&lt;span style="color:#a6e22e">ReopenContainerLogResponse&lt;/span>, &lt;span style="color:#66d9ef">error&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#75715e">// ExecSync runs a command in a container synchronously.&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#a6e22e">ExecSync&lt;/span>(&lt;span style="color:#a6e22e">context&lt;/span>.&lt;span style="color:#a6e22e">Context&lt;/span>, &lt;span style="color:#f92672">*&lt;/span>&lt;span style="color:#a6e22e">ExecSyncRequest&lt;/span>) (&lt;span style="color:#f92672">*&lt;/span>&lt;span style="color:#a6e22e">ExecSyncResponse&lt;/span>, &lt;span style="color:#66d9ef">error&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#75715e">// Exec prepares a streaming endpoint to execute a command in the container.&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#a6e22e">Exec&lt;/span>(&lt;span style="color:#a6e22e">context&lt;/span>.&lt;span style="color:#a6e22e">Context&lt;/span>, &lt;span style="color:#f92672">*&lt;/span>&lt;span style="color:#a6e22e">ExecRequest&lt;/span>) (&lt;span style="color:#f92672">*&lt;/span>&lt;span style="color:#a6e22e">ExecResponse&lt;/span>, &lt;span style="color:#66d9ef">error&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#75715e">// Attach prepares a streaming endpoint to attach to a running container.&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#a6e22e">Attach&lt;/span>(&lt;span style="color:#a6e22e">context&lt;/span>.&lt;span style="color:#a6e22e">Context&lt;/span>, &lt;span style="color:#f92672">*&lt;/span>&lt;span style="color:#a6e22e">AttachRequest&lt;/span>) (&lt;span style="color:#f92672">*&lt;/span>&lt;span style="color:#a6e22e">AttachResponse&lt;/span>, &lt;span style="color:#66d9ef">error&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#75715e">// PortForward prepares a streaming endpoint to forward ports from a PodSandbox.&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#a6e22e">PortForward&lt;/span>(&lt;span style="color:#a6e22e">context&lt;/span>.&lt;span style="color:#a6e22e">Context&lt;/span>, &lt;span style="color:#f92672">*&lt;/span>&lt;span style="color:#a6e22e">PortForwardRequest&lt;/span>) (&lt;span style="color:#f92672">*&lt;/span>&lt;span style="color:#a6e22e">PortForwardResponse&lt;/span>, &lt;span style="color:#66d9ef">error&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#75715e">// ContainerStats returns stats of the container. If the container does not&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#75715e">// exist, the call returns an error.&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#a6e22e">ContainerStats&lt;/span>(&lt;span style="color:#a6e22e">context&lt;/span>.&lt;span style="color:#a6e22e">Context&lt;/span>, &lt;span style="color:#f92672">*&lt;/span>&lt;span style="color:#a6e22e">ContainerStatsRequest&lt;/span>) (&lt;span style="color:#f92672">*&lt;/span>&lt;span style="color:#a6e22e">ContainerStatsResponse&lt;/span>, &lt;span style="color:#66d9ef">error&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#75715e">// ListContainerStats returns stats of all running containers.&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#a6e22e">ListContainerStats&lt;/span>(&lt;span style="color:#a6e22e">context&lt;/span>.&lt;span style="color:#a6e22e">Context&lt;/span>, &lt;span style="color:#f92672">*&lt;/span>&lt;span style="color:#a6e22e">ListContainerStatsRequest&lt;/span>) (&lt;span style="color:#f92672">*&lt;/span>&lt;span style="color:#a6e22e">ListContainerStatsResponse&lt;/span>, &lt;span style="color:#66d9ef">error&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#75715e">// PodSandboxStats returns stats of the pod sandbox. If the pod sandbox does not&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#75715e">// exist, the call returns an error.&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#a6e22e">PodSandboxStats&lt;/span>(&lt;span style="color:#a6e22e">context&lt;/span>.&lt;span style="color:#a6e22e">Context&lt;/span>, &lt;span style="color:#f92672">*&lt;/span>&lt;span style="color:#a6e22e">PodSandboxStatsRequest&lt;/span>) (&lt;span style="color:#f92672">*&lt;/span>&lt;span style="color:#a6e22e">PodSandboxStatsResponse&lt;/span>, &lt;span style="color:#66d9ef">error&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#75715e">// ListPodSandboxStats returns stats of the pod sandboxes matching a filter.&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#a6e22e">ListPodSandboxStats&lt;/span>(&lt;span style="color:#a6e22e">context&lt;/span>.&lt;span style="color:#a6e22e">Context&lt;/span>, &lt;span style="color:#f92672">*&lt;/span>&lt;span style="color:#a6e22e">ListPodSandboxStatsRequest&lt;/span>) (&lt;span style="color:#f92672">*&lt;/span>&lt;span style="color:#a6e22e">ListPodSandboxStatsResponse&lt;/span>, &lt;span style="color:#66d9ef">error&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#75715e">// UpdateRuntimeConfig updates the runtime configuration based on the given request.&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#a6e22e">UpdateRuntimeConfig&lt;/span>(&lt;span style="color:#a6e22e">context&lt;/span>.&lt;span style="color:#a6e22e">Context&lt;/span>, &lt;span style="color:#f92672">*&lt;/span>&lt;span style="color:#a6e22e">UpdateRuntimeConfigRequest&lt;/span>) (&lt;span style="color:#f92672">*&lt;/span>&lt;span style="color:#a6e22e">UpdateRuntimeConfigResponse&lt;/span>, &lt;span style="color:#66d9ef">error&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#75715e">// Status returns the status of the runtime.&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#a6e22e">Status&lt;/span>(&lt;span style="color:#a6e22e">context&lt;/span>.&lt;span style="color:#a6e22e">Context&lt;/span>, &lt;span style="color:#f92672">*&lt;/span>&lt;span style="color:#a6e22e">StatusRequest&lt;/span>) (&lt;span style="color:#f92672">*&lt;/span>&lt;span style="color:#a6e22e">StatusResponse&lt;/span>, &lt;span style="color:#66d9ef">error&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#75715e">// CheckpointContainer checkpoints a container&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#a6e22e">CheckpointContainer&lt;/span>(&lt;span style="color:#a6e22e">context&lt;/span>.&lt;span style="color:#a6e22e">Context&lt;/span>, &lt;span style="color:#f92672">*&lt;/span>&lt;span style="color:#a6e22e">CheckpointContainerRequest&lt;/span>) (&lt;span style="color:#f92672">*&lt;/span>&lt;span style="color:#a6e22e">CheckpointContainerResponse&lt;/span>, &lt;span style="color:#66d9ef">error&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#75715e">// GetContainerEvents gets container events from the CRI runtime&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#a6e22e">GetContainerEvents&lt;/span>(&lt;span style="color:#f92672">*&lt;/span>&lt;span style="color:#a6e22e">GetEventsRequest&lt;/span>, &lt;span style="color:#a6e22e">RuntimeService_GetContainerEventsServer&lt;/span>) &lt;span style="color:#66d9ef">error&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#75715e">// ListMetricDescriptors gets the descriptors for the metrics that will be returned in ListPodSandboxMetrics.&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#75715e">// This list should be static at startup: either the client and server restart together when&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#75715e">// adding or removing metrics descriptors, or they should not change.&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#75715e">// Put differently, if ListPodSandboxMetrics references a name that is not described in the initial&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#75715e">// ListMetricDescriptors call, then the metric will not be broadcasted.&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#a6e22e">ListMetricDescriptors&lt;/span>(&lt;span style="color:#a6e22e">context&lt;/span>.&lt;span style="color:#a6e22e">Context&lt;/span>, &lt;span style="color:#f92672">*&lt;/span>&lt;span style="color:#a6e22e">ListMetricDescriptorsRequest&lt;/span>) (&lt;span style="color:#f92672">*&lt;/span>&lt;span style="color:#a6e22e">ListMetricDescriptorsResponse&lt;/span>, &lt;span style="color:#66d9ef">error&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#75715e">// ListPodSandboxMetrics gets pod sandbox metrics from CRI Runtime&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#a6e22e">ListPodSandboxMetrics&lt;/span>(&lt;span style="color:#a6e22e">context&lt;/span>.&lt;span style="color:#a6e22e">Context&lt;/span>, &lt;span style="color:#f92672">*&lt;/span>&lt;span style="color:#a6e22e">ListPodSandboxMetricsRequest&lt;/span>) (&lt;span style="color:#f92672">*&lt;/span>&lt;span style="color:#a6e22e">ListPodSandboxMetricsResponse&lt;/span>, &lt;span style="color:#66d9ef">error&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#75715e">// RuntimeConfig returns configuration information of the runtime.&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#75715e">// A couple of notes:&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#75715e">// - The RuntimeConfigRequest object is not to be confused with the contents of UpdateRuntimeConfigRequest.&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#75715e">// The former is for having runtime tell Kubelet what to do, the latter vice versa.&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#75715e">// - It is the expectation of the Kubelet that these fields are static for the lifecycle of the Kubelet.&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#75715e">// The Kubelet will not re-request the RuntimeConfiguration after startup, and CRI implementations should&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#75715e">// avoid updating them without a full node reboot.&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#a6e22e">RuntimeConfig&lt;/span>(&lt;span style="color:#a6e22e">context&lt;/span>.&lt;span style="color:#a6e22e">Context&lt;/span>, &lt;span style="color:#f92672">*&lt;/span>&lt;span style="color:#a6e22e">RuntimeConfigRequest&lt;/span>) (&lt;span style="color:#f92672">*&lt;/span>&lt;span style="color:#a6e22e">RuntimeConfigResponse&lt;/span>, &lt;span style="color:#66d9ef">error&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>CNI 工作原理</title><link>/posts/cni/</link><pubDate>Sun, 17 Nov 2024 20:30:06 +0800</pubDate><guid>/posts/cni/</guid><description>&lt;h2 id="关于-cni">
 关于 CNI
 &lt;a class="anchor" href="#%e5%85%b3%e4%ba%8e-cni">#&lt;/a>
&lt;/h2>
&lt;p>CNI 全称 &lt;code>Container Network Interface&lt;/code>, 容器网络接口, cni 插件是可执行文件, 一般位于 &lt;code>/opt/cni/bin/&lt;/code> 目录&lt;/p>
&lt;p>在 k8s 中, kubelet 调用 cri 创建 sandbox 时(RunPodSandbox)会先去创建 network namespace, 然后创建 pause 和 其他容器并将容器加入到同一个 network namespace 中&lt;/p>
&lt;p>cni spec 文档: &lt;a href="https://www.cni.dev/docs/spec/">https://www.cni.dev/docs/spec/&lt;/a>&lt;/p>
&lt;p>有如下&lt;a href="https://www.cni.dev/docs/spec/#parameters">环境变量参数&lt;/a>:&lt;/p>
&lt;ul>
&lt;li>&lt;code>CNI_COMMAND&lt;/code>: 对应操作 &lt;code>ADD&lt;/code>, &lt;code>DEL&lt;/code>, &lt;code>CHECK&lt;/code>, or &lt;code>VERSION&lt;/code>.&lt;/li>
&lt;li>&lt;code>CNI_CONTAINERID&lt;/code>: 容器 id&lt;/li>
&lt;li>&lt;code>CNI_NETNS&lt;/code>: 如 &lt;code>/var/run/netns/[nsname]&lt;/code>&lt;/li>
&lt;li>&lt;code>CNI_IFNAME&lt;/code>: 要在容器中创建的接口名称, 一般容器中都是 &lt;code>eth0&lt;/code>&lt;/li>
&lt;li>&lt;code>CNI_ARGS&lt;/code>: 额外的 kv 参数, 如 &lt;code>FOO=BAR;ABC=123&lt;/code>&lt;/li>
&lt;li>&lt;code>CNI_PATH&lt;/code>: 搜索 cni plugin 可执行文件的目录&lt;/li>
&lt;/ul>
&lt;h2 id="插件分析">
 插件分析
 &lt;a class="anchor" href="#%e6%8f%92%e4%bb%b6%e5%88%86%e6%9e%90">#&lt;/a>
&lt;/h2>
&lt;h3 id="bridge">
 bridge
 &lt;a class="anchor" href="#bridge">#&lt;/a>
&lt;/h3>
&lt;p>主要是 &lt;code>cmdAdd&lt;/code> 和 &lt;code>cmdDel&lt;/code> 两个函数, 对应 CNI spec 中的 &lt;code>ADD&lt;/code> 和 &lt;code>DEL&lt;/code> 两个主要操作&lt;/p></description></item><item><title>CSI 工作原理</title><link>/posts/csi/</link><pubDate>Mon, 04 Nov 2024 22:07:17 +0800</pubDate><guid>/posts/csi/</guid><description>&lt;h2 id="关于-csi">
 关于 CSI
 &lt;a class="anchor" href="#%e5%85%b3%e4%ba%8e-csi">#&lt;/a>
&lt;/h2>
&lt;p>CSI 全称为 &lt;code>Container Storage Interface&lt;/code>, 容器存储接口&lt;/p>
&lt;p>要实现一个第三方的 csi driver 需要实现下面的 gRPC service &lt;a href="https://github.com/container-storage-interface/spec/blob/master/lib/go/csi/csi_grpc.pb.go">csi spec&lt;/a>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-golang" data-lang="golang">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// 如果 NodeServer 和 ControllerServer 对应服务运行在不同 pod 中, 那么两个服务都要实现 IdentityServer&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">type&lt;/span> &lt;span style="color:#a6e22e">IdentityServer&lt;/span> &lt;span style="color:#66d9ef">interface&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// 用来获取插件名称&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">GetPluginInfo&lt;/span>(&lt;span style="color:#a6e22e">context&lt;/span>.&lt;span style="color:#a6e22e">Context&lt;/span>, &lt;span style="color:#f92672">*&lt;/span>&lt;span style="color:#a6e22e">GetPluginInfoRequest&lt;/span>) (&lt;span style="color:#f92672">*&lt;/span>&lt;span style="color:#a6e22e">GetPluginInfoResponse&lt;/span>, &lt;span style="color:#66d9ef">error&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">GetPluginCapabilities&lt;/span>(&lt;span style="color:#a6e22e">context&lt;/span>.&lt;span style="color:#a6e22e">Context&lt;/span>, &lt;span style="color:#f92672">*&lt;/span>&lt;span style="color:#a6e22e">GetPluginCapabilitiesRequest&lt;/span>) (&lt;span style="color:#f92672">*&lt;/span>&lt;span style="color:#a6e22e">GetPluginCapabilitiesResponse&lt;/span>, &lt;span style="color:#66d9ef">error&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">Probe&lt;/span>(&lt;span style="color:#a6e22e">context&lt;/span>.&lt;span style="color:#a6e22e">Context&lt;/span>, &lt;span style="color:#f92672">*&lt;/span>&lt;span style="color:#a6e22e">ProbeRequest&lt;/span>) (&lt;span style="color:#f92672">*&lt;/span>&lt;span style="color:#a6e22e">ProbeResponse&lt;/span>, &lt;span style="color:#66d9ef">error&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">mustEmbedUnimplementedIdentityServer&lt;/span>()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">type&lt;/span> &lt;span style="color:#a6e22e">ControllerServer&lt;/span> &lt;span style="color:#66d9ef">interface&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// 创建 volume, 如 ceph 创建一个 rbd 或者 hostpath 创建一个目录&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">CreateVolume&lt;/span>(&lt;span style="color:#a6e22e">context&lt;/span>.&lt;span style="color:#a6e22e">Context&lt;/span>, &lt;span style="color:#f92672">*&lt;/span>&lt;span style="color:#a6e22e">CreateVolumeRequest&lt;/span>) (&lt;span style="color:#f92672">*&lt;/span>&lt;span style="color:#a6e22e">CreateVolumeResponse&lt;/span>, &lt;span style="color:#66d9ef">error&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// 删除 volume, 如 ceph 删除一个 rbd 或者 hostpath 删除一个目录&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">DeleteVolume&lt;/span>(&lt;span style="color:#a6e22e">context&lt;/span>.&lt;span style="color:#a6e22e">Context&lt;/span>, &lt;span style="color:#f92672">*&lt;/span>&lt;span style="color:#a6e22e">DeleteVolumeRequest&lt;/span>) (&lt;span style="color:#f92672">*&lt;/span>&lt;span style="color:#a6e22e">DeleteVolumeResponse&lt;/span>, &lt;span style="color:#66d9ef">error&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// 将 volume attach 到 node 上, 如 rbd 通过 rbd map 命令 attach, 成功后 node 上会多出一个 rbdx 的 block 设备&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">ControllerPublishVolume&lt;/span>(&lt;span style="color:#a6e22e">context&lt;/span>.&lt;span style="color:#a6e22e">Context&lt;/span>, &lt;span style="color:#f92672">*&lt;/span>&lt;span style="color:#a6e22e">ControllerPublishVolumeRequest&lt;/span>) (&lt;span style="color:#f92672">*&lt;/span>&lt;span style="color:#a6e22e">ControllerPublishVolumeResponse&lt;/span>, &lt;span style="color:#66d9ef">error&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// 将 volume 从 node 上 detach, 如 rbd 通过 rbd unmap 命令 detach&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">ControllerUnpublishVolume&lt;/span>(&lt;span style="color:#a6e22e">context&lt;/span>.&lt;span style="color:#a6e22e">Context&lt;/span>, &lt;span style="color:#f92672">*&lt;/span>&lt;span style="color:#a6e22e">ControllerUnpublishVolumeRequest&lt;/span>) (&lt;span style="color:#f92672">*&lt;/span>&lt;span style="color:#a6e22e">ControllerUnpublishVolumeResponse&lt;/span>, &lt;span style="color:#66d9ef">error&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">ValidateVolumeCapabilities&lt;/span>(&lt;span style="color:#a6e22e">context&lt;/span>.&lt;span style="color:#a6e22e">Context&lt;/span>, &lt;span style="color:#f92672">*&lt;/span>&lt;span style="color:#a6e22e">ValidateVolumeCapabilitiesRequest&lt;/span>) (&lt;span style="color:#f92672">*&lt;/span>&lt;span style="color:#a6e22e">ValidateVolumeCapabilitiesResponse&lt;/span>, &lt;span style="color:#66d9ef">error&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// 列出所有 volume&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">ListVolumes&lt;/span>(&lt;span style="color:#a6e22e">context&lt;/span>.&lt;span style="color:#a6e22e">Context&lt;/span>, &lt;span style="color:#f92672">*&lt;/span>&lt;span style="color:#a6e22e">ListVolumesRequest&lt;/span>) (&lt;span style="color:#f92672">*&lt;/span>&lt;span style="color:#a6e22e">ListVolumesResponse&lt;/span>, &lt;span style="color:#66d9ef">error&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">GetCapacity&lt;/span>(&lt;span style="color:#a6e22e">context&lt;/span>.&lt;span style="color:#a6e22e">Context&lt;/span>, &lt;span style="color:#f92672">*&lt;/span>&lt;span style="color:#a6e22e">GetCapacityRequest&lt;/span>) (&lt;span style="color:#f92672">*&lt;/span>&lt;span style="color:#a6e22e">GetCapacityResponse&lt;/span>, &lt;span style="color:#66d9ef">error&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">ControllerGetCapabilities&lt;/span>(&lt;span style="color:#a6e22e">context&lt;/span>.&lt;span style="color:#a6e22e">Context&lt;/span>, &lt;span style="color:#f92672">*&lt;/span>&lt;span style="color:#a6e22e">ControllerGetCapabilitiesRequest&lt;/span>) (&lt;span style="color:#f92672">*&lt;/span>&lt;span style="color:#a6e22e">ControllerGetCapabilitiesResponse&lt;/span>, &lt;span style="color:#66d9ef">error&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">CreateSnapshot&lt;/span>(&lt;span style="color:#a6e22e">context&lt;/span>.&lt;span style="color:#a6e22e">Context&lt;/span>, &lt;span style="color:#f92672">*&lt;/span>&lt;span style="color:#a6e22e">CreateSnapshotRequest&lt;/span>) (&lt;span style="color:#f92672">*&lt;/span>&lt;span style="color:#a6e22e">CreateSnapshotResponse&lt;/span>, &lt;span style="color:#66d9ef">error&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">DeleteSnapshot&lt;/span>(&lt;span style="color:#a6e22e">context&lt;/span>.&lt;span style="color:#a6e22e">Context&lt;/span>, &lt;span style="color:#f92672">*&lt;/span>&lt;span style="color:#a6e22e">DeleteSnapshotRequest&lt;/span>) (&lt;span style="color:#f92672">*&lt;/span>&lt;span style="color:#a6e22e">DeleteSnapshotResponse&lt;/span>, &lt;span style="color:#66d9ef">error&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">ListSnapshots&lt;/span>(&lt;span style="color:#a6e22e">context&lt;/span>.&lt;span style="color:#a6e22e">Context&lt;/span>, &lt;span style="color:#f92672">*&lt;/span>&lt;span style="color:#a6e22e">ListSnapshotsRequest&lt;/span>) (&lt;span style="color:#f92672">*&lt;/span>&lt;span style="color:#a6e22e">ListSnapshotsResponse&lt;/span>, &lt;span style="color:#66d9ef">error&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">ControllerExpandVolume&lt;/span>(&lt;span style="color:#a6e22e">context&lt;/span>.&lt;span style="color:#a6e22e">Context&lt;/span>, &lt;span style="color:#f92672">*&lt;/span>&lt;span style="color:#a6e22e">ControllerExpandVolumeRequest&lt;/span>) (&lt;span style="color:#f92672">*&lt;/span>&lt;span style="color:#a6e22e">ControllerExpandVolumeResponse&lt;/span>, &lt;span style="color:#66d9ef">error&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">ControllerGetVolume&lt;/span>(&lt;span style="color:#a6e22e">context&lt;/span>.&lt;span style="color:#a6e22e">Context&lt;/span>, &lt;span style="color:#f92672">*&lt;/span>&lt;span style="color:#a6e22e">ControllerGetVolumeRequest&lt;/span>) (&lt;span style="color:#f92672">*&lt;/span>&lt;span style="color:#a6e22e">ControllerGetVolumeResponse&lt;/span>, &lt;span style="color:#66d9ef">error&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">ControllerModifyVolume&lt;/span>(&lt;span style="color:#a6e22e">context&lt;/span>.&lt;span style="color:#a6e22e">Context&lt;/span>, &lt;span style="color:#f92672">*&lt;/span>&lt;span style="color:#a6e22e">ControllerModifyVolumeRequest&lt;/span>) (&lt;span style="color:#f92672">*&lt;/span>&lt;span style="color:#a6e22e">ControllerModifyVolumeResponse&lt;/span>, &lt;span style="color:#66d9ef">error&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">mustEmbedUnimplementedControllerServer&lt;/span>()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// 这些会被 kubelet 调用&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">type&lt;/span> &lt;span style="color:#a6e22e">NodeServer&lt;/span> &lt;span style="color:#66d9ef">interface&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// format (如果没format), mount 到 node 的 global directory&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">NodeStageVolume&lt;/span>(&lt;span style="color:#a6e22e">context&lt;/span>.&lt;span style="color:#a6e22e">Context&lt;/span>, &lt;span style="color:#f92672">*&lt;/span>&lt;span style="color:#a6e22e">NodeStageVolumeRequest&lt;/span>) (&lt;span style="color:#f92672">*&lt;/span>&lt;span style="color:#a6e22e">NodeStageVolumeResponse&lt;/span>, &lt;span style="color:#66d9ef">error&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// umount&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">NodeUnstageVolume&lt;/span>(&lt;span style="color:#a6e22e">context&lt;/span>.&lt;span style="color:#a6e22e">Context&lt;/span>, &lt;span style="color:#f92672">*&lt;/span>&lt;span style="color:#a6e22e">NodeUnstageVolumeRequest&lt;/span>) (&lt;span style="color:#f92672">*&lt;/span>&lt;span style="color:#a6e22e">NodeUnstageVolumeResponse&lt;/span>, &lt;span style="color:#66d9ef">error&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// mount --bind 到 pod directory&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">NodePublishVolume&lt;/span>(&lt;span style="color:#a6e22e">context&lt;/span>.&lt;span style="color:#a6e22e">Context&lt;/span>, &lt;span style="color:#f92672">*&lt;/span>&lt;span style="color:#a6e22e">NodePublishVolumeRequest&lt;/span>) (&lt;span style="color:#f92672">*&lt;/span>&lt;span style="color:#a6e22e">NodePublishVolumeResponse&lt;/span>, &lt;span style="color:#66d9ef">error&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// umount --bind&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">NodeUnpublishVolume&lt;/span>(&lt;span style="color:#a6e22e">context&lt;/span>.&lt;span style="color:#a6e22e">Context&lt;/span>, &lt;span style="color:#f92672">*&lt;/span>&lt;span style="color:#a6e22e">NodeUnpublishVolumeRequest&lt;/span>) (&lt;span style="color:#f92672">*&lt;/span>&lt;span style="color:#a6e22e">NodeUnpublishVolumeResponse&lt;/span>, &lt;span style="color:#66d9ef">error&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">NodeGetVolumeStats&lt;/span>(&lt;span style="color:#a6e22e">context&lt;/span>.&lt;span style="color:#a6e22e">Context&lt;/span>, &lt;span style="color:#f92672">*&lt;/span>&lt;span style="color:#a6e22e">NodeGetVolumeStatsRequest&lt;/span>) (&lt;span style="color:#f92672">*&lt;/span>&lt;span style="color:#a6e22e">NodeGetVolumeStatsResponse&lt;/span>, &lt;span style="color:#66d9ef">error&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">NodeExpandVolume&lt;/span>(&lt;span style="color:#a6e22e">context&lt;/span>.&lt;span style="color:#a6e22e">Context&lt;/span>, &lt;span style="color:#f92672">*&lt;/span>&lt;span style="color:#a6e22e">NodeExpandVolumeRequest&lt;/span>) (&lt;span style="color:#f92672">*&lt;/span>&lt;span style="color:#a6e22e">NodeExpandVolumeResponse&lt;/span>, &lt;span style="color:#66d9ef">error&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">NodeGetCapabilities&lt;/span>(&lt;span style="color:#a6e22e">context&lt;/span>.&lt;span style="color:#a6e22e">Context&lt;/span>, &lt;span style="color:#f92672">*&lt;/span>&lt;span style="color:#a6e22e">NodeGetCapabilitiesRequest&lt;/span>) (&lt;span style="color:#f92672">*&lt;/span>&lt;span style="color:#a6e22e">NodeGetCapabilitiesResponse&lt;/span>, &lt;span style="color:#66d9ef">error&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">NodeGetInfo&lt;/span>(&lt;span style="color:#a6e22e">context&lt;/span>.&lt;span style="color:#a6e22e">Context&lt;/span>, &lt;span style="color:#f92672">*&lt;/span>&lt;span style="color:#a6e22e">NodeGetInfoRequest&lt;/span>) (&lt;span style="color:#f92672">*&lt;/span>&lt;span style="color:#a6e22e">NodeGetInfoResponse&lt;/span>, &lt;span style="color:#66d9ef">error&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">mustEmbedUnimplementedNodeServer&lt;/span>()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="关于-sidecar-containers">
 关于 Sidecar Containers
 &lt;a class="anchor" href="#%e5%85%b3%e4%ba%8e-sidecar-containers">#&lt;/a>
&lt;/h2>
&lt;p>&lt;a href="https://kubernetes-csi.github.io/docs/sidecar-containers.html">Sidecar Containers&lt;/a> 是一系列标准容器，用于简化 CSI 插件的开发和部署&lt;/p></description></item><item><title>构建多平台容器镜像</title><link>/posts/builing-multi-platform-container-images-guide/</link><pubDate>Sun, 13 Oct 2024 11:27:56 +0800</pubDate><guid>/posts/builing-multi-platform-container-images-guide/</guid><description>&lt;blockquote>
&lt;p>构建多平台容器镜像&lt;/p>&lt;/blockquote>
&lt;h2 id="docker-buildx-插件子命令">
 Docker buildx 插件/子命令
 &lt;a class="anchor" href="#docker-buildx-%e6%8f%92%e4%bb%b6%e5%ad%90%e5%91%bd%e4%bb%a4">#&lt;/a>
&lt;/h2>
&lt;p>&lt;a href="https://github.com/docker/buildx">buildx&lt;/a> 是 Docker 的一个 CLI 插件，用于扩展来自于 &lt;a href="https://github.com/moby/buildkit">Moby BuildKit&lt;/a> 项目的构建功能。&lt;/p>
&lt;p>注意：buildx 需要 Docker 19.03 或更高版本。&lt;/p>
&lt;h2 id="buildkit">
 BuildKit
 &lt;a class="anchor" href="#buildkit">#&lt;/a>
&lt;/h2>
&lt;p>BuildKit是一个build引擎，它接收一个配置文件（Dockerfile），并转化成一个制品（容器镜像或其他制品）。相较与传统的build具有多阶段并发构建、更好的layer缓存支持等优点，Dockerfile中的RUN指令会被runc执行。&lt;/p>
&lt;p>Docker Engine 从 &lt;a href="https://docs.docker.com/engine/release-notes/23.0/#2300">23.0.0&lt;/a> 版本开始默认在Linux上使用Buildx和BuildKit为builder。&lt;/p>
&lt;h3 id="builder-a-buildkit-daemon">
 Builder: a BuildKit daemon
 &lt;a class="anchor" href="#builder-a-buildkit-daemon">#&lt;/a>
&lt;/h3>
&lt;ul>
&lt;li>&lt;a href="https://docs.docker.com/build/builders/">Builders介绍&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>一个 builder 是一个 BuildKit 守护进程，BuildKit是build引擎，它解决Dockerfile中的构建步骤，以生成容器镜像或其他制品。&lt;/p>
&lt;h3 id="build-drivers">
 Build drivers
 &lt;a class="anchor" href="#build-drivers">#&lt;/a>
&lt;/h3>
&lt;p>Build 驱动有多种，例如 &lt;code>docker&lt;/code>、&lt;code>docker-container&lt;/code>、&lt;code>kubernetes&lt;/code>、&lt;code>remote&lt;/code> 等。&lt;/p>
&lt;ul>
&lt;li>&lt;code>docker&lt;/code> 使用捆绑在Docker守护进程中的BuildKit库。默认的Builder使用的该驱动。&lt;/li>
&lt;li>&lt;code>docker-container&lt;/code> 使用Docker创建一个专用的BuildKit容器。&lt;/li>
&lt;li>&lt;code>kubernetes&lt;/code> 在Kubernetes集群中创建BuildKit pods。&lt;/li>
&lt;li>&lt;code>remote&lt;/code> 直接连接到手动管理的BuildKit守护进程。&lt;/li>
&lt;/ul>
&lt;div style="text-align: center;">Build Drivers Comparison&lt;/div>
&lt;table>
 &lt;thead>
 &lt;tr>
 &lt;th>Feature&lt;/th>
 &lt;th>docker&lt;/th>
 &lt;th>docker-container&lt;/th>
 &lt;th>kubernetes&lt;/th>
 &lt;th>remote&lt;/th>
 &lt;/tr>
 &lt;/thead>
 &lt;tbody>
 &lt;tr>
 &lt;td>Automatically load image&lt;/td>
 &lt;td>✅&lt;/td>
 &lt;td>&lt;/td>
 &lt;td>&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Cache export&lt;/td>
 &lt;td>✓*&lt;/td>
 &lt;td>✅&lt;/td>
 &lt;td>✅&lt;/td>
 &lt;td>✅&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Tarball output&lt;/td>
 &lt;td>&lt;/td>
 &lt;td>✅&lt;/td>
 &lt;td>✅&lt;/td>
 &lt;td>✅&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Multi-arch images&lt;/td>
 &lt;td>&lt;/td>
 &lt;td>✅&lt;/td>
 &lt;td>✅&lt;/td>
 &lt;td>✅&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>BuildKit configuration&lt;/td>
 &lt;td>&lt;/td>
 &lt;td>✅&lt;/td>
 &lt;td>&lt;/td>
 &lt;td>Managed externally&lt;/td>
 &lt;/tr>
 &lt;/tbody>
&lt;/table>
&lt;div style="text-align: center;">* The docker driver doesn't support all cache export options&lt;/div>
&lt;h3 id="默认的-builder-实例">
 默认的 Builder 实例
 &lt;a class="anchor" href="#%e9%bb%98%e8%ae%a4%e7%9a%84-builder-%e5%ae%9e%e4%be%8b">#&lt;/a>
&lt;/h3>
&lt;p>docker engine 会自动创建一个默认的 builder 实例，例如 &lt;code>default&lt;/code>。默认的驱动是 &lt;code>docker&lt;/code>，不支持多平台构建。&lt;/p></description></item><item><title>Etcd</title><link>/posts/etcd/</link><pubDate>Sun, 25 Aug 2024 01:10:17 +0800</pubDate><guid>/posts/etcd/</guid><description/></item><item><title>Redis</title><link>/posts/redis/</link><pubDate>Sun, 25 Aug 2024 01:10:10 +0800</pubDate><guid>/posts/redis/</guid><description/></item><item><title>PostgreSQL</title><link>/posts/postgresql/</link><pubDate>Sun, 25 Aug 2024 01:10:04 +0800</pubDate><guid>/posts/postgresql/</guid><description/></item><item><title>MySQL</title><link>/posts/mysql/</link><pubDate>Sun, 25 Aug 2024 01:09:56 +0800</pubDate><guid>/posts/mysql/</guid><description/></item><item><title>MongoDB</title><link>/posts/mongodb/</link><pubDate>Sun, 25 Aug 2024 01:06:47 +0800</pubDate><guid>/posts/mongodb/</guid><description/></item><item><title>K8s Namespace</title><link>/posts/k8s-namespace/</link><pubDate>Mon, 05 Aug 2024 23:07:12 +0800</pubDate><guid>/posts/k8s-namespace/</guid><description/></item><item><title>K8s Cgroup</title><link>/posts/k8s-cgroup/</link><pubDate>Mon, 05 Aug 2024 23:07:04 +0800</pubDate><guid>/posts/k8s-cgroup/</guid><description/></item><item><title>Libvirt 使用笔记</title><link>/posts/libvirt/</link><pubDate>Sat, 27 Jul 2024 22:57:08 +0800</pubDate><guid>/posts/libvirt/</guid><description>&lt;h2 id="virsh-命令">
 &lt;code>virsh&lt;/code> 命令
 &lt;a class="anchor" href="#virsh-%e5%91%bd%e4%bb%a4">#&lt;/a>
&lt;/h2>
&lt;h3 id="virsh-domifaddr-查看虚拟机网卡ip">
 &lt;code>virsh domifaddr&lt;/code> 查看虚拟机网卡ip
 &lt;a class="anchor" href="#virsh-domifaddr-%e6%9f%a5%e7%9c%8b%e8%99%9a%e6%8b%9f%e6%9c%ba%e7%bd%91%e5%8d%a1ip">#&lt;/a>
&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># virsh domifaddr k3s-node01 --source lease&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Name MAC address Protocol Address
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>-------------------------------------------------------------------------------
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>通过arp获取网卡ip&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># virsh domifaddr k3s-node01 --source arp&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Name MAC address Protocol Address
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>-------------------------------------------------------------------------------
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> vnet18 52:54:00:0e:08:02 ipv4 192.168.1.248/0
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>通过qemu guest agent获取网卡ip&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># virsh domifaddr k3s-node01 --source agent&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Name MAC address Protocol Address
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>-------------------------------------------------------------------------------
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> lo 00:00:00:00:00:00 ipv4 127.0.0.1/8
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> enp1s0 52:54:00:0e:08:02 ipv4 192.168.1.248/24
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> flannel.1 92:61:59:0c:29:90 ipv4 10.42.0.0/32
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> cni0 42:fb:8d:3e:c1:a4 ipv4 10.42.0.1/24
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> vethde547696 da:18:a8:b2:ed:f0 N/A N/A
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> vethe1841f6e ce:79:fc:e1:1e:0b N/A N/A
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> veth464995dc 82:a9:3b:a6:b5:49 N/A N/A
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> veth2370e2ac 4a:c8:32:5c:fb:34 N/A N/A
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>Node Exporter</title><link>/posts/node-exporter/</link><pubDate>Wed, 03 Jul 2024 22:39:59 +0800</pubDate><guid>/posts/node-exporter/</guid><description>&lt;h2 id="node-exporter-安装">
 node-exporter 安装
 &lt;a class="anchor" href="#node-exporter-%e5%ae%89%e8%a3%85">#&lt;/a>
&lt;/h2>
&lt;h3 id="生成账号密码的-bcrypt-hash">
 生成账号密码的 bcrypt hash
 &lt;a class="anchor" href="#%e7%94%9f%e6%88%90%e8%b4%a6%e5%8f%b7%e5%af%86%e7%a0%81%e7%9a%84-bcrypt-hash">#&lt;/a>
&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>apt install apache2-utils -y
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>生成一个账号密码的 bcrypt hash&lt;/p>
&lt;ul>
&lt;li>&lt;code>-B&lt;/code> 强制使用 bcrypt 算法&lt;/li>
&lt;li>&lt;code>-C 10&lt;/code> 指定 bcrypt 的 cost 值为 10, golang bcrypt 默认 cost 值也为 10&lt;/li>
&lt;/ul>
&lt;p>注意修改下面的 &lt;code>username&lt;/code> 和 &lt;code>password&lt;/code> 为你要设置的账号密码&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># htpasswd -nbBC 10 username password&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>username:$2y$10$poDYDLemE3r95gcQ.h8FdODudFaFZhwZCSX1RTwpI2s8V4Mwm0.lO
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h4 id="关于-bcrypt">
 关于 bcrypt
 &lt;a class="anchor" href="#%e5%85%b3%e4%ba%8e-bcrypt">#&lt;/a>
&lt;/h4>
&lt;p>格式为 &lt;code>$2&amp;lt;a/b/x/y&amp;gt;$[cost]$[22 character salt][31 character hash]&lt;/code>&lt;/p>
&lt;p>例如&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>$2y$10$poDYDLemE3r95gcQ.h8FdODudFaFZhwZCSX1RTwpI2s8V4Mwm0.lO
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">\_&lt;/span>_/&lt;span style="color:#ae81ff">\/&lt;/span> &lt;span style="color:#ae81ff">\_&lt;/span>___________________/&lt;span style="color:#ae81ff">\_&lt;/span>____________________________/
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Alg Cost Salt Hash
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="运行-node-exporter">
 运行 node-exporter
 &lt;a class="anchor" href="#%e8%bf%90%e8%a1%8c-node-exporter">#&lt;/a>
&lt;/h3>
&lt;ol>
&lt;li>创建 &lt;code>prometheus&lt;/code> 配置文件 &lt;code>/etc/prometheus/web.yml&lt;/code>&lt;/li>
&lt;li>创建 &lt;code>docker-compose.yml&lt;/code> 文件&lt;/li>
&lt;li>运行 docker compose&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>PASS&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#39;$2y$10$poDYDLemE3r95gcQ.h8FdODudFaFZhwZCSX1RTwpI2s8V4Mwm0.lO&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>mkdir -p /etc/prometheus
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>cat &lt;span style="color:#e6db74">&amp;lt;&amp;lt;EOF&amp;gt; /etc/prometheus/web.yml
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">basic_auth_users:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74"> # username: password
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74"> prometheus: ${PASS}
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">EOF&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>cat &lt;span style="color:#e6db74">&amp;lt;&amp;lt;EOF&amp;gt; /etc/prometheus/docker-compose.yml
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">services:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74"> node-exporter:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74"> image: quay.io/prometheus/node-exporter:latest
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74"> container_name: node-exporter
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74"> command: 
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74"> - &amp;#34;--path.rootfs=/host&amp;#34;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74"> - &amp;#34;--web.config.file=/etc/prometheus/web.yml&amp;#34;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74"> network_mode: &amp;#34;host&amp;#34;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74"> pid: host
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74"> restart: always
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74"> volumes:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74"> - &amp;#39;/:/host:ro,rslave&amp;#39;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74"> - /etc/prometheus/web.yml:/etc/prometheus/web.yml
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">EOF&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>docker compose -f /etc/prometheus/docker-compose.yml up -d
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="在-prometheus-中配置指标收集">
 在 prometheus 中配置指标收集
 &lt;a class="anchor" href="#%e5%9c%a8-prometheus-%e4%b8%ad%e9%85%8d%e7%bd%ae%e6%8c%87%e6%a0%87%e6%94%b6%e9%9b%86">#&lt;/a>
&lt;/h2>
&lt;h3 id="方式一直接修改-prometheus-配置">
 方式一：直接修改 prometheus 配置
 &lt;a class="anchor" href="#%e6%96%b9%e5%bc%8f%e4%b8%80%e7%9b%b4%e6%8e%a5%e4%bf%ae%e6%94%b9-prometheus-%e9%85%8d%e7%bd%ae">#&lt;/a>
&lt;/h3>
&lt;p>修改 &lt;code>kube-prometheus-stack&lt;/code> chart 配置并更新，或者直接修改保存配置的 configmap 中的 job 配置, 记得修改 &lt;code>{EDIT_HERE}&lt;/code> 为实际值&lt;/p></description></item><item><title>安装 Kube Prometheus Stack</title><link>/posts/kube-prometheus-stack/</link><pubDate>Wed, 03 Jul 2024 14:56:03 +0800</pubDate><guid>/posts/kube-prometheus-stack/</guid><description>&lt;p>&lt;code>kube-prometheus-stack&lt;/code> 是 prometheus 的官方 helm charts，包含 &lt;a href="https://github.com/prometheus-operator/prometheus-operator">prometheus-operator&lt;/a>、&lt;a href="https://github.com/prometheus/prometheus">prometheus&lt;/a>、&lt;a href="https://github.com/grafana/grafana">grafana&lt;/a>、&lt;a href="https://github.com/prometheus/alertmanager">alertmanager&lt;/a>、&lt;a href="https://github.com/prometheus/node_exporter">node-exporter&lt;/a> 等组件。&lt;/p>
&lt;h2 id="安装-kube-prometheus-stack">
 安装 kube-prometheus-stack
 &lt;a class="anchor" href="#%e5%ae%89%e8%a3%85-kube-prometheus-stack">#&lt;/a>
&lt;/h2>
&lt;p>使用 helm charts 安装 kube-prometheus-stack&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>mkdir -p ~/charts/kube-prometheus-stack
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>cd ~/charts/kube-prometheus-stack
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>helm repo add prometheus-community https://prometheus-community.github.io/helm-charts
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>helm repo update
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># values.yaml 用来查看默认值&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>helm show values prometheus-community/kube-prometheus-stack &amp;gt; values.yaml
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>cat &lt;span style="color:#e6db74">&amp;lt;&amp;lt;EOF &amp;gt; custom-values.yaml
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">prometheus:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74"> prometheusSpec:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74"> additionalScrapeConfigs: []
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74"> podMonitorSelectorNilUsesHelmValues: false
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74"> ruleSelectorNilUsesHelmValues: false
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74"> probeSelectorNilUsesHelmValues: false
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74"> scrapeConfigSelectorNilUsesHelmValues: false
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74"> serviceMonitorSelectorNilUsesHelmValues: false
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74"> service:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74"> type: NodePort
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">prometheusOperator:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74"> enabled: true
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">grafana:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74"> service:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74"> type: NodePort
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">alertmanager:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74"> enabled: true
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">nodeExporter:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74"> enabled: true
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">EOF&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>helm upgrade --install --create-namespace --namespace monitoring kube-prometheus-stack prometheus-community/kube-prometheus-stack -f custom-values.yaml
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="配置说明">
 配置说明
 &lt;a class="anchor" href="#%e9%85%8d%e7%bd%ae%e8%af%b4%e6%98%8e">#&lt;/a>
&lt;/h3>
&lt;p>有一个相关 issue 讨论：&lt;a href="https://github.com/prometheus-operator/kube-prometheus/issues/1392">servicemonitor not being discovered&lt;/a>&lt;/p></description></item><item><title>安装 Rook Ceph</title><link>/posts/rook-ceph/</link><pubDate>Tue, 02 Jul 2024 14:56:03 +0800</pubDate><guid>/posts/rook-ceph/</guid><description>&lt;p>使用 &lt;a href="../rke2/">RKE2 快速搭建 k8s 集群&lt;/a> 创建的集群&lt;/p>
&lt;h2 id="安装-rook-ceph">
 安装 rook ceph
 &lt;a class="anchor" href="#%e5%ae%89%e8%a3%85-rook-ceph">#&lt;/a>
&lt;/h2>
&lt;p>使用 helm charts 安装 rook ceph&lt;/p>
&lt;p>&lt;a href="https://rook.io/docs/rook/latest-release/Helm-Charts/helm-charts/">https://rook.io/docs/rook/latest-release/Helm-Charts/helm-charts/&lt;/a>&lt;/p>
&lt;h3 id="安装-ceph-operator">
 安装 ceph operator
 &lt;a class="anchor" href="#%e5%ae%89%e8%a3%85-ceph-operator">#&lt;/a>
&lt;/h3>
&lt;p>我这里禁用了 cephfs 和 nfs 相关功能&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>mkdir -p ~/charts/rook-ceph/ceph-operator
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>cd ~/charts/rook-ceph/ceph-operator
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>helm repo add rook-release https://charts.rook.io/release
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># values.yaml 用来查看默认值&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>helm show values rook-release/rook-ceph &amp;gt; values.yaml
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>cat &lt;span style="color:#e6db74">&amp;lt;&amp;lt;EOF &amp;gt; custom-values.yaml
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">logLevel: DEBUG
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">csi:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74"> enableCephfsDriver: false
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74"> enableCephfsSnapshotter: false
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74"> enableNFSSnapshotter: false
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">EOF&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>helm upgrade --install --create-namespace --namespace rook-ceph rook-ceph rook-release/rook-ceph -f custom-values.yaml
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="安装-ceph-cluster">
 安装 ceph cluster
 &lt;a class="anchor" href="#%e5%ae%89%e8%a3%85-ceph-cluster">#&lt;/a>
&lt;/h3>
&lt;p>添加三个 node 上的三个盘作为 osd&lt;/p></description></item><item><title>RKE2 安装 k8s 集群</title><link>/posts/rke2/</link><pubDate>Mon, 01 Jul 2024 21:24:49 +0800</pubDate><guid>/posts/rke2/</guid><description>&lt;p>根据&lt;a href="../creating-a-bridged-network-with-netplan-on-ubuntu-22-04/">创建 bridge 网络&lt;/a>和&lt;a href="../create-vm-with-cloudinit/">创建虚拟机时使用 cloudinit 初始化&lt;/a>创建虚拟机, 并配置静态ip如下&lt;/p>
&lt;table>
 &lt;thead>
 &lt;tr>
 &lt;th>主机名&lt;/th>
 &lt;th>配置&lt;/th>
 &lt;th>ip (域名)&lt;/th>
 &lt;th>系统盘 / 数据盘&lt;/th>
 &lt;/tr>
 &lt;/thead>
 &lt;tbody>
 &lt;tr>
 &lt;td>k8s-node01&lt;/td>
 &lt;td>8核16G&lt;/td>
 &lt;td>192.168.1.218 (&lt;code>lb.k8s.lan&lt;/code>)&lt;/td>
 &lt;td>50GB / 100GB*1&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>k8s-node02&lt;/td>
 &lt;td>8核16G&lt;/td>
 &lt;td>192.168.1.219&lt;/td>
 &lt;td>50GB / 100GB*1&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>k8s-node03&lt;/td>
 &lt;td>8核16G&lt;/td>
 &lt;td>192.168.1.220&lt;/td>
 &lt;td>50GB / 100GB*1&lt;/td>
 &lt;/tr>
 &lt;/tbody>
&lt;/table>
&lt;h2 id="安装-rke2">
 安装 RKE2
 &lt;a class="anchor" href="#%e5%ae%89%e8%a3%85-rke2">#&lt;/a>
&lt;/h2>
&lt;h3 id="安装第一个-server-节点">
 安装第一个 server 节点
 &lt;a class="anchor" href="#%e5%ae%89%e8%a3%85%e7%ac%ac%e4%b8%80%e4%b8%aa-server-%e8%8a%82%e7%82%b9">#&lt;/a>
&lt;/h3>
&lt;p>在 k8s-node01 节点执行&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 初始化 rke2 配置文件&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>mkdir -p /etc/rancher/rke2
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>cat &lt;span style="color:#e6db74">&amp;lt;&amp;lt;EOF &amp;gt; /etc/rancher/rke2/config.yaml
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">tls-san:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74"> - lb.k8s.lan
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">write-kubeconfig-mode: &amp;#34;0600&amp;#34;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">disable-cloud-controller: true
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74"># cni 单独部署, 如无特殊需求, 这里也可以直接指定 flannel 或 calico
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">cni: none
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">debug: true
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74"># 指定 kube-scheduler 自定义参数, 会自动覆盖到 /var/lib/rancher/rke2/agent/pod-manifests/kube-scheduler.yaml
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">kube-scheduler-arg:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74"> - v=4
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74"> - bind-address=0.0.0.0
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">kube-controller-manager-arg:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74"> - bind-address=0.0.0.0
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">etcd-expose-metrics: true
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">EOF&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>curl -sfL https://rancher-mirror.rancher.cn/rke2/install.sh | INSTALL_RKE2_MIRROR&lt;span style="color:#f92672">=&lt;/span>cn sh -
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>systemctl enable rke2-server.service
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>systemctl start rke2-server.service
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h4 id="配置介绍">
 配置介绍
 &lt;a class="anchor" href="#%e9%85%8d%e7%bd%ae%e4%bb%8b%e7%bb%8d">#&lt;/a>
&lt;/h4>
&lt;h5 id="tls-san">
 &lt;code>tls-san&lt;/code>
 &lt;a class="anchor" href="#tls-san">#&lt;/a>
&lt;/h5>
&lt;p>&lt;code>tls-san&lt;/code> 在 server 的 TLS 证书中增加了多个地址作为 &lt;code>Subject Alternative Name&lt;/code>, 这样就可以通过 &lt;code>lb.k8s.lan&lt;/code> 和 各个 server 节点 ip 访问 apiserver 服务.&lt;/p></description></item><item><title>创建虚拟机时使用 cloudinit 初始化</title><link>/posts/create-vm-with-cloudinit/</link><pubDate>Mon, 01 Jul 2024 01:56:57 +0800</pubDate><guid>/posts/create-vm-with-cloudinit/</guid><description>&lt;h2 id="cloudinit-介绍">
 cloudinit 介绍
 &lt;a class="anchor" href="#cloudinit-%e4%bb%8b%e7%bb%8d">#&lt;/a>
&lt;/h2>
&lt;blockquote>
&lt;p>用于在新建的虚拟机中进行时间设置、密码设置、扩展根文件系统所在分区、设置主机名、运行脚本、安装软件包等初始化设置&lt;/p>&lt;/blockquote>
&lt;h2 id="宿主机配置脚本">
 宿主机配置脚本
 &lt;a class="anchor" href="#%e5%ae%bf%e4%b8%bb%e6%9c%ba%e9%85%8d%e7%bd%ae%e8%84%9a%e6%9c%ac">#&lt;/a>
&lt;/h2>
&lt;p>此脚本会用来在 &lt;code>/var/lib/libvirt/disks/${VM}/cloudinit&lt;/code> 目录生成 cloudinit iso 镜像&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>cat &lt;span style="color:#e6db74">&amp;lt;&amp;lt;EOFALL &amp;gt; /usr/bin/gen-cloudinit-iso
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">#!/bin/bash
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">set -eux
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">CLOUD_INIT_DIR=&amp;#34;/var/lib/libvirt/disks/\${VM}/cloudinit&amp;#34;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">FILENAME=&amp;#34;\${CLOUD_INIT_DIR}/init.iso&amp;#34;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">mkdir -p \${CLOUD_INIT_DIR}
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">cat &amp;lt;&amp;lt;EOF &amp;gt; \${CLOUD_INIT_DIR}/meta-data
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">instance-id: \${VM}
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">local-hostname: \${VM}
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">EOF
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74"># 更多配置参照 https://cloudinit.readthedocs.io/en/latest/explanation/format.html
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">cat &amp;lt;&amp;lt;EOF &amp;gt; \${CLOUD_INIT_DIR}/user-data
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">#cloud-config
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">EOF
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74"># 参考 kubevirt /pkg/cloud-init/cloud-init.go:defaultIsoFunc
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">xorrisofs -output \$FILENAME -volid cidata -joliet -rock -partition_cyl_align on \${CLOUD_INIT_DIR}/user-data \${CLOUD_INIT_DIR}/meta-data
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">EOFALL&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>chmod +x /usr/bin/gen-cloudinit-iso
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="创建虚拟机时使用-cloudinit">
 创建虚拟机时使用 cloudinit
 &lt;a class="anchor" href="#%e5%88%9b%e5%bb%ba%e8%99%9a%e6%8b%9f%e6%9c%ba%e6%97%b6%e4%bd%bf%e7%94%a8-cloudinit">#&lt;/a>
&lt;/h2>
&lt;p>创建虚拟机之前创建 cloudinit iso, 并通过 cdrom 挂载&lt;/p></description></item><item><title>Controller Runtime</title><link>/posts/controller-runtime/</link><pubDate>Sat, 01 Jun 2024 10:42:13 +0800</pubDate><guid>/posts/controller-runtime/</guid><description>&lt;blockquote>
&lt;p>&lt;a href="https://github.com/kubernetes-sigs/controller-runtime">controller-runtime&lt;/a>是在&lt;a href="https://github.com/kubernetes/client-go/tree/master/tools/cache">client-go/tools/cache&lt;/a>和&lt;a href="https://github.com/kubernetes/client-go/tree/master/util/workqueue">client-go/util/workqueue&lt;/a>的基础上实现的, 了解&lt;code>client-go/tools/cache&lt;/code>和&lt;code>client-go/util/workqueue&lt;/code>对理解&lt;code>controller-runtime&lt;/code>很有帮助&lt;/p>&lt;/blockquote>
&lt;h2 id="informer-的工作机制是什么">
 informer 的工作机制是什么
 &lt;a class="anchor" href="#informer-%e7%9a%84%e5%b7%a5%e4%bd%9c%e6%9c%ba%e5%88%b6%e6%98%af%e4%bb%80%e4%b9%88">#&lt;/a>
&lt;/h2>
&lt;ol>
&lt;li>&lt;code>Reflector&lt;/code> 从 &lt;code>kube-apiserver&lt;/code> 中获取资源对象, 更新到 &lt;code>DeltaFIFO&lt;/code> 中&lt;/li>
&lt;li>Informer 从 DeltaFIFO 中获取资源对象, 更新到 &lt;code>local cache&lt;/code> 中, 然后执行注册的 EventHandler&lt;/li>
&lt;/ol>
&lt;p>自定义控制器会注册 &lt;code>AddFunc&lt;/code>, &lt;code>UpdateFunc&lt;/code>, &lt;code>DeleteFunc&lt;/code> 等事件处理器, 这些事件会添加对象到 WorkQueue 中, 然后从 WorkQueue 中获取对象, 触发 reconcile&lt;/p>
&lt;h3 id="同一个-crd-object-会不会同时被-reconcile">
 同一个 crd object 会不会同时被 reconcile
 &lt;a class="anchor" href="#%e5%90%8c%e4%b8%80%e4%b8%aa-crd-object-%e4%bc%9a%e4%b8%8d%e4%bc%9a%e5%90%8c%e6%97%b6%e8%a2%ab-reconcile">#&lt;/a>
&lt;/h3>
&lt;p>这个全靠Queue数据结构设计的精妙, 保证了正在执行的reconcile不会处理相同的object&lt;/p>
&lt;p>向queue中增加object之前会检查是否有次object存在于queue中，如果不存在则加入dirty set，如果也不存在于processing set才会加入queue中，当processing中的处理完成之后（调用Done），会将object从processing set种移除，如果次object在处理过程中加入到了dirty set，则将object再次加入到queue中
&lt;a href="https://www.cnblogs.com/daniel-hutao/p/18010835/k8s_clientgo_workqueue">https://www.cnblogs.com/daniel-hutao/p/18010835/k8s_clientgo_workqueue&lt;/a>&lt;/p>
&lt;p>有几种队列，Queue，DelayingQueue，RateLimitingQueue&lt;/p>
&lt;h3 id="reconcile-时会读到旧数据吗如何解决">
 &lt;code>reconcile&lt;/code> 时会读到旧数据吗，如何解决
 &lt;a class="anchor" href="#reconcile-%e6%97%b6%e4%bc%9a%e8%af%bb%e5%88%b0%e6%97%a7%e6%95%b0%e6%8d%ae%e5%90%97%e5%a6%82%e4%bd%95%e8%a7%a3%e5%86%b3">#&lt;/a>
&lt;/h3>
&lt;p>因为读写分离，更新是直接更新 &lt;code>kube-apiserver&lt;/code>，读是从 &lt;code>indexer(local cache)&lt;/code> 中，所以读到的有可能是陈旧的数据。&lt;/p>
&lt;p>My cache might be stale if I read from a cache! How should I deal with that?&lt;/p></description></item><item><title>Kubevirt Hook Sidecar</title><link>/posts/kubevirt-sidecar/</link><pubDate>Sun, 12 May 2024 14:37:18 +0800</pubDate><guid>/posts/kubevirt-sidecar/</guid><description>&lt;h2 id="简介">
 简介
 &lt;a class="anchor" href="#%e7%ae%80%e4%bb%8b">#&lt;/a>
&lt;/h2>
&lt;h3 id="背景">
 背景
 &lt;a class="anchor" href="#%e8%83%8c%e6%99%af">#&lt;/a>
&lt;/h3>
&lt;blockquote>
&lt;p>在kubevirt中, 通过vmi的spec没办法涵盖所有的&lt;a href="https://libvirt.org/formatdomain.html">libvirt domain xml&lt;/a>元素, 所以有了hook sidecar功能来允许我们在define domain之前自定义domainSpecXML&lt;/p>&lt;/blockquote>
&lt;h3 id="功能介绍">
 功能介绍
 &lt;a class="anchor" href="#%e5%8a%9f%e8%83%bd%e4%bb%8b%e7%bb%8d">#&lt;/a>
&lt;/h3>
&lt;p>在kubevirt中, Hook Sidecar容器是sidecar container(和main application container跑在同一个pod中)用来在vm初始化完成前执行一些自定义操作.&lt;/p>
&lt;p>sidecar container与main container(compute)通过gRPC通讯, 有两种主要的sidecar hooks&lt;/p>
&lt;ol>
&lt;li>&lt;code>OnDefineDomain&lt;/code>: 这个hook帮助自定义libvirt的XML, 并通过gRPC协议返回最新的XML以创建vm&lt;/li>
&lt;li>&lt;code>PreCloudInitIso&lt;/code>: 这个hook帮助定义cloud-init配置, 它运行并返回最新的cloud-init data&lt;/li>
&lt;li>&lt;code>Shutdown&lt;/code>: 这个是&lt;code>v1alpha3&lt;/code>版本才支持的&lt;/li>
&lt;/ol>
&lt;p>使用hook sidecar功能需要在&lt;code>kv.spec.configuration.developerConfiguration.featureGates&lt;/code>中开启&lt;code>Sidecar&lt;/code>功能&lt;/p>
&lt;h2 id="源码分析">
 源码分析
 &lt;a class="anchor" href="#%e6%ba%90%e7%a0%81%e5%88%86%e6%9e%90">#&lt;/a>
&lt;/h2>
&lt;h3 id="kubevirt-boot-sidecar-介绍">
 kubevirt-boot-sidecar 介绍
 &lt;a class="anchor" href="#kubevirt-boot-sidecar-%e4%bb%8b%e7%bb%8d">#&lt;/a>
&lt;/h3>
&lt;p>以下以&lt;a href="https://github.com/go-bai/kubevirt-boot-sidecar">kubevirt-boot-sidecar&lt;/a>为例讲述sidecar的工作流程, 这个sidecar支持修改&lt;code>引导设备顺序(boot)&lt;/code>和&lt;code>开启交互式引导菜单(bootmenu)&lt;/code>&lt;/p>
&lt;p>&lt;code>kubevirt-boot-sidecar&lt;/code>只实现了&lt;code>OnDefineDomain&lt;/code>, 下面也是主要串一下OnDefineDomain相关的&lt;/p>
&lt;h3 id="sidecar工作流程">
 sidecar工作流程
 &lt;a class="anchor" href="#sidecar%e5%b7%a5%e4%bd%9c%e6%b5%81%e7%a8%8b">#&lt;/a>
&lt;/h3>
&lt;ol>
&lt;li>&lt;code>virt-launcher&lt;/code>刚启动时收集所有sidecar信息
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-golang" data-lang="golang">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// cmd/virt-launcher/virt-launcher.go&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">func&lt;/span> &lt;span style="color:#a6e22e">main&lt;/span>() {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">hookSidecars&lt;/span> &lt;span style="color:#f92672">:=&lt;/span> &lt;span style="color:#a6e22e">pflag&lt;/span>.&lt;span style="color:#a6e22e">Uint&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;hook-sidecars&amp;#34;&lt;/span>, &lt;span style="color:#ae81ff">0&lt;/span>, &lt;span style="color:#e6db74">&amp;#34;Number of requested hook sidecars, virt-launcher will wait for all of them to become available&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// 收集所有sidecar的信息&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">err&lt;/span> &lt;span style="color:#f92672">:=&lt;/span> &lt;span style="color:#a6e22e">hookManager&lt;/span>.&lt;span style="color:#a6e22e">Collect&lt;/span>(&lt;span style="color:#f92672">*&lt;/span>&lt;span style="color:#a6e22e">hookSidecars&lt;/span>, &lt;span style="color:#f92672">*&lt;/span>&lt;span style="color:#a6e22e">qemuTimeout&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// 启动 cmd server, 这里面有 SyncVirtualMachine 方法, 具体的实现在 func (l *LibvirtDomainManager) SyncVMI&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// virt-handler在初始化完虚拟机硬盘等之后会通过 SyncVirtualMachine 调用SyncVMI函数开始创建domain&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// SyncVMI将vmi spec转换为domainSpec, 然后调用hooksManager.OnDefineDomain执行所有的sidecar的OnDefineDomain方法&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// 最终用OnDefineDomain编辑后的domainSpec创建domain&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">cmdServerDone&lt;/span> &lt;span style="color:#f92672">:=&lt;/span> &lt;span style="color:#a6e22e">startCmdServer&lt;/span>(&lt;span style="color:#a6e22e">cmdclient&lt;/span>.&lt;span style="color:#a6e22e">UninitializedSocketOnGuest&lt;/span>(), &lt;span style="color:#a6e22e">domainManager&lt;/span>, &lt;span style="color:#a6e22e">stopChan&lt;/span>, &lt;span style="color:#a6e22e">options&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// pkg/hooks/manager.go&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// numberOfRequestedHookSidecars为vmi注解 hooks.kubevirt.io/hookSidecars 的数组长度, 在virt-controller生成pod manifest的逻辑中计算得出&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">func&lt;/span> (&lt;span style="color:#a6e22e">m&lt;/span> &lt;span style="color:#f92672">*&lt;/span>&lt;span style="color:#a6e22e">hookManager&lt;/span>) &lt;span style="color:#a6e22e">Collect&lt;/span>(&lt;span style="color:#a6e22e">numberOfRequestedHookSidecars&lt;/span> &lt;span style="color:#66d9ef">uint&lt;/span>, &lt;span style="color:#a6e22e">timeout&lt;/span> &lt;span style="color:#a6e22e">time&lt;/span>.&lt;span style="color:#a6e22e">Duration&lt;/span>) &lt;span style="color:#66d9ef">error&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// callbacksPerHookPoint&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">callbacksPerHookPoint&lt;/span>, &lt;span style="color:#a6e22e">err&lt;/span> &lt;span style="color:#f92672">:=&lt;/span> &lt;span style="color:#a6e22e">m&lt;/span>.&lt;span style="color:#a6e22e">collectSideCarSockets&lt;/span>(&lt;span style="color:#a6e22e">numberOfRequestedHookSidecars&lt;/span>, &lt;span style="color:#a6e22e">timeout&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">m&lt;/span>.&lt;span style="color:#a6e22e">CallbacksPerHookPoint&lt;/span> = &lt;span style="color:#a6e22e">callbacksPerHookPoint&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// pkg/hooks/manager.go&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">func&lt;/span> (&lt;span style="color:#a6e22e">m&lt;/span> &lt;span style="color:#f92672">*&lt;/span>&lt;span style="color:#a6e22e">hookManager&lt;/span>) &lt;span style="color:#a6e22e">collectSideCarSockets&lt;/span>(&lt;span style="color:#a6e22e">numberOfRequestedHookSidecars&lt;/span> &lt;span style="color:#66d9ef">uint&lt;/span>, &lt;span style="color:#a6e22e">timeout&lt;/span> &lt;span style="color:#a6e22e">time&lt;/span>.&lt;span style="color:#a6e22e">Duration&lt;/span>) (&lt;span style="color:#66d9ef">map&lt;/span>[&lt;span style="color:#66d9ef">string&lt;/span>][]&lt;span style="color:#f92672">*&lt;/span>&lt;span style="color:#a6e22e">callBackClient&lt;/span>, &lt;span style="color:#66d9ef">error&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">callbacksPerHookPoint&lt;/span> &lt;span style="color:#f92672">:=&lt;/span> make(&lt;span style="color:#66d9ef">map&lt;/span>[&lt;span style="color:#66d9ef">string&lt;/span>][]&lt;span style="color:#f92672">*&lt;/span>&lt;span style="color:#a6e22e">callBackClient&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">processedSockets&lt;/span> &lt;span style="color:#f92672">:=&lt;/span> make(&lt;span style="color:#66d9ef">map&lt;/span>[&lt;span style="color:#66d9ef">string&lt;/span>]&lt;span style="color:#66d9ef">bool&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">timeoutCh&lt;/span> &lt;span style="color:#f92672">:=&lt;/span> &lt;span style="color:#a6e22e">time&lt;/span>.&lt;span style="color:#a6e22e">After&lt;/span>(&lt;span style="color:#a6e22e">timeout&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">for&lt;/span> uint(len(&lt;span style="color:#a6e22e">processedSockets&lt;/span>)) &amp;lt; &lt;span style="color:#a6e22e">numberOfRequestedHookSidecars&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">sockets&lt;/span>, &lt;span style="color:#a6e22e">err&lt;/span> &lt;span style="color:#f92672">:=&lt;/span> &lt;span style="color:#a6e22e">os&lt;/span>.&lt;span style="color:#a6e22e">ReadDir&lt;/span>(&lt;span style="color:#a6e22e">m&lt;/span>.&lt;span style="color:#a6e22e">hookSocketSharedDirectory&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// 遍历 /var/run/kubevirt-hooks/ 目录下的 unix socket 文件&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">for&lt;/span> &lt;span style="color:#a6e22e">_&lt;/span>, &lt;span style="color:#a6e22e">socket&lt;/span> &lt;span style="color:#f92672">:=&lt;/span> &lt;span style="color:#66d9ef">range&lt;/span> &lt;span style="color:#a6e22e">sockets&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">select&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">case&lt;/span> &lt;span style="color:#f92672">&amp;lt;-&lt;/span>&lt;span style="color:#a6e22e">timeoutCh&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> &lt;span style="color:#66d9ef">nil&lt;/span>, &lt;span style="color:#a6e22e">fmt&lt;/span>.&lt;span style="color:#a6e22e">Errorf&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;Failed to collect all expected sidecar hook sockets within given timeout&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">default&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> &lt;span style="color:#a6e22e">_&lt;/span>, &lt;span style="color:#a6e22e">processed&lt;/span> &lt;span style="color:#f92672">:=&lt;/span> &lt;span style="color:#a6e22e">processedSockets&lt;/span>[&lt;span style="color:#a6e22e">socket&lt;/span>.&lt;span style="color:#a6e22e">Name&lt;/span>()]; &lt;span style="color:#a6e22e">processed&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">continue&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// 连接 sock 文件对应的 sidecar server 的 Info 函数获取 server 实现了哪些 hook(onDefineDomain或preCloudInitIso)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">callBackClient&lt;/span>, &lt;span style="color:#a6e22e">notReady&lt;/span>, &lt;span style="color:#a6e22e">err&lt;/span> &lt;span style="color:#f92672">:=&lt;/span> &lt;span style="color:#a6e22e">processSideCarSocket&lt;/span>(&lt;span style="color:#a6e22e">filepath&lt;/span>.&lt;span style="color:#a6e22e">Join&lt;/span>(&lt;span style="color:#a6e22e">m&lt;/span>.&lt;span style="color:#a6e22e">hookSocketSharedDirectory&lt;/span>, &lt;span style="color:#a6e22e">socket&lt;/span>.&lt;span style="color:#a6e22e">Name&lt;/span>()))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> &lt;span style="color:#a6e22e">notReady&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">log&lt;/span>.&lt;span style="color:#a6e22e">Log&lt;/span>.&lt;span style="color:#a6e22e">Info&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;Sidecar server might not be ready yet, retrying in the next iteration&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">continue&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> } &lt;span style="color:#66d9ef">else&lt;/span> &lt;span style="color:#66d9ef">if&lt;/span> &lt;span style="color:#a6e22e">err&lt;/span> &lt;span style="color:#f92672">!=&lt;/span> &lt;span style="color:#66d9ef">nil&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> &lt;span style="color:#66d9ef">nil&lt;/span>, &lt;span style="color:#a6e22e">err&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// callbacksPerHookPoint[onDefineDomain|preCloudInitIso][]*callBackClient{}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// 聚合出 onDefineDomain:[&amp;#34;aaaa.sock&amp;#34;,&amp;#34;bbbb.sock&amp;#34;]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">for&lt;/span> &lt;span style="color:#a6e22e">_&lt;/span>, &lt;span style="color:#a6e22e">subscribedHookPoint&lt;/span> &lt;span style="color:#f92672">:=&lt;/span> &lt;span style="color:#66d9ef">range&lt;/span> &lt;span style="color:#a6e22e">callBackClient&lt;/span>.&lt;span style="color:#a6e22e">subscribedHookPoints&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">callbacksPerHookPoint&lt;/span>[&lt;span style="color:#a6e22e">subscribedHookPoint&lt;/span>.&lt;span style="color:#a6e22e">GetName&lt;/span>()] = append(&lt;span style="color:#a6e22e">callbacksPerHookPoint&lt;/span>[&lt;span style="color:#a6e22e">subscribedHookPoint&lt;/span>.&lt;span style="color:#a6e22e">GetName&lt;/span>()], &lt;span style="color:#a6e22e">callBackClient&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">processedSockets&lt;/span>[&lt;span style="color:#a6e22e">socket&lt;/span>.&lt;span style="color:#a6e22e">Name&lt;/span>()] = &lt;span style="color:#66d9ef">true&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">time&lt;/span>.&lt;span style="color:#a6e22e">Sleep&lt;/span>(&lt;span style="color:#a6e22e">time&lt;/span>.&lt;span style="color:#a6e22e">Second&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// {&amp;#34;onDefineDomain&amp;#34;:[{&amp;#34;SocketPath&amp;#34;:&amp;#34;/var/run/kubevirt-hooks/shim-xxxx.sock&amp;#34;, &amp;#34;Version&amp;#34;:&amp;#34;v1alpha3&amp;#34;, &amp;#34;subscribedHookPoints&amp;#34;: [{&amp;#34;name&amp;#34;: &amp;#34;onDefineDomain&amp;#34;, &amp;#34;priority&amp;#34;: 0}]}]}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> &lt;span style="color:#a6e22e">callbacksPerHookPoint&lt;/span>, &lt;span style="color:#66d9ef">nil&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>&lt;code>virt-launcher&lt;/code>启动之后, &lt;code>virt-handler&lt;/code>会执行一些本地盘等相关初始化配置后通过gRPC调用&lt;code>virt-launcher&lt;/code>的&lt;code>SyncVirtualMachine&lt;/code>方法开始创建domain
&lt;ol>
&lt;li>&lt;code>SyncVMI&lt;/code>
&lt;ol>
&lt;li>&lt;code>Convert_v1_VirtualMachineInstance_To_api_Domain&lt;/code> 将 vmi 转换为 domainSpec&lt;/li>
&lt;li>&lt;code>lookupOrCreateVirDomain&lt;/code> 先&lt;code>LookupDomainByName&lt;/code>, 如果已存在则直接退出
&lt;ol>
&lt;li>&lt;code>preStartHook&lt;/code>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-golang" data-lang="golang">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">hooksManager&lt;/span> &lt;span style="color:#f92672">:=&lt;/span> &lt;span style="color:#a6e22e">hooks&lt;/span>.&lt;span style="color:#a6e22e">GetManager&lt;/span>()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// 执行所有的 PreCloudInitIso sidecar&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">cloudInitData&lt;/span>, &lt;span style="color:#a6e22e">err&lt;/span> = &lt;span style="color:#a6e22e">hooksManager&lt;/span>.&lt;span style="color:#a6e22e">PreCloudInitIso&lt;/span>(&lt;span style="color:#a6e22e">vmi&lt;/span>, &lt;span style="color:#a6e22e">cloudInitData&lt;/span>)
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>&lt;code>setDomainSpecWithHooks&lt;/code>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-golang" data-lang="golang">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// pkg/virt-launcher/virtwarp/util/libvirt-helper.go&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">func&lt;/span> &lt;span style="color:#a6e22e">SetDomainSpecStrWithHooks&lt;/span>(&lt;span style="color:#a6e22e">virConn&lt;/span> &lt;span style="color:#a6e22e">cli&lt;/span>.&lt;span style="color:#a6e22e">Connection&lt;/span>, &lt;span style="color:#a6e22e">vmi&lt;/span> &lt;span style="color:#f92672">*&lt;/span>&lt;span style="color:#a6e22e">v1&lt;/span>.&lt;span style="color:#a6e22e">VirtualMachineInstance&lt;/span>, &lt;span style="color:#a6e22e">wantedSpec&lt;/span> &lt;span style="color:#f92672">*&lt;/span>&lt;span style="color:#a6e22e">api&lt;/span>.&lt;span style="color:#a6e22e">DomainSpec&lt;/span>) (&lt;span style="color:#a6e22e">cli&lt;/span>.&lt;span style="color:#a6e22e">VirDomain&lt;/span>, &lt;span style="color:#66d9ef">error&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">hooksManager&lt;/span> &lt;span style="color:#f92672">:=&lt;/span> &lt;span style="color:#a6e22e">getHookManager&lt;/span>()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// 执行所有的 OnDefineDomain sidecar&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">domainSpec&lt;/span>, &lt;span style="color:#a6e22e">err&lt;/span> &lt;span style="color:#f92672">:=&lt;/span> &lt;span style="color:#a6e22e">hooksManager&lt;/span>.&lt;span style="color:#a6e22e">OnDefineDomain&lt;/span>(&lt;span style="color:#a6e22e">wantedSpec&lt;/span>, &lt;span style="color:#a6e22e">vmi&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// 调用 virConn.DomainDefineXML 创建 domain&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> &lt;span style="color:#a6e22e">SetDomainSpecStr&lt;/span>(&lt;span style="color:#a6e22e">virConn&lt;/span>, &lt;span style="color:#a6e22e">vmi&lt;/span>, &lt;span style="color:#a6e22e">domainSpec&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// /pkg/hooks/manager.go&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">func&lt;/span> (&lt;span style="color:#a6e22e">m&lt;/span> &lt;span style="color:#f92672">*&lt;/span>&lt;span style="color:#a6e22e">hookManager&lt;/span>) &lt;span style="color:#a6e22e">OnDefineDomain&lt;/span>(&lt;span style="color:#a6e22e">domainSpec&lt;/span> &lt;span style="color:#f92672">*&lt;/span>&lt;span style="color:#a6e22e">virtwrapApi&lt;/span>.&lt;span style="color:#a6e22e">DomainSpec&lt;/span>, &lt;span style="color:#a6e22e">vmi&lt;/span> &lt;span style="color:#f92672">*&lt;/span>&lt;span style="color:#a6e22e">v1&lt;/span>.&lt;span style="color:#a6e22e">VirtualMachineInstance&lt;/span>) (&lt;span style="color:#66d9ef">string&lt;/span>, &lt;span style="color:#66d9ef">error&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">domainSpecXML&lt;/span>, &lt;span style="color:#a6e22e">err&lt;/span> &lt;span style="color:#f92672">:=&lt;/span> &lt;span style="color:#a6e22e">xml&lt;/span>.&lt;span style="color:#a6e22e">MarshalIndent&lt;/span>(&lt;span style="color:#a6e22e">domainSpec&lt;/span>, &lt;span style="color:#e6db74">&amp;#34;&amp;#34;&lt;/span>, &lt;span style="color:#e6db74">&amp;#34;\t&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">callbacks&lt;/span>, &lt;span style="color:#a6e22e">found&lt;/span> &lt;span style="color:#f92672">:=&lt;/span> &lt;span style="color:#a6e22e">m&lt;/span>.&lt;span style="color:#a6e22e">CallbacksPerHookPoint&lt;/span>[&lt;span style="color:#a6e22e">hooksInfo&lt;/span>.&lt;span style="color:#a6e22e">OnDefineDomainHookPointName&lt;/span>]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> !&lt;span style="color:#a6e22e">found&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> string(&lt;span style="color:#a6e22e">domainSpecXML&lt;/span>), &lt;span style="color:#66d9ef">nil&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">vmiJSON&lt;/span>, &lt;span style="color:#a6e22e">err&lt;/span> &lt;span style="color:#f92672">:=&lt;/span> &lt;span style="color:#a6e22e">json&lt;/span>.&lt;span style="color:#a6e22e">Marshal&lt;/span>(&lt;span style="color:#a6e22e">vmi&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">for&lt;/span> &lt;span style="color:#a6e22e">_&lt;/span>, &lt;span style="color:#a6e22e">callback&lt;/span> &lt;span style="color:#f92672">:=&lt;/span> &lt;span style="color:#66d9ef">range&lt;/span> &lt;span style="color:#a6e22e">callbacks&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// 执行所有的sidecar OnDefineDomain函数, 一次次编辑domainSpecXML&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">domainSpecXML&lt;/span>, &lt;span style="color:#a6e22e">err&lt;/span> = &lt;span style="color:#a6e22e">m&lt;/span>.&lt;span style="color:#a6e22e">onDefineDomainCallback&lt;/span>(&lt;span style="color:#a6e22e">callback&lt;/span>, &lt;span style="color:#a6e22e">domainSpecXML&lt;/span>, &lt;span style="color:#a6e22e">vmiJSON&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> string(&lt;span style="color:#a6e22e">domainSpecXML&lt;/span>), &lt;span style="color:#66d9ef">nil&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// /pkg/hooks/manager.go&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">func&lt;/span> (&lt;span style="color:#a6e22e">m&lt;/span> &lt;span style="color:#f92672">*&lt;/span>&lt;span style="color:#a6e22e">hookManager&lt;/span>) &lt;span style="color:#a6e22e">onDefineDomainCallback&lt;/span>(&lt;span style="color:#a6e22e">callback&lt;/span> &lt;span style="color:#f92672">*&lt;/span>&lt;span style="color:#a6e22e">callBackClient&lt;/span>, &lt;span style="color:#a6e22e">domainSpecXML&lt;/span>, &lt;span style="color:#a6e22e">vmiJSON&lt;/span> []&lt;span style="color:#66d9ef">byte&lt;/span>) ([]&lt;span style="color:#66d9ef">byte&lt;/span>, &lt;span style="color:#66d9ef">error&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// dial /var/run/kubevirt-hooks/shim-xxxx.sock&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">conn&lt;/span>, &lt;span style="color:#a6e22e">err&lt;/span> &lt;span style="color:#f92672">:=&lt;/span> &lt;span style="color:#a6e22e">grpcutil&lt;/span>.&lt;span style="color:#a6e22e">DialSocketWithTimeout&lt;/span>(&lt;span style="color:#a6e22e">callback&lt;/span>.&lt;span style="color:#a6e22e">SocketPath&lt;/span>, &lt;span style="color:#ae81ff">1&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">switch&lt;/span> &lt;span style="color:#a6e22e">callback&lt;/span>.&lt;span style="color:#a6e22e">Version&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">case&lt;/span> &lt;span style="color:#a6e22e">hooksV1alpha3&lt;/span>.&lt;span style="color:#a6e22e">Version&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">client&lt;/span> &lt;span style="color:#f92672">:=&lt;/span> &lt;span style="color:#a6e22e">hooksV1alpha3&lt;/span>.&lt;span style="color:#a6e22e">NewCallbacksClient&lt;/span>(&lt;span style="color:#a6e22e">conn&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// 调用sidecar server 的 OnDefineDomain 方法&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">result&lt;/span>, &lt;span style="color:#a6e22e">err&lt;/span> &lt;span style="color:#f92672">:=&lt;/span> &lt;span style="color:#a6e22e">client&lt;/span>.&lt;span style="color:#a6e22e">OnDefineDomain&lt;/span>(&lt;span style="color:#a6e22e">ctx&lt;/span>, &lt;span style="color:#f92672">&amp;amp;&lt;/span>&lt;span style="color:#a6e22e">hooksV1alpha3&lt;/span>.&lt;span style="color:#a6e22e">OnDefineDomainParams&lt;/span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">DomainXML&lt;/span>: &lt;span style="color:#a6e22e">domainSpecXML&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">Vmi&lt;/span>: &lt;span style="color:#a6e22e">vmiJSON&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> })
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">domainSpecXML&lt;/span> = &lt;span style="color:#a6e22e">result&lt;/span>.&lt;span style="color:#a6e22e">GetDomainXML&lt;/span>()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> &lt;span style="color:#a6e22e">domainSpecXML&lt;/span>, &lt;span style="color:#66d9ef">nil&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;/ol>
&lt;/li>
&lt;/ol>
&lt;/li>
&lt;/ol>
&lt;/li>
&lt;/ol>
&lt;p>会发现上面主要是sidecar client视角, 没有介绍sidecar server在哪实现的, 最新的解决方案是搭配&lt;code>sidecar-shim&lt;/code>, 下面开始介绍&lt;/p></description></item><item><title>无线转有线网络</title><link>/posts/wireless-to-wired-network/</link><pubDate>Tue, 09 Apr 2024 22:16:24 +0800</pubDate><guid>/posts/wireless-to-wired-network/</guid><description>&lt;blockquote>
&lt;p>通过无线网卡连接网络&lt;code>A(192.168.31.0/24)&lt;/code>, 无线网卡相当于&lt;code>WAN&lt;/code>口，通过有线网卡接入网络&lt;code>B(192.168.1.0/24)&lt;/code>, 有线网卡相当于&lt;code>LAN&lt;/code>口&lt;/p>&lt;/blockquote>
&lt;h2 id="准备一个ubuntu虚拟机router">
 准备一个ubuntu虚拟机&lt;code>router&lt;/code>
 &lt;a class="anchor" href="#%e5%87%86%e5%a4%87%e4%b8%80%e4%b8%aaubuntu%e8%99%9a%e6%8b%9f%e6%9c%barouter">#&lt;/a>
&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 准备qcow2基础镜像&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>wget https://down.idc.wiki/Image/realServer-Template/current/qcow2/ubuntu22.qcow2 -O /var/lib/libvirt/images/ubuntu.qcow2
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 创建虚拟机以基础镜像为backing file的增量盘&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>qemu-img create -f qcow2 -F qcow2 -b /var/lib/libvirt/images/ubuntu.qcow2 /var/lib/libvirt/disks/router.qcow2 20G
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 创建并启动虚拟机&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>virt-install --name router --memory &lt;span style="color:#ae81ff">512&lt;/span> --vcpus &lt;span style="color:#ae81ff">1&lt;/span> --disk /var/lib/libvirt/disks/router.qcow2,bus&lt;span style="color:#f92672">=&lt;/span>sata --import --os-variant ubuntu22.10 --network bridge&lt;span style="color:#f92672">=&lt;/span>br0 --noautoconsole
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 设置自动启动&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>virsh autostart router
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="配置网络">
 配置网络
 &lt;a class="anchor" href="#%e9%85%8d%e7%bd%ae%e7%bd%91%e7%bb%9c">#&lt;/a>
&lt;/h2>
&lt;h3 id="将无线网卡透传进虚拟机">
 将无线网卡透传进虚拟机
 &lt;a class="anchor" href="#%e5%b0%86%e6%97%a0%e7%ba%bf%e7%bd%91%e5%8d%a1%e9%80%8f%e4%bc%a0%e8%bf%9b%e8%99%9a%e6%8b%9f%e6%9c%ba">#&lt;/a>
&lt;/h3>
&lt;p>打开 &lt;code>virt-manager&lt;/code> -&amp;gt; 双击 &lt;code>router domain&lt;/code> -&amp;gt; 点击 &lt;code>Show virtual hardware details&lt;/code> -&amp;gt; 点击 &lt;code>Add Hardware&lt;/code> -&amp;gt; 点击 &lt;code>PCI Host Device&lt;/code> -&amp;gt; 选择 &lt;code>Intel Corporation Wi-Fi 6 AX200&lt;/code> -&amp;gt; 点击 &lt;code>Finish&lt;/code>&lt;/p></description></item><item><title>Rclone 使用笔记</title><link>/posts/rclone/</link><pubDate>Thu, 04 Apr 2024 15:56:58 +0800</pubDate><guid>/posts/rclone/</guid><description>&lt;blockquote>
&lt;p>使用&lt;code>rclone&lt;/code>和&lt;code>alist&lt;/code>提供的&lt;code>webdav&lt;/code>接口将阿里云盘&lt;code>mount&lt;/code>到Ubuntu 22.04的目录上, 实现像访问本地文件一样访问阿里云盘内的文件&lt;/p>&lt;/blockquote>
&lt;h2 id="下载安装rclone">
 下载安装&lt;code>rclone&lt;/code>
 &lt;a class="anchor" href="#%e4%b8%8b%e8%bd%bd%e5%ae%89%e8%a3%85rclone">#&lt;/a>
&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>curl https://rclone.org/install.sh | bash
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="配置rclone-config">
 配置&lt;code>rclone config&lt;/code>
 &lt;a class="anchor" href="#%e9%85%8d%e7%bd%aerclone-config">#&lt;/a>
&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># rclone config&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>No remotes found, make a new one?
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>n&lt;span style="color:#f92672">)&lt;/span> New remote
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>s&lt;span style="color:#f92672">)&lt;/span> Set configuration password
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>q&lt;span style="color:#f92672">)&lt;/span> Quit config
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>n/s/q&amp;gt; n
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Enter name &lt;span style="color:#66d9ef">for&lt;/span> new remote.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>name&amp;gt; alist
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Option Storage.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Type of storage to configure.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Choose a number from below, or type in your own value.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ae81ff">1&lt;/span> / 1Fichier
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ae81ff">\ &lt;/span>&lt;span style="color:#f92672">(&lt;/span>fichier&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>...
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">51&lt;/span> / WebDAV
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ae81ff">\ &lt;/span>&lt;span style="color:#f92672">(&lt;/span>webdav&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>...
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Storage&amp;gt; &lt;span style="color:#ae81ff">51&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Option url.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>URL of http host to connect to.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>E.g. https://example.com.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Enter a value.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>url&amp;gt; http://alist.home.lan/dav/
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Option vendor.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Name of the WebDAV site/service/software you are using.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Choose a number from below, or type in your own value.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Press Enter to leave empty.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ae81ff">1&lt;/span> / Fastmail Files
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ae81ff">\ &lt;/span>&lt;span style="color:#f92672">(&lt;/span>fastmail&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ae81ff">2&lt;/span> / Nextcloud
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ae81ff">\ &lt;/span>&lt;span style="color:#f92672">(&lt;/span>nextcloud&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ae81ff">3&lt;/span> / Owncloud
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ae81ff">\ &lt;/span>&lt;span style="color:#f92672">(&lt;/span>owncloud&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ae81ff">4&lt;/span> / Sharepoint Online, authenticated by Microsoft account
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ae81ff">\ &lt;/span>&lt;span style="color:#f92672">(&lt;/span>sharepoint&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ae81ff">5&lt;/span> / Sharepoint with NTLM authentication, usually self-hosted or on-premises
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ae81ff">\ &lt;/span>&lt;span style="color:#f92672">(&lt;/span>sharepoint-ntlm&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ae81ff">6&lt;/span> / rclone WebDAV server to serve a remote over HTTP via the WebDAV protocol
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ae81ff">\ &lt;/span>&lt;span style="color:#f92672">(&lt;/span>rclone&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ae81ff">7&lt;/span> / Other site/service or software
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ae81ff">\ &lt;/span>&lt;span style="color:#f92672">(&lt;/span>other&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>vendor&amp;gt; &lt;span style="color:#ae81ff">7&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Option user.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>User name.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>In &lt;span style="color:#66d9ef">case&lt;/span> NTLM authentication is used, the username should be in the format &lt;span style="color:#e6db74">&amp;#39;Domain\User&amp;#39;&lt;/span>.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Enter a value. Press Enter to leave empty.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>user&amp;gt; admin
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Option pass.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Password.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Choose an alternative below. Press Enter &lt;span style="color:#66d9ef">for&lt;/span> the default &lt;span style="color:#f92672">(&lt;/span>n&lt;span style="color:#f92672">)&lt;/span>.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>y&lt;span style="color:#f92672">)&lt;/span> Yes, type in my own password
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>g&lt;span style="color:#f92672">)&lt;/span> Generate random password
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>n&lt;span style="color:#f92672">)&lt;/span> No, leave this optional password blank &lt;span style="color:#f92672">(&lt;/span>default&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>y/g/n&amp;gt; y
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Enter the password:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>password:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Confirm the password:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>password:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Option bearer_token.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Bearer token instead of user/pass &lt;span style="color:#f92672">(&lt;/span>e.g. a Macaroon&lt;span style="color:#f92672">)&lt;/span>.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Enter a value. Press Enter to leave empty.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>bearer_token&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Edit advanced config?
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>y&lt;span style="color:#f92672">)&lt;/span> Yes
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>n&lt;span style="color:#f92672">)&lt;/span> No &lt;span style="color:#f92672">(&lt;/span>default&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>y/n&amp;gt; n
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Configuration complete.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Options:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>- type: webdav
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>- url: http://alist.home.lan/dav/
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>- vendor: other
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>- user: admin
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>- pass: *** ENCRYPTED ***
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Keep this &lt;span style="color:#e6db74">&amp;#34;alist&amp;#34;&lt;/span> remote?
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>y&lt;span style="color:#f92672">)&lt;/span> Yes this is OK &lt;span style="color:#f92672">(&lt;/span>default&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>e&lt;span style="color:#f92672">)&lt;/span> Edit this remote
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>d&lt;span style="color:#f92672">)&lt;/span> Delete this remote
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>y/e/d&amp;gt; y
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Current remotes:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Name Type
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">====&lt;/span> &lt;span style="color:#f92672">====&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>alist webdav
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>e&lt;span style="color:#f92672">)&lt;/span> Edit existing remote
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>n&lt;span style="color:#f92672">)&lt;/span> New remote
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>d&lt;span style="color:#f92672">)&lt;/span> Delete remote
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>r&lt;span style="color:#f92672">)&lt;/span> Rename remote
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>c&lt;span style="color:#f92672">)&lt;/span> Copy remote
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>s&lt;span style="color:#f92672">)&lt;/span> Set configuration password
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>q&lt;span style="color:#f92672">)&lt;/span> Quit config
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>e/n/d/r/c/s/q&amp;gt; q
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="查看有哪些remote">
 查看有哪些remote
 &lt;a class="anchor" href="#%e6%9f%a5%e7%9c%8b%e6%9c%89%e5%93%aa%e4%ba%9bremote">#&lt;/a>
&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># rclone listremotes&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>alist:
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="查看某个remote下的目录或文件">
 查看某个&lt;code>remote&lt;/code>下的目录或文件
 &lt;a class="anchor" href="#%e6%9f%a5%e7%9c%8b%e6%9f%90%e4%b8%aaremote%e4%b8%8b%e7%9a%84%e7%9b%ae%e5%bd%95%e6%88%96%e6%96%87%e4%bb%b6">#&lt;/a>
&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># rclone lsd alist:/ali/video/诛仙&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> -1 2024-04-02 12:27:23 -1 诛仙.第1季.2022-2023.4K.全26集
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> -1 2024-04-02 12:27:24 -1 诛仙.第2季.2024
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># rclone ls alist:/ali/video/诛仙/诛仙.第2季.2024&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">959919343&lt;/span> 第27集-Zhu.Xian-2024-03-29-4k-HEVC-H265.AAC-WEB-DL.mkv
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">995844543&lt;/span> 第28集-Zhu.Xian-2024-03-29-4K-HEVC-H265.AAC-WEB-DL.mkv
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">1012470661&lt;/span> 第29集-Zhu.Xian-2024-03-29-4K-HEVC-H265.AAC-WEB-DL.mkv
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="将alist-mount-到目录">
 将&lt;code>alist&lt;/code> mount 到目录
 &lt;a class="anchor" href="#%e5%b0%86alist-mount-%e5%88%b0%e7%9b%ae%e5%bd%95">#&lt;/a>
&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>sudo mkdir -p /mnt/alist
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sudo chmod &lt;span style="color:#ae81ff">777&lt;/span> /mnt/alist
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># --header &amp;#34;Referer:https://www.aliyundrive.com/&amp;#34; 是必须要有的&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>rclone mount --cache-dir&lt;span style="color:#f92672">=&lt;/span>/tmp --vfs-cache-mode&lt;span style="color:#f92672">=&lt;/span>writes --header &lt;span style="color:#e6db74">&amp;#34;Referer:https://www.aliyundrive.com/&amp;#34;&lt;/span> alist: /mnt/alist/
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>配置开机自动挂载&lt;/p></description></item><item><title>Multi-Bootable USB</title><link>/posts/multi-bootable-usb/</link><pubDate>Thu, 28 Mar 2024 22:20:22 +0800</pubDate><guid>/posts/multi-bootable-usb/</guid><description>&lt;blockquote>
&lt;p>从一个USB设备(U盘)启动多个操作系统, 并且U盘还能继续存储其他普通文件&lt;/p>&lt;/blockquote>
&lt;h2 id="下载并解压ventoy">
 下载并解压&lt;code>ventoy&lt;/code>
 &lt;a class="anchor" href="#%e4%b8%8b%e8%bd%bd%e5%b9%b6%e8%a7%a3%e5%8e%8bventoy">#&lt;/a>
&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>wget https://github.com/ventoy/Ventoy/releases/download/v1.0.97/ventoy-1.0.97-linux.tar.gz
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>tar -xvzf ventoy-1.0.97-linux.tar.gz
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>cd ventoy-1.0.97/
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;code>Ventoy2Disk.sh&lt;/code>用来安装&lt;code>ventor&lt;/code>到U盘&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>./Ventoy2Disk.sh -h
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>**********************************************
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Ventoy: 1.0.97 x86_64
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> longpanda admin@ventoy.net
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> https://www.ventoy.net
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>**********************************************
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Usage: Ventoy2Disk.sh CMD &lt;span style="color:#f92672">[&lt;/span> OPTION &lt;span style="color:#f92672">]&lt;/span> /dev/sdX
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> CMD:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> -i install Ventoy to sdX &lt;span style="color:#f92672">(&lt;/span>fails &lt;span style="color:#66d9ef">if&lt;/span> disk already installed with Ventoy&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> -I force install Ventoy to sdX &lt;span style="color:#f92672">(&lt;/span>no matter &lt;span style="color:#66d9ef">if&lt;/span> installed or not&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> -u update Ventoy in sdX
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> -l list Ventoy information in sdX
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> OPTION: &lt;span style="color:#f92672">(&lt;/span>optional&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> -r SIZE_MB preserve some space at the bottom of the disk &lt;span style="color:#f92672">(&lt;/span>only &lt;span style="color:#66d9ef">for&lt;/span> install&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> -s/-S enable/disable secure boot support &lt;span style="color:#f92672">(&lt;/span>default is enabled&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> -g use GPT partition style, default is MBR &lt;span style="color:#f92672">(&lt;/span>only &lt;span style="color:#66d9ef">for&lt;/span> install&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> -L Label of the 1st exfat partition &lt;span style="color:#f92672">(&lt;/span>default is Ventoy&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> -n try non-destructive installation &lt;span style="color:#f92672">(&lt;/span>only &lt;span style="color:#66d9ef">for&lt;/span> install&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="安装ventoy">
 安装ventoy
 &lt;a class="anchor" href="#%e5%ae%89%e8%a3%85ventoy">#&lt;/a>
&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># ./Ventoy2Disk.sh -I /dev/sdb&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>**********************************************
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Ventoy: 1.0.97 x86_64
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> longpanda admin@ventoy.net
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> https://www.ventoy.net
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>**********************************************
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Disk : /dev/sdb
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Model: Kingston DataTraveler 3.0 &lt;span style="color:#f92672">(&lt;/span>scsi&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Size : &lt;span style="color:#ae81ff">115&lt;/span> GB
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Style: MBR
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Attention:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>You will install Ventoy to /dev/sdb.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>All the data on the disk /dev/sdb will be lost!!!
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Continue? &lt;span style="color:#f92672">(&lt;/span>y/n&lt;span style="color:#f92672">)&lt;/span> y
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>All the data on the disk /dev/sdb will be lost!!!
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Double-check. Continue? &lt;span style="color:#f92672">(&lt;/span>y/n&lt;span style="color:#f92672">)&lt;/span> y
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Create partitions on /dev/sdb by parted in MBR style ...
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Done
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Wait &lt;span style="color:#66d9ef">for&lt;/span> partitions ...
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>partition exist OK
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>create efi fat fs /dev/sdb2 ...
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>mkfs.fat 4.2 &lt;span style="color:#f92672">(&lt;/span>2021-01-31&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>success
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Wait &lt;span style="color:#66d9ef">for&lt;/span> partitions ...
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>/dev/sdb1 exist OK
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>/dev/sdb2 exist OK
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>partition exist OK
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Format partition &lt;span style="color:#ae81ff">1&lt;/span> /dev/sdb1 ...
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>mkexfatfs 1.3.0
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Creating... &lt;span style="color:#66d9ef">done&lt;/span>.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Flushing... &lt;span style="color:#66d9ef">done&lt;/span>.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>File system created successfully.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>mkexfatfs success
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>writing data to disk ...
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sync data ...
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>esp partition processing ...
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Install Ventoy to /dev/sdb successfully finished.
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>查看最终的U盘分区, &lt;code>sdb1&lt;/code>分区是存放&lt;code>iso&lt;/code>镜像的&lt;/p></description></item><item><title>Shell Script</title><link>/posts/shell-script/</link><pubDate>Sat, 23 Mar 2024 09:43:34 +0800</pubDate><guid>/posts/shell-script/</guid><description>&lt;blockquote>
&lt;p>最近写的shell脚本比较多，记录一些常用命令, 相当于记录一个索引, 以后用时可以快速回忆起来.&lt;/p>&lt;/blockquote>
&lt;h2 id="binbash">
 &lt;code>#!/bin/bash&lt;/code>
 &lt;a class="anchor" href="#binbash">#&lt;/a>
&lt;/h2>
&lt;p>&lt;code>#!/bin/bash&lt;/code>被称为&lt;code>shebang line&lt;/code>, 指定执行此脚本文件时使用&lt;code>/bin/bash&lt;/code>做为shell解释器程序&lt;/p>
&lt;p>很多主流操作系统默认的shell解释器也是bash&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># echo $SHELL&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>/bin/bash
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="set">
 &lt;code>set&lt;/code>
 &lt;a class="anchor" href="#set">#&lt;/a>
&lt;/h2>
&lt;p>&lt;code>set&lt;/code>命令用来修改shell环境的运行参数, 完整的可定制的&lt;a href="https://www.gnu.org/software/bash/manual/html_node/The-Set-Builtin.html">官方手册&lt;/a>&lt;/p>
&lt;p>下面是我常用的几个, 可以合并为如下内容写在脚本开头:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#!/bin/bash
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>set -uxe
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>set -o pipefail
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="set--u">
 &lt;code>set -u&lt;/code>
 &lt;a class="anchor" href="#set--u">#&lt;/a>
&lt;/h3>
&lt;p>执行脚本时, 如果遇到不存在的变量, Bash默认会忽略, &lt;code>set -u&lt;/code>可以让脚本读到不存在变量时报错&lt;/p>
&lt;h3 id="set--x">
 &lt;code>set -x&lt;/code>
 &lt;a class="anchor" href="#set--x">#&lt;/a>
&lt;/h3>
&lt;p>命令执行前会先打印出来, 行首以&lt;code>+&lt;/code>表示, 在调试脚本时非常有帮助&lt;/p>
&lt;h3 id="set--e">
 &lt;code>set -e&lt;/code>
 &lt;a class="anchor" href="#set--e">#&lt;/a>
&lt;/h3>
&lt;p>执行脚本时, Bash遇到错误默认会继续执行, &lt;code>set -e&lt;/code>使得脚本只要发生错误, 就中止执行&lt;/p>
&lt;h3 id="set--o-pipefail">
 &lt;code>set -o pipefail&lt;/code>
 &lt;a class="anchor" href="#set--o-pipefail">#&lt;/a>
&lt;/h3>
&lt;p>&lt;code>set -e&lt;/code>有一个例外情况, 就是不适用于管道命令, 比如下面的不会退出&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#!/bin/bash
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>set -e
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>foo | echo a
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>echo bar
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>执行的结果为:&lt;/p></description></item><item><title>sqlx vs xorm</title><link>/posts/sqlx-vs-xorm/</link><pubDate>Sat, 09 Mar 2024 10:49:09 +0800</pubDate><guid>/posts/sqlx-vs-xorm/</guid><description>&lt;h2 id="初始化演示环境">
 初始化演示环境
 &lt;a class="anchor" href="#%e5%88%9d%e5%a7%8b%e5%8c%96%e6%bc%94%e7%a4%ba%e7%8e%af%e5%a2%83">#&lt;/a>
&lt;/h2>
&lt;h3 id="使用docker部署">
 使用docker部署
 &lt;a class="anchor" href="#%e4%bd%bf%e7%94%a8docker%e9%83%a8%e7%bd%b2">#&lt;/a>
&lt;/h3>
&lt;p>部署的当前时间最新版本&lt;code>postgres:16.2&lt;/code>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>docker run -d --name pgsql &lt;span style="color:#ae81ff">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">&lt;/span> -e POSTGRES_USER&lt;span style="color:#f92672">=&lt;/span>admin &lt;span style="color:#ae81ff">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">&lt;/span> -e POSTGRES_PASSWORD&lt;span style="color:#f92672">=&lt;/span>admin &lt;span style="color:#ae81ff">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">&lt;/span> -e POSTGRES_DB&lt;span style="color:#f92672">=&lt;/span>testdb &lt;span style="color:#ae81ff">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">&lt;/span> -p 15432:5432 &lt;span style="color:#ae81ff">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">&lt;/span> postgres:16.2
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="使用psql连接">
 使用&lt;code>psql&lt;/code>连接
 &lt;a class="anchor" href="#%e4%bd%bf%e7%94%a8psql%e8%bf%9e%e6%8e%a5">#&lt;/a>
&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>docker exec -it pgsql psql -U admin -d testdb
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="初始化uservps和host表">
 初始化&lt;code>user&lt;/code>,&lt;code>vps&lt;/code>和&lt;code>host&lt;/code>表
 &lt;a class="anchor" href="#%e5%88%9d%e5%a7%8b%e5%8c%96uservps%e5%92%8chost%e8%a1%a8">#&lt;/a>
&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-sql" data-lang="sql">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">CREATE&lt;/span> &lt;span style="color:#66d9ef">TABLE&lt;/span> &lt;span style="color:#e6db74">&amp;#34;user&amp;#34;&lt;/span> (
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> id bigserial &lt;span style="color:#66d9ef">PRIMARY&lt;/span> &lt;span style="color:#66d9ef">KEY&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> username VARCHAR(&lt;span style="color:#ae81ff">255&lt;/span>) &lt;span style="color:#66d9ef">NOT&lt;/span> &lt;span style="color:#66d9ef">NULL&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> password VARCHAR(&lt;span style="color:#ae81ff">255&lt;/span>) &lt;span style="color:#66d9ef">NOT&lt;/span> &lt;span style="color:#66d9ef">NULL&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">CREATE&lt;/span> &lt;span style="color:#66d9ef">TABLE&lt;/span> &lt;span style="color:#e6db74">&amp;#34;host&amp;#34;&lt;/span> (
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> id bigserial &lt;span style="color:#66d9ef">PRIMARY&lt;/span> &lt;span style="color:#66d9ef">KEY&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> hostname VARCHAR(&lt;span style="color:#ae81ff">255&lt;/span>) &lt;span style="color:#66d9ef">NOT&lt;/span> &lt;span style="color:#66d9ef">NULL&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">CREATE&lt;/span> &lt;span style="color:#66d9ef">TABLE&lt;/span> &lt;span style="color:#e6db74">&amp;#34;vps&amp;#34;&lt;/span> (
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> id bigserial &lt;span style="color:#66d9ef">PRIMARY&lt;/span> &lt;span style="color:#66d9ef">KEY&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> user_id bigint &lt;span style="color:#66d9ef">NOT&lt;/span> &lt;span style="color:#66d9ef">NULL&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> host_id bigint &lt;span style="color:#66d9ef">NOT&lt;/span> &lt;span style="color:#66d9ef">NULL&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> name VARCHAR(&lt;span style="color:#ae81ff">255&lt;/span>) &lt;span style="color:#66d9ef">NOT&lt;/span> &lt;span style="color:#66d9ef">NULL&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> sys_disk jsonb &lt;span style="color:#66d9ef">NOT&lt;/span> &lt;span style="color:#66d9ef">NULL&lt;/span> &lt;span style="color:#66d9ef">DEFAULT&lt;/span> &lt;span style="color:#e6db74">&amp;#39;{}&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>);
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="查看创建出的表">
 查看创建出的表
 &lt;a class="anchor" href="#%e6%9f%a5%e7%9c%8b%e5%88%9b%e5%bb%ba%e5%87%ba%e7%9a%84%e8%a1%a8">#&lt;/a>
&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>testdb&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#75715e"># \z&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Access privileges
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Schema | Name | Type | Access privileges | Column privileges | Policies
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>--------+-------------+----------+-------------------+-------------------+----------
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> public | host | table | | |
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> public | host_id_seq | sequence | | |
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> public | user | table | | |
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> public | user_id_seq | sequence | | |
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> public | vps | table | | |
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> public | vps_id_seq | sequence | | |
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#ae81ff">6&lt;/span> rows&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>testdb&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#75715e"># \d user&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Table &lt;span style="color:#e6db74">&amp;#34;public.user&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Column | Type | Collation | Nullable | Default
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>----------+------------------------+-----------+----------+----------------------------------
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> id | bigint | | not null | nextval&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#e6db74">&amp;#39;user_id_seq&amp;#39;&lt;/span>::regclass&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> username | character varying&lt;span style="color:#f92672">(&lt;/span>255&lt;span style="color:#f92672">)&lt;/span> | | not null |
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> password | character varying&lt;span style="color:#f92672">(&lt;/span>255&lt;span style="color:#f92672">)&lt;/span> | | not null |
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Indexes:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#34;user_pkey&amp;#34;&lt;/span> PRIMARY KEY, btree &lt;span style="color:#f92672">(&lt;/span>id&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>testdb&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#75715e"># \d host&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Table &lt;span style="color:#e6db74">&amp;#34;public.host&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Column | Type | Collation | Nullable | Default
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>----------+------------------------+-----------+----------+----------------------------------
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> id | bigint | | not null | nextval&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#e6db74">&amp;#39;host_id_seq&amp;#39;&lt;/span>::regclass&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> hostname | character varying&lt;span style="color:#f92672">(&lt;/span>255&lt;span style="color:#f92672">)&lt;/span> | | not null |
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Indexes:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#34;host_pkey&amp;#34;&lt;/span> PRIMARY KEY, btree &lt;span style="color:#f92672">(&lt;/span>id&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>testdb&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#75715e"># \d vps&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Table &lt;span style="color:#e6db74">&amp;#34;public.vps&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Column | Type | Collation | Nullable | Default
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>----------+------------------------+-----------+----------+---------------------------------
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> id | bigint | | not null | nextval&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#e6db74">&amp;#39;vps_id_seq&amp;#39;&lt;/span>::regclass&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> user_id | bigint | | not null |
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> host_id | bigint | | not null |
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> name | character varying&lt;span style="color:#f92672">(&lt;/span>255&lt;span style="color:#f92672">)&lt;/span> | | not null |
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> sys_disk | jsonb | | not null | &lt;span style="color:#e6db74">&amp;#39;{}&amp;#39;&lt;/span>::jsonb
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Indexes:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#34;vps_pkey&amp;#34;&lt;/span> PRIMARY KEY, btree &lt;span style="color:#f92672">(&lt;/span>id&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="初始化数据">
 初始化数据
 &lt;a class="anchor" href="#%e5%88%9d%e5%a7%8b%e5%8c%96%e6%95%b0%e6%8d%ae">#&lt;/a>
&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-sql" data-lang="sql">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">-- 插入用户数据
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>&lt;span style="color:#66d9ef">INSERT&lt;/span> &lt;span style="color:#66d9ef">INTO&lt;/span> &lt;span style="color:#e6db74">&amp;#34;user&amp;#34;&lt;/span> (username, password) &lt;span style="color:#66d9ef">VALUES&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (&lt;span style="color:#e6db74">&amp;#39;user1&amp;#39;&lt;/span>, &lt;span style="color:#e6db74">&amp;#39;password1&amp;#39;&lt;/span>),
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (&lt;span style="color:#e6db74">&amp;#39;user2&amp;#39;&lt;/span>, &lt;span style="color:#e6db74">&amp;#39;password2&amp;#39;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">-- 插入主机数据
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>&lt;span style="color:#66d9ef">INSERT&lt;/span> &lt;span style="color:#66d9ef">INTO&lt;/span> &lt;span style="color:#e6db74">&amp;#34;host&amp;#34;&lt;/span> (hostname) &lt;span style="color:#66d9ef">VALUES&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (&lt;span style="color:#e6db74">&amp;#39;host1&amp;#39;&lt;/span>),
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (&lt;span style="color:#e6db74">&amp;#39;host2&amp;#39;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">-- user1 在 host1 上创建一个 VPS
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>&lt;span style="color:#66d9ef">INSERT&lt;/span> &lt;span style="color:#66d9ef">INTO&lt;/span> &lt;span style="color:#e6db74">&amp;#34;vps&amp;#34;&lt;/span> (user_id, host_id, name, sys_disk) &lt;span style="color:#66d9ef">VALUES&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ((&lt;span style="color:#66d9ef">SELECT&lt;/span> id &lt;span style="color:#66d9ef">FROM&lt;/span> &lt;span style="color:#e6db74">&amp;#34;user&amp;#34;&lt;/span> &lt;span style="color:#66d9ef">WHERE&lt;/span> username &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#39;user1&amp;#39;&lt;/span>), (&lt;span style="color:#66d9ef">SELECT&lt;/span> id &lt;span style="color:#66d9ef">FROM&lt;/span> &lt;span style="color:#66d9ef">host&lt;/span> &lt;span style="color:#66d9ef">WHERE&lt;/span> hostname &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#39;host1&amp;#39;&lt;/span>), &lt;span style="color:#e6db74">&amp;#39;vps_user1_host1&amp;#39;&lt;/span>, &lt;span style="color:#e6db74">&amp;#39;{&amp;#34;disk_size&amp;#34;: 50}&amp;#39;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">-- user2 在 host1 上创建一个 VPS
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>&lt;span style="color:#66d9ef">INSERT&lt;/span> &lt;span style="color:#66d9ef">INTO&lt;/span> &lt;span style="color:#e6db74">&amp;#34;vps&amp;#34;&lt;/span> (user_id, host_id, name, sys_disk) &lt;span style="color:#66d9ef">VALUES&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ((&lt;span style="color:#66d9ef">SELECT&lt;/span> id &lt;span style="color:#66d9ef">FROM&lt;/span> &lt;span style="color:#e6db74">&amp;#34;user&amp;#34;&lt;/span> &lt;span style="color:#66d9ef">WHERE&lt;/span> username &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#39;user2&amp;#39;&lt;/span>), (&lt;span style="color:#66d9ef">SELECT&lt;/span> id &lt;span style="color:#66d9ef">FROM&lt;/span> &lt;span style="color:#66d9ef">host&lt;/span> &lt;span style="color:#66d9ef">WHERE&lt;/span> hostname &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#39;host1&amp;#39;&lt;/span>), &lt;span style="color:#e6db74">&amp;#39;vps_user2_host1&amp;#39;&lt;/span>, &lt;span style="color:#e6db74">&amp;#39;{&amp;#34;disk_size&amp;#34;: 60}&amp;#39;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">-- user1 在 host2 上创建一个 VPS
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>&lt;span style="color:#66d9ef">INSERT&lt;/span> &lt;span style="color:#66d9ef">INTO&lt;/span> &lt;span style="color:#e6db74">&amp;#34;vps&amp;#34;&lt;/span> (user_id, host_id, name, sys_disk) &lt;span style="color:#66d9ef">VALUES&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ((&lt;span style="color:#66d9ef">SELECT&lt;/span> id &lt;span style="color:#66d9ef">FROM&lt;/span> &lt;span style="color:#e6db74">&amp;#34;user&amp;#34;&lt;/span> &lt;span style="color:#66d9ef">WHERE&lt;/span> username &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#39;user1&amp;#39;&lt;/span>), (&lt;span style="color:#66d9ef">SELECT&lt;/span> id &lt;span style="color:#66d9ef">FROM&lt;/span> &lt;span style="color:#66d9ef">host&lt;/span> &lt;span style="color:#66d9ef">WHERE&lt;/span> hostname &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#39;host2&amp;#39;&lt;/span>), &lt;span style="color:#e6db74">&amp;#39;vps_user1_host2&amp;#39;&lt;/span>, &lt;span style="color:#e6db74">&amp;#39;{&amp;#34;disk_size&amp;#34;: 70}&amp;#39;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">-- user2 在 host2 上创建一个 VPS
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>&lt;span style="color:#66d9ef">INSERT&lt;/span> &lt;span style="color:#66d9ef">INTO&lt;/span> &lt;span style="color:#e6db74">&amp;#34;vps&amp;#34;&lt;/span> (user_id, host_id, name, sys_disk) &lt;span style="color:#66d9ef">VALUES&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ((&lt;span style="color:#66d9ef">SELECT&lt;/span> id &lt;span style="color:#66d9ef">FROM&lt;/span> &lt;span style="color:#e6db74">&amp;#34;user&amp;#34;&lt;/span> &lt;span style="color:#66d9ef">WHERE&lt;/span> username &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#39;user2&amp;#39;&lt;/span>), (&lt;span style="color:#66d9ef">SELECT&lt;/span> id &lt;span style="color:#66d9ef">FROM&lt;/span> &lt;span style="color:#66d9ef">host&lt;/span> &lt;span style="color:#66d9ef">WHERE&lt;/span> hostname &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#39;host2&amp;#39;&lt;/span>), &lt;span style="color:#e6db74">&amp;#39;vps_user2_host2&amp;#39;&lt;/span>, &lt;span style="color:#e6db74">&amp;#39;{&amp;#34;disk_size&amp;#34;: 80}&amp;#39;&lt;/span>);
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="关于-databasesql">
 关于 &lt;code>database/sql&lt;/code>
 &lt;a class="anchor" href="#%e5%85%b3%e4%ba%8e-databasesql">#&lt;/a>
&lt;/h2>
&lt;p>&lt;code>database/sql&lt;/code>提供了操作SQL数据库的通用接口, 需要结合&lt;code>database driver&lt;/code>同时使用, 这里是一些&lt;a href="https://go.dev/wiki/SQLDrivers">驱动列表&lt;/a>&lt;/p></description></item><item><title>OpenWrt</title><link>/posts/openwrt/</link><pubDate>Sat, 06 Jan 2024 17:38:38 +0800</pubDate><guid>/posts/openwrt/</guid><description>&lt;p>很久没折腾&lt;code>OpenWrt&lt;/code>了, 囊中羞涩, 没有其他合适的设备, 这次是在KVM虚机中运行使用(&lt;code>ALL IN BOOM!&lt;/code>)&lt;/p>
&lt;p>先亮个当前的穷人版家庭网络拓扑图&lt;/p>
&lt;p>&lt;img src="/posts/linux/imgs/home-network-topology-diagram.svg" alt="穷人版家庭网络拓扑图" />&lt;/p>
&lt;h2 id="准备qcow2镜像">
 准备&lt;code>qcow2&lt;/code>镜像
 &lt;a class="anchor" href="#%e5%87%86%e5%a4%87qcow2%e9%95%9c%e5%83%8f">#&lt;/a>
&lt;/h2>
&lt;p>首先下载最新的&lt;a href="https://downloads.openwrt.org/releases">镜像&lt;/a>, 截止目前最新版为&lt;code>23.05.3&lt;/code>, 我这里下载的是x86-64的镜像&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>wget https://mirror-03.infra.openwrt.org/releases/23.05.3/targets/x86/64/openwrt-23.05.3-x86-64-generic-ext4-combined.img.gz
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 解压&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>gunzip openwrt-23.05.3-x86-64-generic-ext4-combined.img.gz
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 这里因为我要作为KVM虚拟机的镜像, 所以转换为qcow2格式. 如果是在物理机上部署, 可以直接直接刷到U盘上.&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>qemu-img convert -f raw openwrt-23.05.3-x86-64-generic-ext4-combined.img -O qcow2 /var/lib/libvirt/images/openwrt.qcow2
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="运行虚机">
 运行虚机
 &lt;a class="anchor" href="#%e8%bf%90%e8%a1%8c%e8%99%9a%e6%9c%ba">#&lt;/a>
&lt;/h2>
&lt;p>我是用&lt;code>libvirt&lt;/code>来管理qemu/kvm虚拟机, 如果没安装要先安装&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>apt install virt-manager qemu bridge-utils -y
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>我这里将镜像复制到了&lt;code>/var/lib/libvirt/disks/&lt;/code>目录下&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>qemu-img create -f qcow2 -F qcow2 -b /var/lib/libvirt/images/openwrt.qcow2 /var/lib/libvirt/disks/openwrt.qcow2 1G
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>使用&lt;code>virt-install&lt;/code>运行虚拟机, 这里网卡使用&lt;code>virtio&lt;/code>类型并桥接到之前文档里创建的&lt;code>br0&lt;/code>上,
选择&lt;code>virtio&lt;/code>是因为性能最好, 可以达到&lt;code>10Gbps&lt;/code>以上&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 运行, 这里网络指定的之前文章中创建的网桥网络br0&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>virt-install &lt;span style="color:#ae81ff">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">&lt;/span> --name openwrt &lt;span style="color:#ae81ff">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">&lt;/span> --memory &lt;span style="color:#ae81ff">256&lt;/span> &lt;span style="color:#ae81ff">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">&lt;/span> --vcpus &lt;span style="color:#ae81ff">1&lt;/span> &lt;span style="color:#ae81ff">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">&lt;/span> --network bridge&lt;span style="color:#f92672">=&lt;/span>br0,model&lt;span style="color:#f92672">=&lt;/span>virtio &lt;span style="color:#ae81ff">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">&lt;/span> --disk path&lt;span style="color:#f92672">=&lt;/span>/var/lib/libvirt/disks/openwrt.qcow2,bus&lt;span style="color:#f92672">=&lt;/span>ide &lt;span style="color:#ae81ff">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">&lt;/span> --import &lt;span style="color:#ae81ff">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">&lt;/span> --autostart &lt;span style="color:#ae81ff">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">&lt;/span> --osinfo detect&lt;span style="color:#f92672">=&lt;/span>on,require&lt;span style="color:#f92672">=&lt;/span>off &lt;span style="color:#ae81ff">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">&lt;/span> --noautoconsole
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="配置网络">
 配置网络
 &lt;a class="anchor" href="#%e9%85%8d%e7%bd%ae%e7%bd%91%e7%bb%9c">#&lt;/a>
&lt;/h2>
&lt;p>连接&lt;code>console&lt;/code>配置网络&lt;/p></description></item><item><title>dhclient</title><link>/posts/dhclient/</link><pubDate>Mon, 09 Oct 2023 21:37:55 +0800</pubDate><guid>/posts/dhclient/</guid><description>&lt;p>在机器上使用&lt;code>netplan&lt;/code>+&lt;code>NetworkManager&lt;/code>配置&lt;a href="../creating-a-bridged-network-with-netplan-on-ubuntu-22-04">bridged network&lt;/a>之后&lt;/p>
&lt;p>最近经常电脑用着用着就不能联网了，发现&lt;code>enp1s0&lt;/code>总是偶尔冒出一个&lt;code>ipv4&lt;/code>地址，并且路由表会多出一个从&lt;code>enp1s0&lt;/code>出去的&lt;code>default&lt;/code>路由。后来看&lt;code>journalctl&lt;/code>日志发现是&lt;code>dhclient&lt;/code>搞的事情(学艺不精, 没第一时间联系起来)。&lt;/p>
&lt;p>下面是部分日志：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>➜ ~ journalctl -n &lt;span style="color:#ae81ff">1000000&lt;/span> | grep &lt;span style="color:#e6db74">&amp;#39;192.168.1.22\|enp1s0&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>...
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>10月 &lt;span style="color:#ae81ff">09&lt;/span> 20:14:25 gobai-SER dhclient&lt;span style="color:#f92672">[&lt;/span>107299&lt;span style="color:#f92672">]&lt;/span>: DHCPREQUEST &lt;span style="color:#66d9ef">for&lt;/span> 192.168.1.22 on enp1s0 to 255.255.255.255 port &lt;span style="color:#ae81ff">67&lt;/span> &lt;span style="color:#f92672">(&lt;/span>xid&lt;span style="color:#f92672">=&lt;/span>0x4745a8ce&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>10月 &lt;span style="color:#ae81ff">09&lt;/span> 20:14:26 gobai-SER dhclient&lt;span style="color:#f92672">[&lt;/span>73666&lt;span style="color:#f92672">]&lt;/span>: DHCPREQUEST &lt;span style="color:#66d9ef">for&lt;/span> 192.168.1.22 on enp1s0 to 255.255.255.255 port &lt;span style="color:#ae81ff">67&lt;/span> &lt;span style="color:#f92672">(&lt;/span>xid&lt;span style="color:#f92672">=&lt;/span>0x2cfc74b3&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>10月 &lt;span style="color:#ae81ff">09&lt;/span> 20:14:26 gobai-SER dhclient&lt;span style="color:#f92672">[&lt;/span>157839&lt;span style="color:#f92672">]&lt;/span>: DHCPREQUEST &lt;span style="color:#66d9ef">for&lt;/span> 192.168.1.22 on enp1s0 to 255.255.255.255 port &lt;span style="color:#ae81ff">67&lt;/span> &lt;span style="color:#f92672">(&lt;/span>xid&lt;span style="color:#f92672">=&lt;/span>0x453b8549&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>10月 &lt;span style="color:#ae81ff">09&lt;/span> 20:14:28 gobai-SER dhclient&lt;span style="color:#f92672">[&lt;/span>170251&lt;span style="color:#f92672">]&lt;/span>: DHCPREQUEST &lt;span style="color:#66d9ef">for&lt;/span> 192.168.1.22 on enp1s0 to 255.255.255.255 port &lt;span style="color:#ae81ff">67&lt;/span> &lt;span style="color:#f92672">(&lt;/span>xid&lt;span style="color:#f92672">=&lt;/span>0x334a15e8&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>10月 &lt;span style="color:#ae81ff">09&lt;/span> 20:14:28 gobai-SER dhclient&lt;span style="color:#f92672">[&lt;/span>237127&lt;span style="color:#f92672">]&lt;/span>: DHCPREQUEST &lt;span style="color:#66d9ef">for&lt;/span> 192.168.1.22 on enp1s0 to 255.255.255.255 port &lt;span style="color:#ae81ff">67&lt;/span> &lt;span style="color:#f92672">(&lt;/span>xid&lt;span style="color:#f92672">=&lt;/span>0x7fd24947&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>10月 &lt;span style="color:#ae81ff">09&lt;/span> 20:14:32 gobai-SER avahi-autoipd&lt;span style="color:#f92672">(&lt;/span>enp1s0&lt;span style="color:#f92672">)[&lt;/span>307826&lt;span style="color:#f92672">]&lt;/span>: Found user &lt;span style="color:#e6db74">&amp;#39;avahi-autoipd&amp;#39;&lt;/span> &lt;span style="color:#f92672">(&lt;/span>UID 110&lt;span style="color:#f92672">)&lt;/span> and group &lt;span style="color:#e6db74">&amp;#39;avahi-autoipd&amp;#39;&lt;/span> &lt;span style="color:#f92672">(&lt;/span>GID 119&lt;span style="color:#f92672">)&lt;/span>.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>10月 &lt;span style="color:#ae81ff">09&lt;/span> 20:14:32 gobai-SER avahi-autoipd&lt;span style="color:#f92672">(&lt;/span>enp1s0&lt;span style="color:#f92672">)[&lt;/span>307826&lt;span style="color:#f92672">]&lt;/span>: Successfully called chroot&lt;span style="color:#f92672">()&lt;/span>.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>10月 &lt;span style="color:#ae81ff">09&lt;/span> 20:14:32 gobai-SER avahi-autoipd&lt;span style="color:#f92672">(&lt;/span>enp1s0&lt;span style="color:#f92672">)[&lt;/span>307826&lt;span style="color:#f92672">]&lt;/span>: Successfully dropped root privileges.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>10月 &lt;span style="color:#ae81ff">09&lt;/span> 20:14:32 gobai-SER avahi-autoipd&lt;span style="color:#f92672">(&lt;/span>enp1s0&lt;span style="color:#f92672">)[&lt;/span>307826&lt;span style="color:#f92672">]&lt;/span>: Starting with address 169.254.4.220
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>10月 &lt;span style="color:#ae81ff">09&lt;/span> 20:14:32 gobai-SER avahi-autoipd&lt;span style="color:#f92672">(&lt;/span>enp1s0&lt;span style="color:#f92672">)[&lt;/span>307826&lt;span style="color:#f92672">]&lt;/span>: Got SIGTERM, quitting.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>10月 &lt;span style="color:#ae81ff">09&lt;/span> 20:14:32 gobai-SER dhclient&lt;span style="color:#f92672">[&lt;/span>170251&lt;span style="color:#f92672">]&lt;/span>: DHCPDISCOVER on enp1s0 to 255.255.255.255 port &lt;span style="color:#ae81ff">67&lt;/span> interval &lt;span style="color:#ae81ff">3&lt;/span> &lt;span style="color:#f92672">(&lt;/span>xid&lt;span style="color:#f92672">=&lt;/span>0x1f69d35f&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>10月 &lt;span style="color:#ae81ff">09&lt;/span> 20:14:32 gobai-SER dhclient&lt;span style="color:#f92672">[&lt;/span>170251&lt;span style="color:#f92672">]&lt;/span>: DHCPOFFER of 192.168.1.22 from 192.168.1.1
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>10月 &lt;span style="color:#ae81ff">09&lt;/span> 20:14:32 gobai-SER dhclient&lt;span style="color:#f92672">[&lt;/span>170251&lt;span style="color:#f92672">]&lt;/span>: DHCPREQUEST &lt;span style="color:#66d9ef">for&lt;/span> 192.168.1.22 on enp1s0 to 255.255.255.255 port &lt;span style="color:#ae81ff">67&lt;/span> &lt;span style="color:#f92672">(&lt;/span>xid&lt;span style="color:#f92672">=&lt;/span>0x5fd3691f&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>10月 &lt;span style="color:#ae81ff">09&lt;/span> 20:14:32 gobai-SER dhclient&lt;span style="color:#f92672">[&lt;/span>170251&lt;span style="color:#f92672">]&lt;/span>: DHCPACK of 192.168.1.22 from 192.168.1.1 &lt;span style="color:#f92672">(&lt;/span>xid&lt;span style="color:#f92672">=&lt;/span>0x1f69d35f&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>10月 &lt;span style="color:#ae81ff">09&lt;/span> 20:14:32 gobai-SER avahi-daemon&lt;span style="color:#f92672">[&lt;/span>588&lt;span style="color:#f92672">]&lt;/span>: Joining mDNS multicast group on interface enp1s0.IPv4 with address 192.168.1.22.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>10月 &lt;span style="color:#ae81ff">09&lt;/span> 20:14:32 gobai-SER avahi-daemon&lt;span style="color:#f92672">[&lt;/span>588&lt;span style="color:#f92672">]&lt;/span>: New relevant interface enp1s0.IPv4 &lt;span style="color:#66d9ef">for&lt;/span> mDNS.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>10月 &lt;span style="color:#ae81ff">09&lt;/span> 20:14:32 gobai-SER avahi-daemon&lt;span style="color:#f92672">[&lt;/span>588&lt;span style="color:#f92672">]&lt;/span>: Registering new address record &lt;span style="color:#66d9ef">for&lt;/span> 192.168.1.22 on enp1s0.IPv4.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>10月 &lt;span style="color:#ae81ff">09&lt;/span> 20:14:32 gobai-SER systemd-resolved&lt;span style="color:#f92672">[&lt;/span>237121&lt;span style="color:#f92672">]&lt;/span>: enp1s0: Bus client set search domain list to: home
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>10月 &lt;span style="color:#ae81ff">09&lt;/span> 20:14:32 gobai-SER dhclient&lt;span style="color:#f92672">[&lt;/span>157839&lt;span style="color:#f92672">]&lt;/span>: DHCPDISCOVER on enp1s0 to 255.255.255.255 port &lt;span style="color:#ae81ff">67&lt;/span> interval &lt;span style="color:#ae81ff">3&lt;/span> &lt;span style="color:#f92672">(&lt;/span>xid&lt;span style="color:#f92672">=&lt;/span>0x41cc913f&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>10月 &lt;span style="color:#ae81ff">09&lt;/span> 20:14:32 gobai-SER systemd-resolved&lt;span style="color:#f92672">[&lt;/span>237121&lt;span style="color:#f92672">]&lt;/span>: enp1s0: Bus client set DNS server list to: 192.168.1.1, 223.5.5.5
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>10月 &lt;span style="color:#ae81ff">09&lt;/span> 20:14:32 gobai-SER dhclient&lt;span style="color:#f92672">[&lt;/span>157839&lt;span style="color:#f92672">]&lt;/span>: DHCPOFFER of 192.168.1.22 from 192.168.1.1
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>10月 &lt;span style="color:#ae81ff">09&lt;/span> 20:14:32 gobai-SER dhclient&lt;span style="color:#f92672">[&lt;/span>157839&lt;span style="color:#f92672">]&lt;/span>: DHCPREQUEST &lt;span style="color:#66d9ef">for&lt;/span> 192.168.1.22 on enp1s0 to 255.255.255.255 port &lt;span style="color:#ae81ff">67&lt;/span> &lt;span style="color:#f92672">(&lt;/span>xid&lt;span style="color:#f92672">=&lt;/span>0x3f91cc41&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>10月 &lt;span style="color:#ae81ff">09&lt;/span> 20:14:32 gobai-SER dhclient&lt;span style="color:#f92672">[&lt;/span>157839&lt;span style="color:#f92672">]&lt;/span>: DHCPACK of 192.168.1.22 from 192.168.1.1 &lt;span style="color:#f92672">(&lt;/span>xid&lt;span style="color:#f92672">=&lt;/span>0x41cc913f&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>10月 &lt;span style="color:#ae81ff">09&lt;/span> 20:14:32 gobai-SER dhclient&lt;span style="color:#f92672">[&lt;/span>170251&lt;span style="color:#f92672">]&lt;/span>: bound to 192.168.1.22 -- renewal in &lt;span style="color:#ae81ff">32921&lt;/span> seconds.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>10月 &lt;span style="color:#ae81ff">09&lt;/span> 20:14:32 gobai-SER dhclient&lt;span style="color:#f92672">[&lt;/span>157839&lt;span style="color:#f92672">]&lt;/span>: bound to 192.168.1.22 -- renewal in &lt;span style="color:#ae81ff">36989&lt;/span> seconds.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>10月 &lt;span style="color:#ae81ff">09&lt;/span> 20:14:35 gobai-SER avahi-daemon&lt;span style="color:#f92672">[&lt;/span>588&lt;span style="color:#f92672">]&lt;/span>: Withdrawing address record &lt;span style="color:#66d9ef">for&lt;/span> 192.168.1.22 on enp1s0.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>10月 &lt;span style="color:#ae81ff">09&lt;/span> 20:14:35 gobai-SER avahi-daemon&lt;span style="color:#f92672">[&lt;/span>588&lt;span style="color:#f92672">]&lt;/span>: Leaving mDNS multicast group on interface enp1s0.IPv4 with address 192.168.1.22.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>10月 &lt;span style="color:#ae81ff">09&lt;/span> 20:14:35 gobai-SER avahi-daemon&lt;span style="color:#f92672">[&lt;/span>588&lt;span style="color:#f92672">]&lt;/span>: Interface enp1s0.IPv4 no longer relevant &lt;span style="color:#66d9ef">for&lt;/span> mDNS.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>10月 &lt;span style="color:#ae81ff">09&lt;/span> 20:14:35 gobai-SER avahi-autoipd&lt;span style="color:#f92672">(&lt;/span>enp1s0&lt;span style="color:#f92672">)[&lt;/span>307982&lt;span style="color:#f92672">]&lt;/span>: Found user &lt;span style="color:#e6db74">&amp;#39;avahi-autoipd&amp;#39;&lt;/span> &lt;span style="color:#f92672">(&lt;/span>UID 110&lt;span style="color:#f92672">)&lt;/span> and group &lt;span style="color:#e6db74">&amp;#39;avahi-autoipd&amp;#39;&lt;/span> &lt;span style="color:#f92672">(&lt;/span>GID 119&lt;span style="color:#f92672">)&lt;/span>.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>10月 &lt;span style="color:#ae81ff">09&lt;/span> 20:14:35 gobai-SER avahi-autoipd&lt;span style="color:#f92672">(&lt;/span>enp1s0&lt;span style="color:#f92672">)[&lt;/span>307982&lt;span style="color:#f92672">]&lt;/span>: Successfully called chroot&lt;span style="color:#f92672">()&lt;/span>.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>10月 &lt;span style="color:#ae81ff">09&lt;/span> 20:14:35 gobai-SER avahi-autoipd&lt;span style="color:#f92672">(&lt;/span>enp1s0&lt;span style="color:#f92672">)[&lt;/span>307982&lt;span style="color:#f92672">]&lt;/span>: Successfully dropped root privileges.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>10月 &lt;span style="color:#ae81ff">09&lt;/span> 20:14:35 gobai-SER avahi-autoipd&lt;span style="color:#f92672">(&lt;/span>enp1s0&lt;span style="color:#f92672">)[&lt;/span>307982&lt;span style="color:#f92672">]&lt;/span>: Starting with address 169.254.4.220
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>10月 &lt;span style="color:#ae81ff">09&lt;/span> 20:14:35 gobai-SER avahi-autoipd&lt;span style="color:#f92672">(&lt;/span>enp1s0&lt;span style="color:#f92672">)[&lt;/span>307982&lt;span style="color:#f92672">]&lt;/span>: Got SIGTERM, quitting.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>10月 &lt;span style="color:#ae81ff">09&lt;/span> 20:14:36 gobai-SER dhclient&lt;span style="color:#f92672">[&lt;/span>73666&lt;span style="color:#f92672">]&lt;/span>: DHCPDISCOVER on enp1s0 to 255.255.255.255 port &lt;span style="color:#ae81ff">67&lt;/span> interval &lt;span style="color:#ae81ff">3&lt;/span> &lt;span style="color:#f92672">(&lt;/span>xid&lt;span style="color:#f92672">=&lt;/span>0x50a89e0e&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>10月 &lt;span style="color:#ae81ff">09&lt;/span> 20:14:36 gobai-SER dhclient&lt;span style="color:#f92672">[&lt;/span>73666&lt;span style="color:#f92672">]&lt;/span>: DHCPOFFER of 192.168.1.22 from 192.168.1.1
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>10月 &lt;span style="color:#ae81ff">09&lt;/span> 20:14:36 gobai-SER dhclient&lt;span style="color:#f92672">[&lt;/span>73666&lt;span style="color:#f92672">]&lt;/span>: DHCPREQUEST &lt;span style="color:#66d9ef">for&lt;/span> 192.168.1.22 on enp1s0 to 255.255.255.255 port &lt;span style="color:#ae81ff">67&lt;/span> &lt;span style="color:#f92672">(&lt;/span>xid&lt;span style="color:#f92672">=&lt;/span>0xe9ea850&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>10月 &lt;span style="color:#ae81ff">09&lt;/span> 20:14:36 gobai-SER dhclient&lt;span style="color:#f92672">[&lt;/span>73666&lt;span style="color:#f92672">]&lt;/span>: DHCPACK of 192.168.1.22 from 192.168.1.1 &lt;span style="color:#f92672">(&lt;/span>xid&lt;span style="color:#f92672">=&lt;/span>0x50a89e0e&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>10月 &lt;span style="color:#ae81ff">09&lt;/span> 20:14:36 gobai-SER avahi-daemon&lt;span style="color:#f92672">[&lt;/span>588&lt;span style="color:#f92672">]&lt;/span>: Joining mDNS multicast group on interface enp1s0.IPv4 with address 192.168.1.22.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>10月 &lt;span style="color:#ae81ff">09&lt;/span> 20:14:36 gobai-SER avahi-daemon&lt;span style="color:#f92672">[&lt;/span>588&lt;span style="color:#f92672">]&lt;/span>: New relevant interface enp1s0.IPv4 &lt;span style="color:#66d9ef">for&lt;/span> mDNS.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>10月 &lt;span style="color:#ae81ff">09&lt;/span> 20:14:36 gobai-SER avahi-daemon&lt;span style="color:#f92672">[&lt;/span>588&lt;span style="color:#f92672">]&lt;/span>: Registering new address record &lt;span style="color:#66d9ef">for&lt;/span> 192.168.1.22 on enp1s0.IPv4.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>10月 &lt;span style="color:#ae81ff">09&lt;/span> 20:14:36 gobai-SER systemd-resolved&lt;span style="color:#f92672">[&lt;/span>237121&lt;span style="color:#f92672">]&lt;/span>: enp1s0: Bus client set search domain list to: home
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>10月 &lt;span style="color:#ae81ff">09&lt;/span> 20:14:36 gobai-SER systemd-resolved&lt;span style="color:#f92672">[&lt;/span>237121&lt;span style="color:#f92672">]&lt;/span>: enp1s0: Bus client set DNS server list to: 192.168.1.1, 223.5.5.5
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>10月 &lt;span style="color:#ae81ff">09&lt;/span> 20:14:36 gobai-SER dhclient&lt;span style="color:#f92672">[&lt;/span>73666&lt;span style="color:#f92672">]&lt;/span>: bound to 192.168.1.22 -- renewal in &lt;span style="color:#ae81ff">34351&lt;/span> seconds.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>10月 &lt;span style="color:#ae81ff">09&lt;/span> 20:14:36 gobai-SER dhclient&lt;span style="color:#f92672">[&lt;/span>107299&lt;span style="color:#f92672">]&lt;/span>: DHCPDISCOVER on enp1s0 to 255.255.255.255 port &lt;span style="color:#ae81ff">67&lt;/span> interval &lt;span style="color:#ae81ff">3&lt;/span> &lt;span style="color:#f92672">(&lt;/span>xid&lt;span style="color:#f92672">=&lt;/span>0x27725347&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>10月 &lt;span style="color:#ae81ff">09&lt;/span> 20:14:36 gobai-SER dhclient&lt;span style="color:#f92672">[&lt;/span>107299&lt;span style="color:#f92672">]&lt;/span>: DHCPOFFER of 192.168.1.22 from 192.168.1.1
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>10月 &lt;span style="color:#ae81ff">09&lt;/span> 20:14:36 gobai-SER dhclient&lt;span style="color:#f92672">[&lt;/span>107299&lt;span style="color:#f92672">]&lt;/span>: DHCPREQUEST &lt;span style="color:#66d9ef">for&lt;/span> 192.168.1.22 on enp1s0 to 255.255.255.255 port &lt;span style="color:#ae81ff">67&lt;/span> &lt;span style="color:#f92672">(&lt;/span>xid&lt;span style="color:#f92672">=&lt;/span>0x47537227&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>10月 &lt;span style="color:#ae81ff">09&lt;/span> 20:14:36 gobai-SER dhclient&lt;span style="color:#f92672">[&lt;/span>107299&lt;span style="color:#f92672">]&lt;/span>: DHCPACK of 192.168.1.22 from 192.168.1.1 &lt;span style="color:#f92672">(&lt;/span>xid&lt;span style="color:#f92672">=&lt;/span>0x27725347&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>10月 &lt;span style="color:#ae81ff">09&lt;/span> 20:14:36 gobai-SER dhclient&lt;span style="color:#f92672">[&lt;/span>107299&lt;span style="color:#f92672">]&lt;/span>: bound to 192.168.1.22 -- renewal in &lt;span style="color:#ae81ff">40122&lt;/span> seconds.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>10月 &lt;span style="color:#ae81ff">09&lt;/span> 20:14:36 gobai-SER avahi-daemon&lt;span style="color:#f92672">[&lt;/span>588&lt;span style="color:#f92672">]&lt;/span>: Withdrawing address record &lt;span style="color:#66d9ef">for&lt;/span> 192.168.1.22 on enp1s0.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>10月 &lt;span style="color:#ae81ff">09&lt;/span> 20:14:36 gobai-SER avahi-daemon&lt;span style="color:#f92672">[&lt;/span>588&lt;span style="color:#f92672">]&lt;/span>: Leaving mDNS multicast group on interface enp1s0.IPv4 with address 192.168.1.22.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>10月 &lt;span style="color:#ae81ff">09&lt;/span> 20:14:36 gobai-SER avahi-daemon&lt;span style="color:#f92672">[&lt;/span>588&lt;span style="color:#f92672">]&lt;/span>: Interface enp1s0.IPv4 no longer relevant &lt;span style="color:#66d9ef">for&lt;/span> mDNS.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>10月 &lt;span style="color:#ae81ff">09&lt;/span> 20:14:36 gobai-SER avahi-autoipd&lt;span style="color:#f92672">(&lt;/span>enp1s0&lt;span style="color:#f92672">)[&lt;/span>308110&lt;span style="color:#f92672">]&lt;/span>: Found user &lt;span style="color:#e6db74">&amp;#39;avahi-autoipd&amp;#39;&lt;/span> &lt;span style="color:#f92672">(&lt;/span>UID 110&lt;span style="color:#f92672">)&lt;/span> and group &lt;span style="color:#e6db74">&amp;#39;avahi-autoipd&amp;#39;&lt;/span> &lt;span style="color:#f92672">(&lt;/span>GID 119&lt;span style="color:#f92672">)&lt;/span>.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>10月 &lt;span style="color:#ae81ff">09&lt;/span> 20:14:36 gobai-SER avahi-autoipd&lt;span style="color:#f92672">(&lt;/span>enp1s0&lt;span style="color:#f92672">)[&lt;/span>308110&lt;span style="color:#f92672">]&lt;/span>: Successfully called chroot&lt;span style="color:#f92672">()&lt;/span>.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>10月 &lt;span style="color:#ae81ff">09&lt;/span> 20:14:36 gobai-SER avahi-autoipd&lt;span style="color:#f92672">(&lt;/span>enp1s0&lt;span style="color:#f92672">)[&lt;/span>308110&lt;span style="color:#f92672">]&lt;/span>: Successfully dropped root privileges.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>10月 &lt;span style="color:#ae81ff">09&lt;/span> 20:14:36 gobai-SER avahi-autoipd&lt;span style="color:#f92672">(&lt;/span>enp1s0&lt;span style="color:#f92672">)[&lt;/span>308110&lt;span style="color:#f92672">]&lt;/span>: Starting with address 169.254.4.220
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>10月 &lt;span style="color:#ae81ff">09&lt;/span> 20:14:42 gobai-SER avahi-autoipd&lt;span style="color:#f92672">(&lt;/span>enp1s0&lt;span style="color:#f92672">)[&lt;/span>308110&lt;span style="color:#f92672">]&lt;/span>: Callout BIND, address 169.254.4.220 on interface enp1s0
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>10月 &lt;span style="color:#ae81ff">09&lt;/span> 20:14:42 gobai-SER avahi-daemon&lt;span style="color:#f92672">[&lt;/span>588&lt;span style="color:#f92672">]&lt;/span>: Joining mDNS multicast group on interface enp1s0.IPv4 with address 169.254.4.220.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>10月 &lt;span style="color:#ae81ff">09&lt;/span> 20:14:42 gobai-SER avahi-daemon&lt;span style="color:#f92672">[&lt;/span>588&lt;span style="color:#f92672">]&lt;/span>: New relevant interface enp1s0.IPv4 &lt;span style="color:#66d9ef">for&lt;/span> mDNS.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>10月 &lt;span style="color:#ae81ff">09&lt;/span> 20:14:42 gobai-SER avahi-daemon&lt;span style="color:#f92672">[&lt;/span>588&lt;span style="color:#f92672">]&lt;/span>: Registering new address record &lt;span style="color:#66d9ef">for&lt;/span> 169.254.4.220 on enp1s0.IPv4.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>10月 &lt;span style="color:#ae81ff">09&lt;/span> 20:14:46 gobai-SER avahi-autoipd&lt;span style="color:#f92672">(&lt;/span>enp1s0&lt;span style="color:#f92672">)[&lt;/span>308110&lt;span style="color:#f92672">]&lt;/span>: Successfully claimed IP address 169.254.4.220
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>10月 &lt;span style="color:#ae81ff">09&lt;/span> 20:14:46 gobai-SER avahi-autoipd&lt;span style="color:#f92672">(&lt;/span>enp1s0&lt;span style="color:#f92672">)[&lt;/span>308110&lt;span style="color:#f92672">]&lt;/span>: Got SIGTERM, quitting.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>10月 &lt;span style="color:#ae81ff">09&lt;/span> 20:14:46 gobai-SER avahi-autoipd&lt;span style="color:#f92672">(&lt;/span>enp1s0&lt;span style="color:#f92672">)[&lt;/span>308110&lt;span style="color:#f92672">]&lt;/span>: Callout STOP, address 169.254.4.220 on interface enp1s0
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>10月 &lt;span style="color:#ae81ff">09&lt;/span> 20:14:46 gobai-SER avahi-daemon&lt;span style="color:#f92672">[&lt;/span>588&lt;span style="color:#f92672">]&lt;/span>: Withdrawing address record &lt;span style="color:#66d9ef">for&lt;/span> 169.254.4.220 on enp1s0.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>10月 &lt;span style="color:#ae81ff">09&lt;/span> 20:14:46 gobai-SER avahi-daemon&lt;span style="color:#f92672">[&lt;/span>588&lt;span style="color:#f92672">]&lt;/span>: Leaving mDNS multicast group on interface enp1s0.IPv4 with address 169.254.4.220.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>10月 &lt;span style="color:#ae81ff">09&lt;/span> 20:14:46 gobai-SER avahi-daemon&lt;span style="color:#f92672">[&lt;/span>588&lt;span style="color:#f92672">]&lt;/span>: Interface enp1s0.IPv4 no longer relevant &lt;span style="color:#66d9ef">for&lt;/span> mDNS.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>10月 &lt;span style="color:#ae81ff">09&lt;/span> 20:14:46 gobai-SER dhclient&lt;span style="color:#f92672">[&lt;/span>237127&lt;span style="color:#f92672">]&lt;/span>: DHCPDISCOVER on enp1s0 to 255.255.255.255 port &lt;span style="color:#ae81ff">67&lt;/span> interval &lt;span style="color:#ae81ff">3&lt;/span> &lt;span style="color:#f92672">(&lt;/span>xid&lt;span style="color:#f92672">=&lt;/span>0x389e944d&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>10月 &lt;span style="color:#ae81ff">09&lt;/span> 20:14:46 gobai-SER dhclient&lt;span style="color:#f92672">[&lt;/span>237127&lt;span style="color:#f92672">]&lt;/span>: DHCPOFFER of 192.168.1.22 from 192.168.1.1
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>10月 &lt;span style="color:#ae81ff">09&lt;/span> 20:14:46 gobai-SER dhclient&lt;span style="color:#f92672">[&lt;/span>237127&lt;span style="color:#f92672">]&lt;/span>: DHCPREQUEST &lt;span style="color:#66d9ef">for&lt;/span> 192.168.1.22 on enp1s0 to 255.255.255.255 port &lt;span style="color:#ae81ff">67&lt;/span> &lt;span style="color:#f92672">(&lt;/span>xid&lt;span style="color:#f92672">=&lt;/span>0x4d949e38&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>10月 &lt;span style="color:#ae81ff">09&lt;/span> 20:14:46 gobai-SER dhclient&lt;span style="color:#f92672">[&lt;/span>237127&lt;span style="color:#f92672">]&lt;/span>: DHCPACK of 192.168.1.22 from 192.168.1.1 &lt;span style="color:#f92672">(&lt;/span>xid&lt;span style="color:#f92672">=&lt;/span>0x389e944d&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>10月 &lt;span style="color:#ae81ff">09&lt;/span> 20:14:46 gobai-SER avahi-daemon&lt;span style="color:#f92672">[&lt;/span>588&lt;span style="color:#f92672">]&lt;/span>: Joining mDNS multicast group on interface enp1s0.IPv4 with address 192.168.1.22.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>10月 &lt;span style="color:#ae81ff">09&lt;/span> 20:14:46 gobai-SER avahi-daemon&lt;span style="color:#f92672">[&lt;/span>588&lt;span style="color:#f92672">]&lt;/span>: New relevant interface enp1s0.IPv4 &lt;span style="color:#66d9ef">for&lt;/span> mDNS.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>10月 &lt;span style="color:#ae81ff">09&lt;/span> 20:14:46 gobai-SER avahi-daemon&lt;span style="color:#f92672">[&lt;/span>588&lt;span style="color:#f92672">]&lt;/span>: Registering new address record &lt;span style="color:#66d9ef">for&lt;/span> 192.168.1.22 on enp1s0.IPv4.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>10月 &lt;span style="color:#ae81ff">09&lt;/span> 20:14:47 gobai-SER systemd-resolved&lt;span style="color:#f92672">[&lt;/span>237121&lt;span style="color:#f92672">]&lt;/span>: enp1s0: Bus client set search domain list to: home
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>10月 &lt;span style="color:#ae81ff">09&lt;/span> 20:14:47 gobai-SER systemd-resolved&lt;span style="color:#f92672">[&lt;/span>237121&lt;span style="color:#f92672">]&lt;/span>: enp1s0: Bus client set DNS server list to: 192.168.1.1, 223.5.5.5
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>10月 &lt;span style="color:#ae81ff">09&lt;/span> 20:14:47 gobai-SER dhclient&lt;span style="color:#f92672">[&lt;/span>237127&lt;span style="color:#f92672">]&lt;/span>: bound to 192.168.1.22 -- renewal in &lt;span style="color:#ae81ff">40782&lt;/span> seconds.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>➜ ~ ps -aux | grep dhclient
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>root &lt;span style="color:#ae81ff">73666&lt;/span> 0.0 0.0 &lt;span style="color:#ae81ff">101232&lt;/span> &lt;span style="color:#ae81ff">6228&lt;/span> ? Ssl 9月28 0:15 dhclient
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>root &lt;span style="color:#ae81ff">107299&lt;/span> 0.0 0.0 &lt;span style="color:#ae81ff">101232&lt;/span> &lt;span style="color:#ae81ff">6228&lt;/span> ? Ssl 10月04 0:09 dhclient
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>root &lt;span style="color:#ae81ff">157839&lt;/span> 0.0 0.0 &lt;span style="color:#ae81ff">101232&lt;/span> &lt;span style="color:#ae81ff">6112&lt;/span> ? Ssl 10月06 0:06 dhclient
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>root &lt;span style="color:#ae81ff">170251&lt;/span> 0.0 0.0 &lt;span style="color:#ae81ff">101232&lt;/span> &lt;span style="color:#ae81ff">6184&lt;/span> ? Ssl 10月06 0:08 dhclient
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>root &lt;span style="color:#ae81ff">237127&lt;/span> 0.0 0.0 &lt;span style="color:#ae81ff">101232&lt;/span> &lt;span style="color:#ae81ff">6012&lt;/span> ? Ssl 10月07 0:06 dhclient
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>gobai &lt;span style="color:#ae81ff">322905&lt;/span> 0.0 0.0 &lt;span style="color:#ae81ff">12308&lt;/span> &lt;span style="color:#ae81ff">2816&lt;/span> pts/5 S+ 21:49 0:00 grep --color&lt;span style="color:#f92672">=&lt;/span>auto --exclude-dir&lt;span style="color:#f92672">=&lt;/span>.bzr --exclude-dir&lt;span style="color:#f92672">=&lt;/span>CVS --exclude-dir&lt;span style="color:#f92672">=&lt;/span>.git --exclude-dir&lt;span style="color:#f92672">=&lt;/span>.hg --exclude-dir&lt;span style="color:#f92672">=&lt;/span>.svn --exclude-dir&lt;span style="color:#f92672">=&lt;/span>.idea --exclude-dir&lt;span style="color:#f92672">=&lt;/span>.tox dhclient
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>对比上面五个进程(&lt;code>DHCP Client&lt;/code>)和日志发现，五个进程都干了同样的事：&lt;/p></description></item><item><title>在 Ubuntu 22.04 使用 netplan 创建桥接网络</title><link>/posts/creating-a-bridged-network-with-netplan-on-ubuntu-22-04/</link><pubDate>Wed, 04 Oct 2023 13:01:59 +0800</pubDate><guid>/posts/creating-a-bridged-network-with-netplan-on-ubuntu-22-04/</guid><description>&lt;p>本地LAN环境&lt;/p>
&lt;ol>
&lt;li>LAN网关 &lt;code>192.168.1.1&lt;/code>&lt;/li>
&lt;li>子网掩码 &lt;code>255.255.255.0&lt;/code>&lt;/li>
&lt;li>DHCP范围 &lt;code>192.168.1.2&lt;/code>-&lt;code>192.168.32&lt;/code>&lt;/li>
&lt;/ol>
&lt;h2 id="创建一个bridged-network">
 创建一个&lt;code>bridged network&lt;/code>
 &lt;a class="anchor" href="#%e5%88%9b%e5%bb%ba%e4%b8%80%e4%b8%aabridged-network">#&lt;/a>
&lt;/h2>
&lt;p>创建一个网桥&lt;code>br0&lt;/code>给虚机使用，使得虚机和其他设备都在一个LAN下&lt;/p>
&lt;p>总配置(&lt;code>netplan get&lt;/code>)如下:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">network&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">version&lt;/span>: &lt;span style="color:#ae81ff">2&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">renderer&lt;/span>: &lt;span style="color:#ae81ff">NetworkManager&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">ethernets&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">enp1s0&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">dhcp4&lt;/span>: &lt;span style="color:#66d9ef">false&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">dhcp6&lt;/span>: &lt;span style="color:#66d9ef">false&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">bridges&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">br0&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">addresses&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#e6db74">&amp;#34;192.168.1.100/24&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">nameservers&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">addresses&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#ae81ff">192.168.1.1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">dhcp4&lt;/span>: &lt;span style="color:#66d9ef">false&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">dhcp6&lt;/span>: &lt;span style="color:#66d9ef">false&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">interfaces&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#ae81ff">enp1s0&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">parameters&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">stp&lt;/span>: &lt;span style="color:#66d9ef">false&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">routes&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#f92672">to&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;default&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">via&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;192.168.1.1&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>由三个文件组成:&lt;/p>
&lt;ol>
&lt;li>&lt;code>/etc/netplan/01-network-manager-all.yaml&lt;/code>&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># Let NetworkManager manage all devices on this system&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">network&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">version&lt;/span>: &lt;span style="color:#ae81ff">2&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">renderer&lt;/span>: &lt;span style="color:#ae81ff">NetworkManager&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ol start="2">
&lt;li>&lt;code>/etc/netplan/10-ethernet-enp1s0.yaml&lt;/code>&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">network&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">ethernets&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">enp1s0&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">dhcp4&lt;/span>: &lt;span style="color:#66d9ef">false&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">dhcp6&lt;/span>: &lt;span style="color:#66d9ef">false&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ol start="3">
&lt;li>&lt;code>/etc/netplan/99-bridged-network-br0.yaml&lt;/code>&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">network&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">bridges&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">br0&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">dhcp4&lt;/span>: &lt;span style="color:#66d9ef">false&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">dhcp6&lt;/span>: &lt;span style="color:#66d9ef">false&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">addresses&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#ae81ff">192.168.1.100&lt;/span>&lt;span style="color:#ae81ff">/24&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">routes&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#f92672">to&lt;/span>: &lt;span style="color:#ae81ff">default&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">via&lt;/span>: &lt;span style="color:#ae81ff">192.168.1.1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">nameservers&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">addresses&lt;/span>: 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#ae81ff">192.168.1.1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#ae81ff">223.5.5.5&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">interfaces&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#ae81ff">enp1s0&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">parameters&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">stp&lt;/span>: &lt;span style="color:#66d9ef">false&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="应用网络配置">
 应用网络配置
 &lt;a class="anchor" href="#%e5%ba%94%e7%94%a8%e7%bd%91%e7%bb%9c%e9%85%8d%e7%bd%ae">#&lt;/a>
&lt;/h2>
&lt;p>容易失联，如果是ssh远程操作请谨慎操作&lt;/p></description></item><item><title>删除分区并扩容另一个分区和根文件系统</title><link>/posts/delete-partition-and-expand-another/</link><pubDate>Mon, 02 Oct 2023 16:54:05 +0800</pubDate><guid>/posts/delete-partition-and-expand-another/</guid><description>&lt;blockquote>
&lt;p>现在要将 &lt;code>/dev/sda3&lt;/code> 分区删掉并扩容到 &lt;code>/dev/sda2&lt;/code>, 并且在不重启服务器的情况下扩容根文件系统(跟文件系统 &lt;code>/&lt;/code> 挂载在 &lt;code>/dev/sda2&lt;/code> 上, 并且 filesystem 是 &lt;code>ext4&lt;/code>)&lt;/p>&lt;/blockquote>
&lt;h2 id="磁盘初始分区和挂载情况">
 磁盘初始分区和挂载情况
 &lt;a class="anchor" href="#%e7%a3%81%e7%9b%98%e5%88%9d%e5%a7%8b%e5%88%86%e5%8c%ba%e5%92%8c%e6%8c%82%e8%bd%bd%e6%83%85%e5%86%b5">#&lt;/a>
&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>➜ ~ lsblk /dev/sda
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>NAME MAJ:MIN RM SIZE RO TYPE MOUNTPOINT
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sda 8:0 &lt;span style="color:#ae81ff">0&lt;/span> 100G &lt;span style="color:#ae81ff">0&lt;/span> disk 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>├─sda1 8:1 &lt;span style="color:#ae81ff">0&lt;/span> 512M &lt;span style="color:#ae81ff">0&lt;/span> part /boot/efi
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>├─sda2 8:2 &lt;span style="color:#ae81ff">0&lt;/span> 98.5G &lt;span style="color:#ae81ff">0&lt;/span> part /
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>└─sda3 8:3 &lt;span style="color:#ae81ff">0&lt;/span> 976M &lt;span style="color:#ae81ff">0&lt;/span> part 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>➜ ~ fdisk -l /dev/sda
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Disk /dev/sda: &lt;span style="color:#ae81ff">100&lt;/span> GiB, &lt;span style="color:#ae81ff">107374182400&lt;/span> bytes, &lt;span style="color:#ae81ff">209715200&lt;/span> sectors
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Disk model: BlockVolume 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Units: sectors of &lt;span style="color:#ae81ff">1&lt;/span> * 512 &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">512&lt;/span> bytes
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Sector size &lt;span style="color:#f92672">(&lt;/span>logical/physical&lt;span style="color:#f92672">)&lt;/span>: &lt;span style="color:#ae81ff">512&lt;/span> bytes / &lt;span style="color:#ae81ff">4096&lt;/span> bytes
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>I/O size &lt;span style="color:#f92672">(&lt;/span>minimum/optimal&lt;span style="color:#f92672">)&lt;/span>: &lt;span style="color:#ae81ff">4096&lt;/span> bytes / &lt;span style="color:#ae81ff">1048576&lt;/span> bytes
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Disklabel type: gpt
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Disk identifier: 40BED670-8B91-4520-9785-DB1F1035C039
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Device Start End Sectors Size Type
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>/dev/sda1 &lt;span style="color:#ae81ff">2048&lt;/span> &lt;span style="color:#ae81ff">1050623&lt;/span> &lt;span style="color:#ae81ff">1048576&lt;/span> 512M EFI System
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>/dev/sda2 &lt;span style="color:#ae81ff">1050624&lt;/span> &lt;span style="color:#ae81ff">207714303&lt;/span> &lt;span style="color:#ae81ff">206663680&lt;/span> 98.5G Linux filesystem
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>/dev/sda3 &lt;span style="color:#ae81ff">207714304&lt;/span> &lt;span style="color:#ae81ff">209713151&lt;/span> &lt;span style="color:#ae81ff">1998848&lt;/span> 976M Linux swap
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>➜ ~ df -hT /dev/sda2
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Filesystem Type Size Used Avail Use% Mounted on
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>/dev/sda2 ext4 97G 28G 64G 31% /
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="删除分区-devsda3">
 删除分区 &lt;code>/dev/sda3&lt;/code>
 &lt;a class="anchor" href="#%e5%88%a0%e9%99%a4%e5%88%86%e5%8c%ba-devsda3">#&lt;/a>
&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>➜ ~ fdisk /dev/sda
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Welcome to fdisk &lt;span style="color:#f92672">(&lt;/span>util-linux 2.36.1&lt;span style="color:#f92672">)&lt;/span>.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Changes will remain in memory only, &lt;span style="color:#66d9ef">until&lt;/span> you decide to write them.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Be careful before using the write command.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Command &lt;span style="color:#f92672">(&lt;/span>m &lt;span style="color:#66d9ef">for&lt;/span> help&lt;span style="color:#f92672">)&lt;/span>: d
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Partition number &lt;span style="color:#f92672">(&lt;/span>1-3, default 3&lt;span style="color:#f92672">)&lt;/span>: &lt;span style="color:#ae81ff">3&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Partition &lt;span style="color:#ae81ff">3&lt;/span> has been deleted.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Command &lt;span style="color:#f92672">(&lt;/span>m &lt;span style="color:#66d9ef">for&lt;/span> help&lt;span style="color:#f92672">)&lt;/span>: p
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Disk /dev/sda: &lt;span style="color:#ae81ff">100&lt;/span> GiB, &lt;span style="color:#ae81ff">107374182400&lt;/span> bytes, &lt;span style="color:#ae81ff">209715200&lt;/span> sectors
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Disk model: BlockVolume 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Units: sectors of &lt;span style="color:#ae81ff">1&lt;/span> * 512 &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">512&lt;/span> bytes
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Sector size &lt;span style="color:#f92672">(&lt;/span>logical/physical&lt;span style="color:#f92672">)&lt;/span>: &lt;span style="color:#ae81ff">512&lt;/span> bytes / &lt;span style="color:#ae81ff">4096&lt;/span> bytes
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>I/O size &lt;span style="color:#f92672">(&lt;/span>minimum/optimal&lt;span style="color:#f92672">)&lt;/span>: &lt;span style="color:#ae81ff">4096&lt;/span> bytes / &lt;span style="color:#ae81ff">1048576&lt;/span> bytes
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Disklabel type: gpt
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Disk identifier: 40BED670-8B91-4520-9785-DB1F1035C039
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Device Start End Sectors Size Type
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>/dev/sda1 &lt;span style="color:#ae81ff">2048&lt;/span> &lt;span style="color:#ae81ff">1050623&lt;/span> &lt;span style="color:#ae81ff">1048576&lt;/span> 512M EFI System
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>/dev/sda2 &lt;span style="color:#ae81ff">1050624&lt;/span> &lt;span style="color:#ae81ff">207714303&lt;/span> &lt;span style="color:#ae81ff">206663680&lt;/span> 98.5G Linux filesystem
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Command &lt;span style="color:#f92672">(&lt;/span>m &lt;span style="color:#66d9ef">for&lt;/span> help&lt;span style="color:#f92672">)&lt;/span>: w &lt;span style="color:#75715e"># 保存退出&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>The partition table has been altered.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Syncing disks.
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="扩容分区-devsda2-和-根文件系统">
 扩容分区 &lt;code>/dev/sda2&lt;/code> 和 根文件系统
 &lt;a class="anchor" href="#%e6%89%a9%e5%ae%b9%e5%88%86%e5%8c%ba-devsda2-%e5%92%8c-%e6%a0%b9%e6%96%87%e4%bb%b6%e7%b3%bb%e7%bb%9f">#&lt;/a>
&lt;/h2>
&lt;p>使用 &lt;code>fdisk&lt;/code> 扩容 &lt;code>/dev/sda2&lt;/code>, 前提是 &lt;code>/dev/sda2&lt;/code> 后面没有其他分区了，可以这样扩容(先删除不退出并重建分区, 分区 &lt;code>Start&lt;/code> 不变, &lt;code>End&lt;/code> 增大)&lt;/p></description></item><item><title>Vscode Extensions</title><link>/posts/vscode-extensions/</link><pubDate>Mon, 25 Sep 2023 21:27:06 +0800</pubDate><guid>/posts/vscode-extensions/</guid><description>&lt;h2 id="记录我的vscode使用的扩展插件">
 记录我的vscode使用的扩展插件
 &lt;a class="anchor" href="#%e8%ae%b0%e5%bd%95%e6%88%91%e7%9a%84vscode%e4%bd%bf%e7%94%a8%e7%9a%84%e6%89%a9%e5%b1%95%e6%8f%92%e4%bb%b6">#&lt;/a>
&lt;/h2>
&lt;p>持续补充中&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://marketplace.visualstudio.com/items?itemName=wayou.vscode-icons-mac">vscode-icons-mac&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://marketplace.visualstudio.com/items?itemName=eamodio.gitlens">GitLens&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://marketplace.visualstudio.com/items?itemName=golang.go">Go&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://marketplace.visualstudio.com/items?itemName=ms-vscode-remote.remote-ssh">Remote - SSH&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://marketplace.visualstudio.com/items?itemName=Remisa.shellman">shellman&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://marketplace.visualstudio.com/items?itemName=humao.rest-client">REST Client&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://marketplace.visualstudio.com/items?itemName=Gruntfuggly.todo-tree">Todo Tree&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="一些配置">
 一些配置
 &lt;a class="anchor" href="#%e4%b8%80%e4%ba%9b%e9%85%8d%e7%bd%ae">#&lt;/a>
&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-json" data-lang="json">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">&amp;#34;workbench.tree.indent&amp;#34;&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">:&lt;/span> &lt;span style="color:#ae81ff">16&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>MacOS Config</title><link>/posts/macos-config/</link><pubDate>Sun, 24 Sep 2023 10:56:13 +0800</pubDate><guid>/posts/macos-config/</guid><description>&lt;h2 id="安装iproute2mac">
 安装&lt;code>iproute2mac&lt;/code>
 &lt;a class="anchor" href="#%e5%ae%89%e8%a3%85iproute2mac">#&lt;/a>
&lt;/h2>
&lt;p>可以和在linux操作系统一样使用&lt;code>ip&lt;/code>命令查看和管理网络, 赞!!!&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>brew install iproute2mac
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="ssh配置alive">
 ssh配置alive
 &lt;a class="anchor" href="#ssh%e9%85%8d%e7%bd%aealive">#&lt;/a>
&lt;/h2>
&lt;p>配置&lt;code>ServerAliveInterval&lt;/code>, 防止长时间没有数据交互后连接断掉&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># cat ~/.ssh/config&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Host *
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ServerAliveInterval &lt;span style="color:#ae81ff">30&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Host home
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> HostName 192.168.1.100
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> User root
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>...
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>Ubuntu Config</title><link>/posts/ubuntu-config/</link><pubDate>Sun, 24 Sep 2023 10:56:12 +0800</pubDate><guid>/posts/ubuntu-config/</guid><description>&lt;blockquote>
&lt;p>以下配置都是在 &lt;code>Ubuntu 22.04&lt;/code> 系统配置&lt;/p>&lt;/blockquote>
&lt;h2 id="配置中文输入法">
 配置中文输入法
 &lt;a class="anchor" href="#%e9%85%8d%e7%bd%ae%e4%b8%ad%e6%96%87%e8%be%93%e5%85%a5%e6%b3%95">#&lt;/a>
&lt;/h2>
&lt;ol>
&lt;li>Open Settings, go to &lt;code>Region &amp;amp; Language&lt;/code> -&amp;gt; &lt;code>Manage Installed Languages&lt;/code> -&amp;gt; &lt;code>Install / Remove languages&lt;/code>.&lt;/li>
&lt;li>Select &lt;code>Chinese (Simplified)&lt;/code>. Make sure &lt;code>Keyboard Input method system&lt;/code> has &lt;code>Ibus&lt;/code> selected. Apply.&lt;/li>
&lt;li>Reboot&lt;/li>
&lt;li>Log back in, reopen Settings, go to &lt;code>Keyboard&lt;/code>.&lt;/li>
&lt;li>Click on the &amp;ldquo;+&amp;rdquo; sign under &lt;code>Input sources&lt;/code>.&lt;/li>
&lt;li>Select &lt;code>Chinese (China)&lt;/code> and then &lt;code>Chinese (Intelligent Pinyin)&lt;/code>.&lt;/li>
&lt;/ol>
&lt;p>&lt;a href="https://askubuntu.com/questions/1408873/ubuntu-22-04-chinese-simplified-pinyin-input-support">ubuntu-22-04-chinese-simplified-pinyin-input-support&lt;/a>&lt;/p>
&lt;h2 id="修正简体中文显示为异体日文字形">
 修正简体中文显示为异体(日文)字形
 &lt;a class="anchor" href="#%e4%bf%ae%e6%ad%a3%e7%ae%80%e4%bd%93%e4%b8%ad%e6%96%87%e6%98%be%e7%a4%ba%e4%b8%ba%e5%bc%82%e4%bd%93%e6%97%a5%e6%96%87%e5%ad%97%e5%bd%a2">#&lt;/a>
&lt;/h2>
&lt;blockquote>
&lt;p>ubuntu/linux对中文支持的不太好, 在选择汉字字体时, 优先选择的是日文或者韩文, 需要手动调整优先级后重启操作系统解决&lt;/p></description></item><item><title>Go应用在容器中的时区</title><link>/posts/solve-timezone-issue-in-go-application-in-container/</link><pubDate>Sat, 18 Feb 2023 16:12:01 +0800</pubDate><guid>/posts/solve-timezone-issue-in-go-application-in-container/</guid><description>&lt;h2 id="容器中的时区问题">
 容器中的时区问题
 &lt;a class="anchor" href="#%e5%ae%b9%e5%99%a8%e4%b8%ad%e7%9a%84%e6%97%b6%e5%8c%ba%e9%97%ae%e9%a2%98">#&lt;/a>
&lt;/h2>
&lt;p>应用直接运行在服务器上需要设置服务器时区为东八区，现在很多应用都是部署在容器中了，同样也是要设置容器镜像的时区。&lt;/p>
&lt;p>许多容器镜像默认时区为 &lt;code>UTC&lt;/code> (&lt;a href="https://zh.wikipedia.org/zh-hans/%E5%8D%8F%E8%B0%83%E4%B8%96%E7%95%8C%E6%97%B6">Coordinated Universal Time 协调世界时&lt;/a>)，比东八区慢八个小时，当程序涉及数据库写入操作或者日志记录等功能时就会有时间差。&lt;/p>
&lt;p>常规解决方案一般两大类&lt;/p>
&lt;ol>
&lt;li>build docker镜像时就把镜像内的时区设置为 &lt;code>Asia/Shanghai&lt;/code>&lt;/li>
&lt;li>运行容器时把本地时区正常的主机的时区配置文件挂载到容器。&lt;/li>
&lt;/ol>
&lt;h3 id="看一下-go-是如何读取时区文件并设置-timetime-的时区的">
 看一下 &lt;code>Go&lt;/code> 是如何读取时区文件并设置 &lt;code>time.Time&lt;/code> 的时区的
 &lt;a class="anchor" href="#%e7%9c%8b%e4%b8%80%e4%b8%8b-go-%e6%98%af%e5%a6%82%e4%bd%95%e8%af%bb%e5%8f%96%e6%97%b6%e5%8c%ba%e6%96%87%e4%bb%b6%e5%b9%b6%e8%ae%be%e7%bd%ae-timetime-%e7%9a%84%e6%97%b6%e5%8c%ba%e7%9a%84">#&lt;/a>
&lt;/h3>
&lt;p>&lt;code>Go&lt;/code> 源码 &lt;a href="https://github.com/golang/go/blob/master/src/time/zoneinfo_unix.go">src/time/zoneinfo_unix.go&lt;/a> 中代码和注释都很清晰👍&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-golang" data-lang="golang">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">package&lt;/span> &lt;span style="color:#a6e22e">time&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> (
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#34;syscall&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// Many systems use /usr/share/zoneinfo, Solaris 2 has&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// /usr/share/lib/zoneinfo, IRIX 6 has /usr/lib/locale/TZ,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// NixOS has /etc/zoneinfo.&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">var&lt;/span> &lt;span style="color:#a6e22e">platformZoneSources&lt;/span> = []&lt;span style="color:#66d9ef">string&lt;/span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#34;/usr/share/zoneinfo/&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#34;/usr/share/lib/zoneinfo/&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#34;/usr/lib/locale/TZ/&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#34;/etc/zoneinfo&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">func&lt;/span> &lt;span style="color:#a6e22e">initLocal&lt;/span>() {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// consult $TZ to find the time zone to use.&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// no $TZ means use the system default /etc/localtime.&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// $TZ=&amp;#34;&amp;#34; means use UTC.&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// $TZ=&amp;#34;foo&amp;#34; or $TZ=&amp;#34;:foo&amp;#34; if foo is an absolute path, then the file pointed&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// by foo will be used to initialize timezone; otherwise, file&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// /usr/share/zoneinfo/foo will be used.&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">tz&lt;/span>, &lt;span style="color:#a6e22e">ok&lt;/span> &lt;span style="color:#f92672">:=&lt;/span> &lt;span style="color:#a6e22e">syscall&lt;/span>.&lt;span style="color:#a6e22e">Getenv&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;TZ&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">switch&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">case&lt;/span> !&lt;span style="color:#a6e22e">ok&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">z&lt;/span>, &lt;span style="color:#a6e22e">err&lt;/span> &lt;span style="color:#f92672">:=&lt;/span> &lt;span style="color:#a6e22e">loadLocation&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;localtime&amp;#34;&lt;/span>, []&lt;span style="color:#66d9ef">string&lt;/span>{&lt;span style="color:#e6db74">&amp;#34;/etc&amp;#34;&lt;/span>})
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> &lt;span style="color:#a6e22e">err&lt;/span> &lt;span style="color:#f92672">==&lt;/span> &lt;span style="color:#66d9ef">nil&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">localLoc&lt;/span> = &lt;span style="color:#f92672">*&lt;/span>&lt;span style="color:#a6e22e">z&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">localLoc&lt;/span>.&lt;span style="color:#a6e22e">name&lt;/span> = &lt;span style="color:#e6db74">&amp;#34;Local&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">case&lt;/span> &lt;span style="color:#a6e22e">tz&lt;/span> &lt;span style="color:#f92672">!=&lt;/span> &lt;span style="color:#e6db74">&amp;#34;&amp;#34;&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> &lt;span style="color:#a6e22e">tz&lt;/span>[&lt;span style="color:#ae81ff">0&lt;/span>] &lt;span style="color:#f92672">==&lt;/span> &lt;span style="color:#e6db74">&amp;#39;:&amp;#39;&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">tz&lt;/span> = &lt;span style="color:#a6e22e">tz&lt;/span>[&lt;span style="color:#ae81ff">1&lt;/span>:]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> &lt;span style="color:#a6e22e">tz&lt;/span> &lt;span style="color:#f92672">!=&lt;/span> &lt;span style="color:#e6db74">&amp;#34;&amp;#34;&lt;/span> &lt;span style="color:#f92672">&amp;amp;&amp;amp;&lt;/span> &lt;span style="color:#a6e22e">tz&lt;/span>[&lt;span style="color:#ae81ff">0&lt;/span>] &lt;span style="color:#f92672">==&lt;/span> &lt;span style="color:#e6db74">&amp;#39;/&amp;#39;&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> &lt;span style="color:#a6e22e">z&lt;/span>, &lt;span style="color:#a6e22e">err&lt;/span> &lt;span style="color:#f92672">:=&lt;/span> &lt;span style="color:#a6e22e">loadLocation&lt;/span>(&lt;span style="color:#a6e22e">tz&lt;/span>, []&lt;span style="color:#66d9ef">string&lt;/span>{&lt;span style="color:#e6db74">&amp;#34;&amp;#34;&lt;/span>}); &lt;span style="color:#a6e22e">err&lt;/span> &lt;span style="color:#f92672">==&lt;/span> &lt;span style="color:#66d9ef">nil&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">localLoc&lt;/span> = &lt;span style="color:#f92672">*&lt;/span>&lt;span style="color:#a6e22e">z&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> &lt;span style="color:#a6e22e">tz&lt;/span> &lt;span style="color:#f92672">==&lt;/span> &lt;span style="color:#e6db74">&amp;#34;/etc/localtime&amp;#34;&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">localLoc&lt;/span>.&lt;span style="color:#a6e22e">name&lt;/span> = &lt;span style="color:#e6db74">&amp;#34;Local&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> } &lt;span style="color:#66d9ef">else&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">localLoc&lt;/span>.&lt;span style="color:#a6e22e">name&lt;/span> = &lt;span style="color:#a6e22e">tz&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> } &lt;span style="color:#66d9ef">else&lt;/span> &lt;span style="color:#66d9ef">if&lt;/span> &lt;span style="color:#a6e22e">tz&lt;/span> &lt;span style="color:#f92672">!=&lt;/span> &lt;span style="color:#e6db74">&amp;#34;&amp;#34;&lt;/span> &lt;span style="color:#f92672">&amp;amp;&amp;amp;&lt;/span> &lt;span style="color:#a6e22e">tz&lt;/span> &lt;span style="color:#f92672">!=&lt;/span> &lt;span style="color:#e6db74">&amp;#34;UTC&amp;#34;&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> &lt;span style="color:#a6e22e">z&lt;/span>, &lt;span style="color:#a6e22e">err&lt;/span> &lt;span style="color:#f92672">:=&lt;/span> &lt;span style="color:#a6e22e">loadLocation&lt;/span>(&lt;span style="color:#a6e22e">tz&lt;/span>, &lt;span style="color:#a6e22e">platformZoneSources&lt;/span>); &lt;span style="color:#a6e22e">err&lt;/span> &lt;span style="color:#f92672">==&lt;/span> &lt;span style="color:#66d9ef">nil&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">localLoc&lt;/span> = &lt;span style="color:#f92672">*&lt;/span>&lt;span style="color:#a6e22e">z&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// Fall back to UTC.&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">localLoc&lt;/span>.&lt;span style="color:#a6e22e">name&lt;/span> = &lt;span style="color:#e6db74">&amp;#34;UTC&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>首先检查是否设置了 &lt;code>TZ&lt;/code> 环境变量&lt;/p></description></item><item><title>SQLite3</title><link>/posts/sqlite3/</link><pubDate>Tue, 14 Dec 2021 10:33:14 +0800</pubDate><guid>/posts/sqlite3/</guid><description>&lt;h2 id="rollback日志模式下的五种锁状态介绍">
 rollback日志模式下的五种锁状态介绍
 &lt;a class="anchor" href="#rollback%e6%97%a5%e5%bf%97%e6%a8%a1%e5%bc%8f%e4%b8%8b%e7%9a%84%e4%ba%94%e7%a7%8d%e9%94%81%e7%8a%b6%e6%80%81%e4%bb%8b%e7%bb%8d">#&lt;/a>
&lt;/h2>
&lt;ul>
&lt;li>&lt;code>UNLOCKED&lt;/code>
&lt;ul>
&lt;li>没锁状态&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;code>SHARED&lt;/code>
&lt;ul>
&lt;li>获取&lt;code>SHARED&lt;/code>锁才能执行读操作，一个数据库可同时存在多个&lt;code>SHARED&lt;/code>锁&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;code>RESERVED&lt;/code>
&lt;ul>
&lt;li>获取&lt;code>RESERVED&lt;/code>锁才能在未来写数据库，一个数据库同一时间只能存在一个&lt;code>RESERVED&lt;/code>锁&lt;/li>
&lt;li>有&lt;code>RESERVED&lt;/code>锁时说明还没开始写，所以有&lt;code>RESERVED&lt;/code>锁时可以获取新的&lt;code>SHARED&lt;/code>锁&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;code>PENDING&lt;/code>
&lt;ul>
&lt;li>有&lt;code>PENDING&lt;/code>锁意味着要开始写了，但是此时有其他连接拥有&lt;code>SHARED&lt;/code>锁在读数据，此时写操作只能等待所有&lt;code>SHARED&lt;/code>释放。&lt;/li>
&lt;li>&lt;code>PENDING&lt;/code>阻塞其他连接获取新的&lt;code>SHARED&lt;/code>锁，当&lt;code>SHARED&lt;/code>锁释放完时转为&lt;code>EXCLUSIVE&lt;/code>锁开始写操作。&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;code>EXCLUSIVE&lt;/code>
&lt;ul>
&lt;li>同一时间只能存在一个&lt;code>EXCLUSIVE&lt;/code>锁，并且有&lt;code>EXCLUSIVE&lt;/code>锁存在时不允许其他任何锁类型存在。&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;p>所以总结一下就是读读可并发，读写不可并发，写写不可并发。&lt;/p>
&lt;h2 id="优化篇">
 优化篇
 &lt;a class="anchor" href="#%e4%bc%98%e5%8c%96%e7%af%87">#&lt;/a>
&lt;/h2>
&lt;h3 id="sqlite_busy-问题">
 &lt;code>SQLITE_BUSY&lt;/code> 问题
 &lt;a class="anchor" href="#sqlite_busy-%e9%97%ae%e9%a2%98">#&lt;/a>
&lt;/h3>
&lt;p>看到上面这么多锁不能共存的情况应该会想到，冲突会很频繁，如 &lt;code>EXCLUSIVE&lt;/code> 锁存在时不允许其他连接获取任何锁，当其他进程需要读写操作时就会获取锁失败，立即报 &lt;code>SQLITE_BUSY&lt;/code> 错误。&lt;/p>
&lt;p>设置 &lt;code>busy_timeout&lt;/code> 就不会立即返回 &lt;code>SQLITE_BUSY&lt;/code>，会定时retry失败的操作，如果在设置的 &lt;code>busy_timeout&lt;/code> 时间内还没执行成功，依然会返回 &lt;code>SQLITE_BUSY&lt;/code>。&lt;/p>
&lt;p>使用不同sqlite驱动，设置 &lt;code>busy_timeout&lt;/code> 的方式不同&lt;/p>
&lt;ul>
&lt;li>modernc.org/sqlite &lt;code>database.db?_pragma=busy_timeout%3d50000&lt;/code>&lt;/li>
&lt;li>github.com/mattn/go-sqlite3 &lt;code>database.db?_busy_timeout=50000&lt;/code>&lt;/li>
&lt;/ul>
&lt;p>Shared cache mode 支持 table level locks，暂时还没研究。&lt;/p>
&lt;h3 id="针对写操作慢的问题">
 针对写操作慢的问题
 &lt;a class="anchor" href="#%e9%92%88%e5%af%b9%e5%86%99%e6%93%8d%e4%bd%9c%e6%85%a2%e7%9a%84%e9%97%ae%e9%a2%98">#&lt;/a>
&lt;/h3>
&lt;p>解决方案：将多个写操作放入一个事务里执行。sqlite官方&lt;a href="https://www.sqlite.org/faq.html#q19">FAQ&lt;/a>对其解释如下&lt;/p>
&lt;blockquote>
&lt;p>(19) INSERT is really slow - I can only do few dozen INSERTs per second
Actually, SQLite will easily do 50,000 or more INSERT statements per second on an average desktop computer. But it will only do a few dozen transactions per second. Transaction speed is limited by the rotational speed of your disk drive. A transaction normally requires two complete rotations of the disk platter, which on a 7200RPM disk drive limits you to about 60 transactions per second.
Transaction speed is limited by disk drive speed because (by default) SQLite actually waits until the data really is safely stored on the disk surface before the transaction is complete. That way, if you suddenly lose power or if your OS crashes, your data is still safe. For details, read about &lt;a href="https://www.sqlite.org/atomiccommit.html">atomic commit in SQLite..&lt;/a>
By default, each INSERT statement is its own transaction. But if you surround multiple INSERT statements with BEGIN&amp;hellip;COMMIT then all the inserts are grouped into a single transaction. The time needed to commit the transaction is amortized over all the enclosed insert statements and so the time per insert statement is greatly reduced.
Another option is to run PRAGMA synchronous=OFF. This command will cause SQLite to not wait on data to reach the disk surface, which will make write operations appear to be much faster. But if you lose power in the middle of a transaction, your database file might go corrupt.&lt;/p></description></item><item><title>Vim Tricks</title><link>/posts/vim-tricks/</link><pubDate>Wed, 24 Nov 2021 21:45:54 +0800</pubDate><guid>/posts/vim-tricks/</guid><description>&lt;h2 id="批量替换">
 批量替换
 &lt;a class="anchor" href="#%e6%89%b9%e9%87%8f%e6%9b%bf%e6%8d%a2">#&lt;/a>
&lt;/h2>
&lt;p>批量替换 v1.6.1 为 v2.7.0&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>:%s/v1.6.1/v2.7.0/g
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="两行合为一行">
 两行合为一行
 &lt;a class="anchor" href="#%e4%b8%a4%e8%a1%8c%e5%90%88%e4%b8%ba%e4%b8%80%e8%a1%8c">#&lt;/a>
&lt;/h2>
&lt;p>&lt;code>NORMAL&lt;/code> 模式下按 &lt;code>shift + j&lt;/code> 就会将光标下一行合并到当前行行尾&lt;/p></description></item><item><title>减小go程序编译后的体积</title><link>/posts/go-app-reduce-size/</link><pubDate>Mon, 22 Nov 2021 10:29:02 +0800</pubDate><guid>/posts/go-app-reduce-size/</guid><description>&lt;h2 id="编译经典程序">
 编译经典程序
 &lt;a class="anchor" href="#%e7%bc%96%e8%af%91%e7%bb%8f%e5%85%b8%e7%a8%8b%e5%ba%8f">#&lt;/a>
&lt;/h2>
&lt;h3 id="程序代码">
 程序代码
 &lt;a class="anchor" href="#%e7%a8%8b%e5%ba%8f%e4%bb%a3%e7%a0%81">#&lt;/a>
&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-golang" data-lang="golang">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">package&lt;/span> &lt;span style="color:#a6e22e">main&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#e6db74">&amp;#34;fmt&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">func&lt;/span> &lt;span style="color:#a6e22e">main&lt;/span>() {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">fmt&lt;/span>.&lt;span style="color:#a6e22e">Println&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;Hello World.&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="编译环境">
 编译环境
 &lt;a class="anchor" href="#%e7%bc%96%e8%af%91%e7%8e%af%e5%a2%83">#&lt;/a>
&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>$ go version
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>go version go1.16.7 linux/amd64
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="0-直接编译">
 0. 直接编译
 &lt;a class="anchor" href="#0-%e7%9b%b4%e6%8e%a5%e7%bc%96%e8%af%91">#&lt;/a>
&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>$ go build -o helloword main.go
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$ ls -lh helloword 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>-rwxrwxr-x &lt;span style="color:#ae81ff">1&lt;/span> gobai gobai 1.9M Nov &lt;span style="color:#ae81ff">23&lt;/span> 09:34 helloword
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="1-修改编译选项">
 1. 修改编译选项
 &lt;a class="anchor" href="#1-%e4%bf%ae%e6%94%b9%e7%bc%96%e8%af%91%e9%80%89%e9%a1%b9">#&lt;/a>
&lt;/h2>
&lt;p>除去编译时带的符号表和调试信息&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>$ go build -ldflags&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;-s -w&amp;#34;&lt;/span> -o helloword main.go
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$ ls -lh helloword 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>-rwxrwxr-x &lt;span style="color:#ae81ff">1&lt;/span> gobai gobai 1.3M Nov &lt;span style="color:#ae81ff">23&lt;/span> 09:38 helloword
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="2-使用-upx">
 2. 使用 &lt;code>UPX&lt;/code>
 &lt;a class="anchor" href="#2-%e4%bd%bf%e7%94%a8-upx">#&lt;/a>
&lt;/h2>
&lt;p>对直接编译出的二进制使用 &lt;a href="https://github.com/upx/upx">upx&lt;/a> 进一步压缩&lt;/p></description></item><item><title>About Systemd</title><link>/posts/systemd-journal/</link><pubDate>Sun, 14 Nov 2021 01:47:04 +0800</pubDate><guid>/posts/systemd-journal/</guid><description>&lt;p>记录一下查看和操作 &lt;code>systemd&lt;/code> 日志的几个常用命令&lt;/p>
&lt;h2 id="常用过滤日志日志的命令">
 常用过滤日志日志的命令
 &lt;a class="anchor" href="#%e5%b8%b8%e7%94%a8%e8%bf%87%e6%bb%a4%e6%97%a5%e5%bf%97%e6%97%a5%e5%bf%97%e7%9a%84%e5%91%bd%e4%bb%a4">#&lt;/a>
&lt;/h2>
&lt;h3 id="根据时间约束过滤日志">
 根据时间约束过滤日志
 &lt;a class="anchor" href="#%e6%a0%b9%e6%8d%ae%e6%97%b6%e9%97%b4%e7%ba%a6%e6%9d%9f%e8%bf%87%e6%bb%a4%e6%97%a5%e5%bf%97">#&lt;/a>
&lt;/h3>
&lt;h4 id="获取-2023-01-15-000000-之后的日志">
 获取 &lt;code>2023-01-15 00:00:00&lt;/code> 之后的日志
 &lt;a class="anchor" href="#%e8%8e%b7%e5%8f%96-2023-01-15-000000-%e4%b9%8b%e5%90%8e%e7%9a%84%e6%97%a5%e5%bf%97">#&lt;/a>
&lt;/h4>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>journalctl --since &lt;span style="color:#e6db74">&amp;#39;2023-01-15 00:00:00&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h4 id="获取-2023-01-15-000000-之后-2023-01-15-120000-之前的日志">
 获取 &lt;code>2023-01-15 00:00:00&lt;/code> 之后, &lt;code>2023-01-15 12:00:00&lt;/code> 之前的日志
 &lt;a class="anchor" href="#%e8%8e%b7%e5%8f%96-2023-01-15-000000-%e4%b9%8b%e5%90%8e-2023-01-15-120000-%e4%b9%8b%e5%89%8d%e7%9a%84%e6%97%a5%e5%bf%97">#&lt;/a>
&lt;/h4>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>journalctl --since &lt;span style="color:#e6db74">&amp;#39;2023-01-15 00:00:00&amp;#39;&lt;/span> --until &lt;span style="color:#e6db74">&amp;#39;2023-01-15 12:00:00&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="只查看一个服务unit的日志">
 只查看一个服务(Unit)的日志
 &lt;a class="anchor" href="#%e5%8f%aa%e6%9f%a5%e7%9c%8b%e4%b8%80%e4%b8%aa%e6%9c%8d%e5%8a%a1unit%e7%9a%84%e6%97%a5%e5%bf%97">#&lt;/a>
&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>journalctl -u nginx
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="自由组合约束条件">
 自由组合约束条件
 &lt;a class="anchor" href="#%e8%87%aa%e7%94%b1%e7%bb%84%e5%90%88%e7%ba%a6%e6%9d%9f%e6%9d%a1%e4%bb%b6">#&lt;/a>
&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>journalctl -u nginx --since &lt;span style="color:#e6db74">&amp;#39;2023-01-15 00:00:00&amp;#39;&lt;/span> --until &lt;span style="color:#e6db74">&amp;#39;2023-01-15 12:00:00&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="查看日志占用磁盘量">
 查看日志占用磁盘量
 &lt;a class="anchor" href="#%e6%9f%a5%e7%9c%8b%e6%97%a5%e5%bf%97%e5%8d%a0%e7%94%a8%e7%a3%81%e7%9b%98%e9%87%8f">#&lt;/a>
&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>journalctl --disk-usage
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>Output
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Archived and active journals take up 3.9G in the file system.
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="删除旧的日志">
 删除旧的日志
 &lt;a class="anchor" href="#%e5%88%a0%e9%99%a4%e6%97%a7%e7%9a%84%e6%97%a5%e5%bf%97">#&lt;/a>
&lt;/h2>
&lt;h3 id="只保留最近-一个月-的日志">
 只保留最近 &lt;code>一个月&lt;/code> 的日志
 &lt;a class="anchor" href="#%e5%8f%aa%e4%bf%9d%e7%95%99%e6%9c%80%e8%bf%91-%e4%b8%80%e4%b8%aa%e6%9c%88-%e7%9a%84%e6%97%a5%e5%bf%97">#&lt;/a>
&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>journalctl --vacuum-time&lt;span style="color:#f92672">=&lt;/span>1month
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="只保留最近-1g-的日志">
 只保留最近 &lt;code>1G&lt;/code> 的日志
 &lt;a class="anchor" href="#%e5%8f%aa%e4%bf%9d%e7%95%99%e6%9c%80%e8%bf%91-1g-%e7%9a%84%e6%97%a5%e5%bf%97">#&lt;/a>
&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>journalctl --vacuum-size&lt;span style="color:#f92672">=&lt;/span>1G
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="列出所有systemd服务">
 列出所有systemd服务
 &lt;a class="anchor" href="#%e5%88%97%e5%87%ba%e6%89%80%e6%9c%89systemd%e6%9c%8d%e5%8a%a1">#&lt;/a>
&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>systemctl list-units --type&lt;span style="color:#f92672">=&lt;/span>service --all
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>Git Tricks</title><link>/posts/git-tricks/</link><pubDate>Fri, 12 Nov 2021 15:36:19 +0800</pubDate><guid>/posts/git-tricks/</guid><description>&lt;h2 id="暂存当前代码改动">
 暂存当前代码改动
 &lt;a class="anchor" href="#%e6%9a%82%e5%ad%98%e5%bd%93%e5%89%8d%e4%bb%a3%e7%a0%81%e6%94%b9%e5%8a%a8">#&lt;/a>
&lt;/h2>
&lt;p>场景是在一个git branch写了不少代码以后发现写错分支了，总不能删了再重新写吧，可以使用 &lt;code>git stash&lt;/code> 命令解决。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 将当前改动的代码暂存&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>git stash
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># git checkout 到你要工作的分支&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>git checkout your_workspace_branch
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 把暂存的代码从堆栈弹出到当前分支&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>git stash pop
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>友链</title><link>/posts/links/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/posts/links/</guid><description>&lt;style>
 .friend-link {
 display: flex;
 align-items: center;
 padding: 12px;
 margin: 8px;
 border: 1px solid #eee;
 border-radius: 8px;
 text-decoration: none;
 color: inherit;
 transition: 0.3s;
 }
 .friend-link:hover {
 box-shadow: 0 2px 8px rgba(0,0,0,0.1);
 }
 .friend-avatar {
 width: 40px;
 height: 40px;
 border-radius: 50%;
 margin-right: 12px;
 }
 .friend-info {
 display: flex;
 flex-direction: column;
 }
 .friend-desc {
 font-size: 14px;
 color: #666;
 margin-top: 4px;
 }
&lt;/style>
&lt;div class="friend-links">
 &lt;a href="https://blog.cugxuan.cn/" target="_blank" class="friend-link">
 &lt;img src="https://image.cugxuan.cn/avater.jpg" alt="avatar" class="friend-avatar">
 &lt;div class="friend-info">
 &lt;span>泫&lt;/span>
 &lt;span class="friend-desc">公众号【泫言】：记录有意思的东西，聊点技术（Go/C++/Linux），偶尔安利数码产品，讲讲思考。&lt;/span>
 &lt;/div>
 &lt;/a>
&lt;/div></description></item></channel></rss>