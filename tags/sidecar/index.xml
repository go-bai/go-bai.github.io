<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Sidecar on gobai's blog</title><link>/tags/sidecar/</link><description>Recent content in Sidecar on gobai's blog</description><generator>Hugo</generator><language>en-us</language><lastBuildDate>Sun, 12 May 2024 14:37:18 +0800</lastBuildDate><atom:link href="/tags/sidecar/index.xml" rel="self" type="application/rss+xml"/><item><title>Kubevirt Hook Sidecar</title><link>/posts/kubevirt-sidecar/</link><pubDate>Sun, 12 May 2024 14:37:18 +0800</pubDate><guid>/posts/kubevirt-sidecar/</guid><description>简介 背景 在kubevirt中, 通过vmi的spec没办法涵盖所有的libvirt domain xml元素, 所以有了hook sidecar功能来允许我们在define domain之前自定义domainSpecXML
功能介绍 在kubevirt中, Hook Sidecar容器是sidecar container(和main application container跑在同一个pod中)用来在vm初始化完成前执行一些自定义操作.
sidecar container与main container(compute)通过gRPC通讯, 有两种主要的sidecar hooks
OnDefineDomain: 这个hook帮助自定义libvirt的XML, 并通过gRPC协议返回最新的XML以创建vm preCloudInitIso: 这个hook帮助定义cloud-init配置, 它运行并返回最新的cloud-init data Shutdown: 这个是v1alpha3版本才支持的 使用hook sidecar功能需要在kv.spec.configuration.developerConfiguration.featureGates中开启Sidecar功能
源码分析 kubevirt-boot-sidecar介绍 以下以kubevirt-boot-sidecar为例讲述sidecar的工作流程, 这个sidecar支持修改引导设备顺序(boot)和开启交互式引导菜单(bootmenu)
kubevirt-boot-sidecar只实现了OnDefineDomain, 下面也是主要串一下OnDefineDomain相关的
sidecar工作流程 virt-launcher刚启动时收集所有sidecar信息 // cmd/virt-launcher/virt-launcher.go func main() { hookSidecars := pflag.Uint(&amp;quot;hook-sidecars&amp;quot;, 0, &amp;quot;Number of requested hook sidecars, virt-launcher will wait for all of them to become available&amp;quot;) // 收集所有sidecar的信息 err := hookManager.Collect(*hookSidecars, *qemuTimeout) // 启动 cmd server, 这里面有 SyncVirtualMachine 方法, 具体的实现在 func (l *LibvirtDomainManager) SyncVMI // virt-handler在初始化完虚拟机硬盘等之后会通过 SyncVirtualMachine 调用SyncVMI函数开始创建domain // SyncVMI将vmi spec转换为domainSpec, 然后调用hooksManager.</description></item></channel></rss>