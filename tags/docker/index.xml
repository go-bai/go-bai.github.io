<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Docker on gobai's blog</title><link>/tags/docker/</link><description>Recent content in Docker on gobai's blog</description><generator>Hugo</generator><language>en-us</language><lastBuildDate>Sat, 18 Feb 2023 16:12:01 +0800</lastBuildDate><atom:link href="/tags/docker/index.xml" rel="self" type="application/rss+xml"/><item><title>解决Go应用在容器中的时区问题</title><link>/posts/solve-timezone-issue-in-go-application-in-container/</link><pubDate>Sat, 18 Feb 2023 16:12:01 +0800</pubDate><guid>/posts/solve-timezone-issue-in-go-application-in-container/</guid><description>容器中的时区问题 应用直接运行在服务器上需要设置服务器时区为东八区，现在很多应用都是部署在容器中了，同样也是要设置容器镜像的时区。
许多容器镜像默认时区为 UTC (Coordinated Universal Time 协调世界时)，比东八区慢八个小时，当程序涉及数据库写入操作或者日志记录等功能时就会有时间差。
常规解决方案一般两大类
build docker镜像时就把镜像内的时区设置为 Asia/Shanghai 运行容器时把本地时区正常的主机的时区配置文件挂载到容器。 看一下 Go 是如何读取时区文件并设置 time.Time 的时区的 Go 源码 src/time/zoneinfo_unix.go 中代码和注释都很清晰👍
package time import ( &amp;quot;syscall&amp;quot; ) // Many systems use /usr/share/zoneinfo, Solaris 2 has // /usr/share/lib/zoneinfo, IRIX 6 has /usr/lib/locale/TZ, // NixOS has /etc/zoneinfo. var platformZoneSources = []string{ &amp;quot;/usr/share/zoneinfo/&amp;quot;, &amp;quot;/usr/share/lib/zoneinfo/&amp;quot;, &amp;quot;/usr/lib/locale/TZ/&amp;quot;, &amp;quot;/etc/zoneinfo&amp;quot;, } func initLocal() { // consult $TZ to find the time zone to use. // no $TZ means use the system default /etc/localtime.</description></item></channel></rss>