<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>linux on gobai's blog</title><link>/tags/linux/</link><description>Recent content in linux on gobai's blog</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Sat, 06 Jan 2024 17:38:38 +0800</lastBuildDate><atom:link href="/tags/linux/index.xml" rel="self" type="application/rss+xml"/><item><title>OpenWrt</title><link>/posts/openwrt/</link><pubDate>Sat, 06 Jan 2024 17:38:38 +0800</pubDate><guid>/posts/openwrt/</guid><description>很久没折腾OpenWrt了, 囊中羞涩, 没有其他合适的设备, 这次是在KVM虚机中运行使用(ALL IN BOOM!)
准备qcow2镜像 首先下载最新的镜像, 截止目前最新版为23.05.2, 我这里下载的是x86-64的镜像
wget https://downloads.openwrt.org/releases/23.05.2/targets/x86/64/openwrt-23.05.2-x86-64-generic-ext4-combined.img.gz # 解压 gunzip openwrt-23.05.2-x86-64-generic-ext4-combined.img.gz # 这里因为我要作为KVM虚拟机的镜像, 所以转换为qcow2格式. 如果是在物理机上部署, 可以直接直接刷到U盘上. qemu-img convert -f raw openwrt-23.05.2-x86-64-generic-ext4-combined.img -O qcow2 openwrt.qcow2 # 默认virtual size只有120 MiB, 担心不够用所以增加到1GiB qemu-img resize openwrt.qcow2 +904M 运行虚机 我这里将镜像复制到了/var/lib/libvirt/disks/目录下
cp openwrt.qcow2 /var/lib/libvirt/disks/ 使用virt-install运行,
# 运行, 这里网络指定的之前文章中创建的网桥网络br0 virt-install --name openwrt --memory 256 --vcpus 1 --network bridge=br0,model=e1000 --disk path=/var/lib/libvirt/disks/openwrt.qcow2,bus=ide --import --autostart --osinfo detect=on,require=off --graphics vnc,listen=0.0.0.0 --noautoconsole 配置网络 连接console配置网络
virsh console openwrt 修改网络配置文件 /etc/config/network 只修改了lan配置, 其他都是默认的 具体修改了lan配置的ipaddr, 增加gateway和dns</description></item><item><title>dhclient</title><link>/posts/dhclient/</link><pubDate>Mon, 09 Oct 2023 21:37:55 +0800</pubDate><guid>/posts/dhclient/</guid><description>在机器上使用netplan+NetworkManager配置bridged network之后
最近经常电脑用着用着就不能联网了，发现enp1s0总是偶尔冒出一个ipv4地址，并且路由表会多出一个从enp1s0出去的default路由。后来看journalctl日志发现是dhclient搞的事情(学艺不精, 没第一时间联系起来)。
下面是部分日志：
➜ ~ journalctl -n 1000000 | grep '192.168.1.22\|enp1s0' ... 10月 09 20:14:25 gobai-SER dhclient[107299]: DHCPREQUEST for 192.168.1.22 on enp1s0 to 255.255.255.255 port 67 (xid=0x4745a8ce) 10月 09 20:14:26 gobai-SER dhclient[73666]: DHCPREQUEST for 192.168.1.22 on enp1s0 to 255.255.255.255 port 67 (xid=0x2cfc74b3) 10月 09 20:14:26 gobai-SER dhclient[157839]: DHCPREQUEST for 192.168.1.22 on enp1s0 to 255.255.255.255 port 67 (xid=0x453b8549) 10月 09 20:14:28 gobai-SER dhclient[170251]: DHCPREQUEST for 192.168.1.22 on enp1s0 to 255.</description></item><item><title>Creating a bridged network with netplan on Ubuntu 22.04</title><link>/posts/creating-a-bridged-network-with-netplan-on-ubuntu-22-04/</link><pubDate>Wed, 04 Oct 2023 13:01:59 +0800</pubDate><guid>/posts/creating-a-bridged-network-with-netplan-on-ubuntu-22-04/</guid><description>本地LAN环境
LAN网关 192.168.1.1 子网掩码 255.255.255.0 DHCP范围 192.168.1.2-192.168.32 创建一个bridged network 创建一个网桥br0给虚机使用，使得虚机和其他设备都在一个LAN下
总配置(netplan get)如下:
network: version: 2 renderer: NetworkManager ethernets: enp1s0: dhcp4: false dhcp6: false bridges: br0: addresses: - &amp;quot;192.168.1.100/24&amp;quot; nameservers: addresses: - 192.168.1.1 dhcp4: false dhcp6: false interfaces: - enp1s0 parameters: stp: false routes: - to: &amp;quot;default&amp;quot; via: &amp;quot;192.168.1.1&amp;quot; 由三个文件组成:
/etc/netplan/01-network-manager-all.yaml # Let NetworkManager manage all devices on this system network: version: 2 renderer: NetworkManager /etc/netplan/10-ethernet-enp1s0.yaml network: ethernets: enp1s0: dhcp4: false dhcp6: false /etc/netplan/99-bridged-network-br0.</description></item><item><title>删除分区并扩容另一个分区和根文件系统</title><link>/posts/delete-partition-and-expand-another/</link><pubDate>Mon, 02 Oct 2023 16:54:05 +0800</pubDate><guid>/posts/delete-partition-and-expand-another/</guid><description>现在要将 /dev/sda3 分区删掉并扩容到 /dev/sda2, 并且在不重启服务器的情况下扩容根文件系统(跟文件系统 / 挂载在 /dev/sda2 上, 并且 filesystem 是 ext4)
磁盘初始分区和挂载情况 ➜ ~ lsblk /dev/sda NAME MAJ:MIN RM SIZE RO TYPE MOUNTPOINT sda 8:0 0 100G 0 disk ├─sda1 8:1 0 512M 0 part /boot/efi ├─sda2 8:2 0 98.5G 0 part / └─sda3 8:3 0 976M 0 part ➜ ~ fdisk -l /dev/sda Disk /dev/sda: 100 GiB, 107374182400 bytes, 209715200 sectors Disk model: BlockVolume Units: sectors of 1 * 512 = 512 bytes Sector size (logical/physical): 512 bytes / 4096 bytes I/O size (minimum/optimal): 4096 bytes / 1048576 bytes Disklabel type: gpt Disk identifier: 40BED670-8B91-4520-9785-DB1F1035C039 Device Start End Sectors Size Type /dev/sda1 2048 1050623 1048576 512M EFI System /dev/sda2 1050624 207714303 206663680 98.</description></item><item><title>Linux I/O Redirection</title><link>/posts/io-redirection/</link><pubDate>Sat, 23 Sep 2023 09:06:09 +0800</pubDate><guid>/posts/io-redirection/</guid><description/></item><item><title>Linux jq Command</title><link>/posts/jq-command/</link><pubDate>Sat, 09 Sep 2023 15:04:05 +0800</pubDate><guid>/posts/jq-command/</guid><description>jq命令对于api boy还是挺常用的，在此记录一下一些常用的操作。</description></item><item><title>About Systemd</title><link>/posts/systemd-journal/</link><pubDate>Sun, 14 Nov 2021 01:47:04 +0800</pubDate><guid>/posts/systemd-journal/</guid><description>记录一下查看和操作 systemd 日志的几个常用命令
1 常用过滤日志日志的命令 1.1 根据时间约束过滤日志 1.1.1 获取 2023-01-15 00:00:00 之后的日志 journalctl --since '2023-01-15 00:00:00' 1.1.2 获取 2023-01-15 00:00:00 之后, 2023-01-15 12:00:00 之前的日志 journalctl --since '2023-01-15 00:00:00' --until '2023-01-15 12:00:00' 1.2 只查看一个服务(Unit)的日志 journalctl -u nginx 1.3 自由组合约束条件 journalctl -u nginx --since '2023-01-15 00:00:00' --until '2023-01-15 12:00:00' 2 查看日志占用磁盘量 journalctl --disk-usage Output Archived and active journals take up 3.9G in the file system. 3 删除旧的日志 3.1 只保留最近 一个月 的日志 journalctl --vacuum-time=1month 3.</description></item></channel></rss>