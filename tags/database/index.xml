<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Database on gobai's blog</title><link>/tags/database/</link><description>Recent content in Database on gobai's blog</description><generator>Hugo</generator><language>en-us</language><lastBuildDate>Sat, 09 Mar 2024 10:49:09 +0800</lastBuildDate><atom:link href="/tags/database/index.xml" rel="self" type="application/rss+xml"/><item><title>sqlx vs xorm</title><link>/posts/sqlx-vs-xorm/</link><pubDate>Sat, 09 Mar 2024 10:49:09 +0800</pubDate><guid>/posts/sqlx-vs-xorm/</guid><description>&lt;h2 id="初始化演示环境">初始化演示环境&lt;/h2>
&lt;h3 id="使用docker部署">使用docker部署&lt;/h3>
&lt;p>部署的当前时间最新版本&lt;code>postgres:16.2&lt;/code>&lt;/p>
&lt;pre>&lt;code class="language-bash">docker run -d --name pgsql \
 -e POSTGRES_USER=admin \
 -e POSTGRES_PASSWORD=admin \
 -e POSTGRES_DB=testdb \
 -p 15432:5432 \
 postgres:16.2
&lt;/code>&lt;/pre>
&lt;h3 id="使用psql连接">使用&lt;code>psql&lt;/code>连接&lt;/h3>
&lt;pre>&lt;code class="language-bash">docker exec -it pgsql psql -U admin -d testdb
&lt;/code>&lt;/pre>
&lt;h3 id="初始化uservps和host表">初始化&lt;code>user&lt;/code>,&lt;code>vps&lt;/code>和&lt;code>host&lt;/code>表&lt;/h3>
&lt;pre>&lt;code class="language-sql">CREATE TABLE &amp;quot;user&amp;quot; (
 id bigserial PRIMARY KEY,
 username VARCHAR(255) NOT NULL,
 password VARCHAR(255) NOT NULL
);
CREATE TABLE &amp;quot;host&amp;quot; (
 id bigserial PRIMARY KEY,
 hostname VARCHAR(255) NOT NULL
);
CREATE TABLE &amp;quot;vps&amp;quot; (
 id bigserial PRIMARY KEY,
 user_id bigint NOT NULL,
 host_id bigint NOT NULL,
 name VARCHAR(255) NOT NULL,
 sys_disk jsonb NOT NULL DEFAULT '{}'
);
&lt;/code>&lt;/pre>
&lt;h3 id="查看创建出的表">查看创建出的表&lt;/h3>
&lt;pre>&lt;code class="language-bash">testdb=# \z
 Access privileges
 Schema | Name | Type | Access privileges | Column privileges | Policies
--------+-------------+----------+-------------------+-------------------+----------
 public | host | table | | |
 public | host_id_seq | sequence | | |
 public | user | table | | |
 public | user_id_seq | sequence | | |
 public | vps | table | | |
 public | vps_id_seq | sequence | | |
(6 rows)

testdb=# \d user
 Table &amp;quot;public.user&amp;quot;
 Column | Type | Collation | Nullable | Default
----------+------------------------+-----------+----------+----------------------------------
 id | bigint | | not null | nextval('user_id_seq'::regclass)
 username | character varying(255) | | not null |
 password | character varying(255) | | not null |
Indexes:
 &amp;quot;user_pkey&amp;quot; PRIMARY KEY, btree (id)

testdb=# \d host
 Table &amp;quot;public.host&amp;quot;
 Column | Type | Collation | Nullable | Default
----------+------------------------+-----------+----------+----------------------------------
 id | bigint | | not null | nextval('host_id_seq'::regclass)
 hostname | character varying(255) | | not null |
Indexes:
 &amp;quot;host_pkey&amp;quot; PRIMARY KEY, btree (id)

testdb=# \d vps
 Table &amp;quot;public.vps&amp;quot;
 Column | Type | Collation | Nullable | Default
----------+------------------------+-----------+----------+---------------------------------
 id | bigint | | not null | nextval('vps_id_seq'::regclass)
 user_id | bigint | | not null |
 host_id | bigint | | not null |
 name | character varying(255) | | not null |
 sys_disk | jsonb | | not null | '{}'::jsonb
Indexes:
 &amp;quot;vps_pkey&amp;quot; PRIMARY KEY, btree (id)
&lt;/code>&lt;/pre>
&lt;h3 id="初始化数据">初始化数据&lt;/h3>
&lt;pre>&lt;code class="language-sql">-- 插入用户数据
INSERT INTO &amp;quot;user&amp;quot; (username, password) VALUES
 ('user1', 'password1'),
 ('user2', 'password2');

-- 插入主机数据
INSERT INTO &amp;quot;host&amp;quot; (hostname) VALUES
 ('host1'),
 ('host2');

-- user1 在 host1 上创建一个 VPS
INSERT INTO &amp;quot;vps&amp;quot; (user_id, host_id, name, sys_disk) VALUES
 ((SELECT id FROM &amp;quot;user&amp;quot; WHERE username = 'user1'), (SELECT id FROM host WHERE hostname = 'host1'), 'vps_user1_host1', '{&amp;quot;disk_size&amp;quot;: 50}');

-- user2 在 host1 上创建一个 VPS
INSERT INTO &amp;quot;vps&amp;quot; (user_id, host_id, name, sys_disk) VALUES
 ((SELECT id FROM &amp;quot;user&amp;quot; WHERE username = 'user2'), (SELECT id FROM host WHERE hostname = 'host1'), 'vps_user2_host1', '{&amp;quot;disk_size&amp;quot;: 60}');

-- user1 在 host2 上创建一个 VPS
INSERT INTO &amp;quot;vps&amp;quot; (user_id, host_id, name, sys_disk) VALUES
 ((SELECT id FROM &amp;quot;user&amp;quot; WHERE username = 'user1'), (SELECT id FROM host WHERE hostname = 'host2'), 'vps_user1_host2', '{&amp;quot;disk_size&amp;quot;: 70}');

-- user2 在 host2 上创建一个 VPS
INSERT INTO &amp;quot;vps&amp;quot; (user_id, host_id, name, sys_disk) VALUES
 ((SELECT id FROM &amp;quot;user&amp;quot; WHERE username = 'user2'), (SELECT id FROM host WHERE hostname = 'host2'), 'vps_user2_host2', '{&amp;quot;disk_size&amp;quot;: 80}');
&lt;/code>&lt;/pre>
&lt;h2 id="关于-databasesql">关于 &lt;code>database/sql&lt;/code>&lt;/h2>
&lt;p>&lt;code>database/sql&lt;/code>提供了操作SQL数据库的通用接口, 需要结合&lt;code>database driver&lt;/code>同时使用, 这里是一些&lt;a href="https://go.dev/wiki/SQLDrivers">驱动列表&lt;/a>&lt;/p></description></item></channel></rss>